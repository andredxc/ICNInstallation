<?xml version="1.0" encoding="utf-8"?>
<netpdl name="nbee.org NetPDL Database" version="0.2" creator="nbee.org" date="29-07-2011">
<protocol name="startproto" longname="Starting Protocol (used for beginning the parsing)" showsumtemplate="startproto">
		<execute-code>
		<init>
			<!-- Alias list -->
			<!-- Please do not change these values, since these are used inside the NetBee code -->
			<alias name="%NOTFOUND" replacewith="0"/>
			<alias name="%FOUND" replacewith="1"/>
			<alias name="%CANDIDATE" replacewith="2"/>
			<alias name="%DEFERRED" replacewith="3"/>

			<!-- NetPDL default variables -->
			<variable name="$linklayer" type="number" validity="static"/>
			<variable name="$framelength" type="number" validity="thispacket"/>
			<variable name="$packetlength" type="number" validity="thispacket"/>
			<variable name="$currentoffset" type="number" validity="thispacket"/>
			<variable name="$currentprotooffset" type="number" validity="thispacket"/>
			<variable name="$timestamp_sec" type="number" validity="thispacket"/>
			<variable name="$timestamp_usec" type="number" validity="thispacket"/>
			<variable name="$packet" type="refbuffer" validity="thispacket"/>
			<variable name="$prevproto" type="protocol" validity="thispacket"/>
			<variable name="$nextproto" type="protocol" validity="thispacket"/>
			<variable name="$protoverify_result" type="number" validity="thispacket"/>

			<!-- Variables for tokenXXX fields; these are updated after each field (of the proper type), so we do not have to reset them at each packet -->
			<variable name="$token_begintlen" type="number" validity="static"/>
			<variable name="$token_fieldlen" type="number" validity="static"/>
			<variable name="$token_endtlen" type="number" validity="static"/>

			<!-- Required configuration variables (usually used for selecting some optional functions in the code) -->
			<variable name="$show_networknames" type="number" validity="static"/>
			<variable name="$enable_servertable" type="number" validity="static" value="0"/>

			<!-- Variables required for L4-L7 processing -->
			<variable name="$ipsrc" type="refbuffer" validity="thispacket"/>
			<variable name="$ipdst" type="refbuffer" validity="thispacket"/>
			<variable name="$L4proto" type="protocol" validity="thispacket"/>
			<variable name="$portsrc" type="refbuffer" validity="thispacket"/>
			<variable name="$portdst" type="refbuffer" validity="thispacket"/>

			<variable name="$firstip" type="refbuffer" validity="thispacket"/>
			<variable name="$secondip" type="refbuffer" validity="thispacket"/>
			<variable name="$firstport" type="refbuffer" validity="thispacket"/>
			<variable name="$secondport" type="refbuffer" validity="thispacket"/>

			<variable name="$type" type="number" validity="thispacket"/>
			<variable name="$proc" type="number" validity="thispacket"/>
			<variable name="$payloadlength" type="number" validity="thispacket" value="0"/>
			
			<variable name="$sess_table_hit" type="number" validity="thispacket" value="0"/>
			<variable name="$ks_table_hit" type="number" validity="thispacket" value="0"/>
			<variable name="$session_hit" type="number" validity="thispacket" value="0"/>

			<!-- Lookup tables for L7 processing -->
			<lookuptable name="$tcpsessiontable" exactentries="50000" maskentries="1000"  validity="dynamic">
				<key name="ipsource" type="buffer" size="16"/>
				<key name="ipdest" type="buffer" size="16"/>
				<key name="tcpsrcport" type="buffer" size="2"/>
				<key name="tcpdstport" type="buffer" size="2"/>
				<data name="nextproto" type="protocol"/>
				<data name="flag" type="number"/>
			</lookuptable>
			<lookuptable name="$udpsessiontable" exactentries="10000" maskentries="1000" validity="dynamic">
				<key name="ipsource" type="buffer" size="16"/>
				<key name="ipdest" type="buffer" size="16"/>
				<key name="tcpsrcport" type="buffer" size="2"/>
				<key name="tcpdstport" type="buffer" size="2"/>
				<data name="nextproto" type="protocol"/>
			</lookuptable>
			<lookuptable name="$rtptable" exactentries="1000" maskentries="0" validity="dynamic">
				<key name="ipsource" type="buffer" size="16"/>
				<key name="ipdest" type="buffer" size="16"/>
				<key name="srcport" type="buffer" size="2"/>
				<key name="dstport" type="buffer" size="2"/>
				<data name="ssrc" type="buffer" size="4"/>
			</lookuptable>
			<lookuptable name="$KnownServerTable" exactentries="10000" maskentries="0" validity="dynamic">
				<key name="ipaddr" type="buffer" size="16"/>
				<key name="port" type="buffer" size="2"/>
				<data name="nextproto" type="protocol"/>				
			</lookuptable>

			<lookuptable name="$CandidateServersTable" exactentries="10000" maskentries="0" validity="dynamic">
				<key name="ipaddr" type="buffer" size="16"/>
				<key name="port" type="buffer" size="2"/>
			</lookuptable>
				
			<lookuptable name="$KnownUDPServerTable" exactentries="10000" maskentries="0" validity="dynamic">
				<key name="ipaddr" type="buffer" size="16"/>
				<key name="port" type="buffer" size="2"/>
				<data name="nextproto" type="protocol"/>				
			</lookuptable>

			<lookuptable name="$skypetempsessiontable" exactentries="10000" maskentries="0" validity="dynamic">
				<key name="ipaddr" type="buffer" size="16"/>
				<key name="port" type="buffer" size="2"/>
				<data name="cnt" type="number" value="0"/>		
				<data name="id" type="buffer" size="2"/>	
			</lookuptable>
			
			<lookuptable name="$SkypeClientTable" exactentries="10000" maskentries="0" validity="dynamic">
				<key name="ipaddr" type="buffer" size="16"/>
				<key name="port" type="buffer" size="2"/>
				<data name="nextproto" type="protocol"/>				
			</lookuptable>

			<lookuptable name="$unknownprotosessiontable" exactentries="50000" maskentries="0" validity="dynamic">
				<key name="ipsource" type="buffer" size="16"/>
				<key name="ipdest" type="buffer" size="16"/>
				<key name="tcpsrcport" type="buffer" size="2"/>
				<key name="tcpdstport" type="buffer" size="2"/>
			</lookuptable>

			<!-- this table contains information about rpc session -->
			<lookuptable name="$rpctable" exactentries="1000" maskentries="0" validity="dynamic">
				<key name="ipsource" type="buffer" size="16"/>
				<key name="ipdest" type="buffer" size="16"/>
				<key name="tcpsrcport" type="buffer" size="2"/>
				<key name="tcpdstport" type="buffer" size="2"/>
				<data name="prog" type="number"/>
				<data name="proc" type="number"/>
				<data name="type" type="number"/>
			</lookuptable>
		</init>
	</execute-code>

	<encapsulation>
			<switch expr="$linklayer">
<!-- Bluetooth -->
<!--
			<case value="1"> <nextproto proto="#hci_packet_type"/> </case>
			<case value="13"> <nextproto proto="#hci"/> </case>
-->
			<case value="1"> <nextproto proto="#ethernet"/> </case>
			<default> <nextproto proto="#ethernet"/> </default>
		</switch>
	</encapsulation>

	<visualization>
		<showsumtemplate name="startproto">
			<section name="NUMBER"/>
			<packethdr value="num"/>

			<section name="TIME"/>
			<packethdr value="timestamp"/>
		</showsumtemplate>
	</visualization>
</protocol>


<protocol name="ethernet" longname="Ethernet 802.3" comment="Ethernet DIX has been included in 802.3" showsumtemplate="ethernet">
	<execute-code>
		<!-- If we're on Ethernet IEEE 802.3, update the packet length -->
		<after when="buf2int(type) le 1500">
			<assign-variable name="$packetlength" value="buf2int(type) + 14"/> <!-- 14 is the size of the ethernet header -->
		</after>
	</execute-code>

	<format>
		<fields>
			<field type="fixed" name="dst" longname="MAC Destination" size="6" showtemplate="MACaddressEth"/>
			<field type="fixed" name="src" longname="MAC Source" size="6" showtemplate="MACaddressEth"/>
			<field type="fixed" name="type" longname="Ethertype - Length" size="2" showtemplate="eth.typelength"/>
		</fields>
	</format>

	<encapsulation>
		<!--
		We have four possible incapsulations for IPX:
		  - Ethernet version II
		    ==> type= 0x8137
		  - Novell-specific framing (raw 802.3)
		    ==> directly in Ethernet; we have to check that the IPX checksum is == 0xFFFF
		  - Ethernet 802.3/802.2 without SNAP
		    ==> directly in SNAP; we have to check that the IPX checksum is == 0xFFFF (after the SNAP header)
		  - Ethernet 802.3/802.2 with SNAP
		    ==> type= 0x8137 (in SNAP)
		See the "IPX Ethernet and FDDI Encapsulation Methods" Cisco doc, at:
		  http://www.cisco.com/en/US/tech/tk389/tk224/technologies_q_and_a_item09186a0080093d2e.shtml
		-->

		<switch expr="buf2int(type)">
			<case value="0x800"> <nextproto proto="#ip"/> </case>
			<case value="0x86DD"> <nextproto proto="#ipv6"/> </case>
			<case value="0x806"> <nextproto proto="#arp"/> </case>
			<case value="0x8864"> <nextproto proto="#pppoe"/> </case>
			<case value="0x8100"> <nextproto proto="#vlan"/> </case>
			<case value="0x8847" comment="mpls-unicast"> <nextproto proto="#mpls"/> </case>
			<case value="0x8848" comment="mpls-multicast"> <nextproto proto="#mpls"/> </case>
		</switch>
	</encapsulation>

	<visualization>
		<showsumtemplate name="ethernet">
			<section name="next"/>
			<text value="Eth: "/>
			<protofield name="src" showdata="showvalue"/>
			<text value=" => "/>
			<protofield name="dst" showdata="showvalue"/>
		</showsumtemplate>
	</visualization>
</protocol>

<protocol name="pptp" longname="PPTP (Point-to-Point Tunnelling Protocol)" showsumtemplate="pptp">
	<execute-code>
		<verify>
			<if expr="buf2int($packet[$currentoffset+4:4]) == 0x1A2B3C4D">
				<if-true>
					<assign-variable name="$protoverify_result" value="%FOUND"/>
				</if-true>
			</if>
		</verify>
	</execute-code>

	<format>
		<fields>
			<field type="fixed" name="len" longname="Lenght" size="2" showtemplate="FieldDec"/>
			<field type="fixed" name="msgtype" longname="Message Type" size="2" showtemplate="FieldDec"/>
			<field type="fixed" name="magiccookie" longname="Magic Cookie" size="4" showtemplate="FieldHex"/>
			<field type="fixed" name="ctrlmsgtype" longname="Control Message Type" size="2"  showtemplate="pptp.ctrlmsgtype"/>
			<field type="fixed" name="res0" longname="Reserved 0" size ="2" showtemplate="FieldHex"/>

			<switch expr="buf2int(ctrlmsgtype)">
				<case value="1"> <includeblk name="Start_CC_Req"/></case>
				<case value="2"> <includeblk name="Start_CC_Rep"/></case>
				<case value="3"> <includeblk name="Stop_CC_Req"/></case>
				<case value="4"> <includeblk name="Stop_CC_Rep"/></case>
				<case value="5"> <includeblk name="Echo_Req"/></case>
				<case value="6"> <includeblk name="Echo_Rep"/></case>
				<case value="7"> <includeblk name="Out_C_Req"/></case>	
				<case value="8"> <includeblk name="Out_C_Rep"/></case>
				<case value="9"> <includeblk name="In_C_Req"/></case>	
				<case value="10"> <includeblk name="In_C_Rep"/></case> 
				<case value="11"> <includeblk name="In_C_Conn"/></case>
				<case value="15"> <includeblk name="Set-Link-Info"/></case>
			</switch>
		</fields>

		<block name="Start_CC_Req" longname="Start Connection Request">
			<field type="fixed" name="ProtocolVersion" longname="Protocol Version" size ="2" showtemplate="FieldDec"/>
			<field type="fixed" name="res1" longname="Reserved 1" size ="2" showtemplate="FieldHex"/>
			<field type="fixed" name="Framing_Cap" longname="Framing Capabilities" size ="4" showtemplate="pptp.fc"/>
			<field type="fixed" name="Bearer_Cap" longname="Bearer Capabilities" size ="4" showtemplate="pptp.bc"/>
			<field type="fixed" name="Maximum_ch" longname="Maximum Channels" size ="2" showtemplate="FieldDec"/>
			<field type="fixed" name="firmware" longname="Firmware revision" size ="2" showtemplate="FieldDec"/>         
			<field type="fixed" name="hname" longname="Host Name" size ="64" showtemplate="FieldAscii"/>         
			<field type="fixed" name="hname" longname="Vendor Name" size ="64" showtemplate="FieldAscii"/>   
		</block>
			
		<block name="Start_CC_Rep" longname="Start Connection Reply">
			<field type="fixed" name="ProtocolVersion" longname="Protocol Version" size ="2" showtemplate="FieldDec"/>
			<field type="fixed" name="result_start_conn" longname="Result code" size ="1" showtemplate="pptp.rc_start_conn"/>
			<field type="fixed" name="error" longname="Error code" size ="1" showtemplate="FieldDec"/>
			<field type="fixed" name="Framing_Cap" longname="Framing Capability" size ="4" showtemplate="pptp.fc"/>
			<field type="fixed" name="Bearer_Cap" longname="Bearer Capability" size ="4" showtemplate="pptp.bc"/>
			<field type="fixed" name="Maximum_ch" longname="Maximum Channels" size ="2" showtemplate="FieldDec"/>
			<field type="fixed" name="firmware" longname="Firmware revision" size ="2" showtemplate="FieldDec"/>         
			<field type="fixed" name="hname" longname="Host Name" size ="64" showtemplate="FieldAscii"/>         
			<field type="fixed" name="hname" longname="Vendor Name" size ="64" showtemplate="FieldAscii"/>   
		</block>
			
		<block name="Stop_CC_Req" longname="Stop Control Connection Request">
			<field type="fixed" name="reason" longname="Reason" size ="1" showtemplate="FieldDec"/>
			<field type="fixed" name="res1" longname="Reserved 1" size ="1" showtemplate="FieldHex"/>
			<field type="fixed" name="res2" longname="Reserved 2" size ="2" showtemplate="FieldHex"/>                
		</block>
			
		<block name="Stop_CC_Rep" longname="Stop Control Connection Reply">
			<field type="fixed" name="result_stop_conn" longname="Result code" size ="1" showtemplate="pptp.rc_stop_conn"/>
			<field type="fixed" name="error" longname="Error code" size ="1" showtemplate="pptp.ec"/>
			<field type="fixed" name="res1" longname="Reserved 1" size ="2" showtemplate="FieldHex"/>                             
		</block> 
			
		<block name="Echo_Req" longname="Echo Request">
			<field type="fixed" name="identifier" longname="Identifier" size ="4" showtemplate="FieldHex"/>                       
		</block> 

		<block name="Echo_Rep" longname="Echo Reply">
			<field type="fixed" name="identifier" longname="Identifier" size ="4" showtemplate="FieldHex"/> 
			<field type="fixed" name="result" longname="Result code" size ="1" showtemplate="pptp.rc_echo"/>
			<field type="fixed" name="error" longname="Error code" size ="1" showtemplate="pptp.ec"/>
			<field type="fixed" name="res1" longname="Reserved 1" size ="2" showtemplate="FieldHex"/>                                                   
		</block>  
			
		<block name="Out_C_Req" longname="Outgoing Call Request">
			<field type="fixed" name="call_id" longname="Call ID" size ="2" showtemplate="FieldDec"/> 
			<field type="fixed" name="call_sn" longname="Call Serial Number" size ="2" showtemplate="FieldDec"/> 
			<field type="fixed" name="min_bps" longname="Minimum BPS" size ="4" showtemplate="FieldDec"/> 
			<field type="fixed" name="max_bps" longname="Maximum BPS" size ="4" showtemplate="FieldDec"/> 
			<field type="fixed" name="Bearer_Type" longname="Bearer Type" size ="4" showtemplate="pptp.ocbt"/> 
			<field type="fixed" name="Framing_Type" longname="Framing Type" size ="4" showtemplate="pptp.ocft"/>
			<field type="fixed" name="Packet_rec_win" longname="Packet Recv. Window Size" size ="2" showtemplate="FieldDec"/>
			<field type="fixed" name="Packet_proc_del" longname="Packet Processing Delay" size ="2" showtemplate="FieldDec"/>
                        <field type="fixed" name="Phone_Number_Length" longname="Phone Number Length" size="2" showtemplate="FieldDec"/>
                        <field type="fixed" name="res1" longname="reserved1" size="2" showtemplate="FieldHex"/>
			<field type="fixed" name="Phone_number" longname="Phone Number" size ="64" showtemplate="FieldDec"/> 
			<field type="fixed" name="subaddress" longname="Subaddress" size ="64" showtemplate="FieldAscii"/>                           
		</block>             
			
		<block name="Out_C_Rep" longname="Outgoing Call Reply">
			<field type="fixed" name="call_id" longname="Call ID" size ="2" showtemplate="FieldDec"/> 
			<field type="fixed" name="peer_call_id" longname="Peer's Call ID" size ="2" showtemplate="FieldDec"/> 
			<field type="fixed" name="result" longname="Result code" size ="1" showtemplate="pptp.ocrc"/>
			<field type="fixed" name="error" longname="Error code" size ="1" showtemplate="pptp.ec"/>
			<field type="fixed" name="cause_code" longname="Cause code" size ="2" showtemplate="FieldDec"/>
			<field type="fixed" name="conn_speed" longname="Connection Speed" size ="4" showtemplate="FieldDec"/>
			<field type="fixed" name="packet_rec_win_size" longname="Packet Receive Window Size" size ="2" showtemplate="FieldDec"/>
			<field type="fixed" name="packet_transmit_delay" longname="Packet Processing Delay" size ="2" showtemplate="FieldDec"/>
			<field type="fixed" name="ph _ch_ID" longname="Physical Channel ID" size ="4" showtemplate="FieldDec"/>
		</block>
			
		<block name="In_C_Req" longname="Incoming Call Request">
			<field type="fixed" name="call_id" longname="Call ID" size ="2" showtemplate="FieldDec"/> 
			<field type="fixed" name="call_sn" longname="Call Serial Number" size ="2" showtemplate="FieldDec"/> 
			<field type="fixed" name="Physical_id" longname="Physical Channel ID" size ="4" showtemplate="FieldDec"/> 
			<field type="fixed" name="Bearer_Type" longname="Call Bearer Type" size ="4" showtemplate="pptp.icbt"/> 
			<field type="fixed" name="Dialed_len" longname="Dialer Number Length" size ="2" showtemplate="FieldDec"/> 
			<field type="fixed" name="Dialing_len" longname="Dialing Number Length" size ="2" showtemplate="FieldDec"/>
			<field type="fixed" name="Dialed_number" longname="Dialer Number" size ="8" showtemplate="FieldDec"/> 
			<field type="fixed" name="Dialing_number" longname="Dialing Number" size ="8" showtemplate="FieldDec"/> 
			<field type="fixed" name="subaddress" longname="Subaddress" size ="8" showtemplate="FieldAscii"/>               
		</block>           
			
		<block name="In_C_Rep" longname="Incoming Call Reply">
			<field type="fixed" name="call_id" longname="Call ID" size ="2" showtemplate="FieldDec"/> 
			<field type="fixed" name="peer_call_id" longname="Peer's Call ID" size ="2" showtemplate="FieldDec"/> 
			<field type="fixed" name="result" longname="Result code" size ="1" showtemplate="pptp.icrc"/>
			<field type="fixed" name="error" longname="Error code" size ="1" showtemplate="pptp.ec"/>
			<field type="fixed" name="packet_rec_win_size" longname="Packet Receive Window Size" size ="2" showtemplate="FieldDec"/>
			<field type="fixed" name="packet_transmit_delay" longname="Packet Transmit Delay" size ="2" showtemplate="FieldDec"/>
			<field type="fixed" name="res1" longname="Reserved 1" size ="2" showtemplate="FieldHex"/>
		</block>
			
		<block name="In_C_Conn" longname="Incoming Call Connected">
			<field type="fixed" name="peer_call_id" longname="Peer's Call ID" size ="2" showtemplate="FieldDec"/> 
			<field type="fixed" name="res1" longname="Reserved 1" size ="2" showtemplate="FieldHex"/>
			<field type="fixed" name="conn_speed" longname="Connection Speed" size ="4" showtemplate="FieldDec"/>
			<field type="fixed" name="packet_rec_win_size" longname="Packet Receive Window Size" size ="2" showtemplate="FieldDec"/>
			<field type="fixed" name="packet_transmit_delay" longname="Packet Transmit Delay" size ="2" showtemplate="FieldDec"/>
			<field type="fixed" name="framing_type" longname="Framing Type" size ="4" showtemplate="pptp.icft"/>              
		</block>

		<block name="Set-Link-Info" longname="Set Link Info">
			<field type="fixed" name="peer_call_id" longname="Peer's Call ID" size ="2" showtemplate="FieldDec"/> 
			<field type="fixed" name="res1" longname="Reserved 1" size ="2" showtemplate="FieldHex"/>
			<field type="fixed" name="sendACCM" longname="Send ACCM" size ="4" showtemplate="FieldHex"/>
			<field type="fixed" name="recACCM" longname="Receive ACCM" size ="4" showtemplate="FieldHex"/>  
		</block>
	</format>

	<visualization>
		<showsumtemplate name="pptp">
			<section name="next"/>
			<text value="PPTP "/>
			<protofield name="ctrlmsgtype" showdata="showmap"/>
		</showsumtemplate>

		<showtemplate name="pptp.ctrlmsgtype" showtype="dec">
			<showmap>
				<switch expr="buf2int(this)">
					<case value="1" show="Start-Control-Connection-Request"/>
					<case value="2" show="Start-Control-Connection-Reply"/>
					<case value="3" show="Stop-Control-Connection-Request"/>
					<case value="4" show="Stop-Control-Connection-Reply"/>
					<case value="5" show="Echo-Request"/>
					<case value="6" show="Echo-Reply"/>
					<case value="7" show="Outgoing-Call-Request"/>
					<case value="8" show="Outgoing-Call-Reply"/>
					<case value="9" show="Incoming-Call-Request"/>
					<case value="10" show="Incoming-Call-Reply"/>
					<case value="11" show="Incoming-Call-Connected"/>
					<case value="15" show="Set-Link-Info"/>
				</switch>
			</showmap>
		</showtemplate>

		<showtemplate name="pptp.rc_start_conn" showtype="dec">
			<showmap>
				<switch expr="buf2int(this)">
					<case value="1" show="Successful channel establishment"/>
					<case value="2" show="General error: Error Code indicates the problem"/>
					<case value="3" show="Requester is not authorized to establish a command channel"/>
					<case value="4" show="The protocol version of the requester is not supported"/>
					<case value="5" show="The protocol version of the requester is not supported"/>			
				</switch>
			</showmap>
		</showtemplate>
				
		<showtemplate name="pptp.fc" showtype="dec">
			<showmap>
				<switch expr="buf2int(this)">
					<case value="1" show="Asynchronous Framing supported"/>
					<case value="2" show="Synchronous Framing supported"/>
                                        <case value="3" show="Either Framing Supported"/>
					<default show="Error in pptp.fc code lookup"/>
				</switch>
			</showmap>
		</showtemplate>		
				
		<showtemplate name="pptp.bc" showtype="dec">
			<showmap>
				<switch expr="buf2int(this)">
					<case value="1" show="Analog access supported"/>
					<case value="2" show="Digital access supported"/>
					<case value="3" show="Either Framing Supported"/>
				</switch>
			</showmap>
		</showtemplate>
				
		<showtemplate name="pptp.rc_stop_conn" showtype="dec">
			<showmap>
				<switch expr="buf2int(this)">
					<case value="1" show="(OK) - Control connection closed"/>
					<case value="2" show="(General Error) - Control connection not closed for reason indicated in Error Code"/>
				</switch>
			</showmap>
		</showtemplate>
				
		<showtemplate name="pptp.rc_echo" showtype="dec">
			<showmap>
				<switch expr="buf2int(this)">
					<case value="1" show="(OK) - The Echo-Reply is valid"/>
					<case value="2" show="(General Error) - Echo-Request not accepted for the reason indicated in Error Code"/>
				</switch>
			</showmap>
		</showtemplate>
				
		<showtemplate name="pptp.ocbt" showtype="dec">
			<showmap>
				<switch expr="buf2int(this)">
					<case value="1" show="Call to be placed on an analog channel"/>
					<case value="2" show="Call to be placed on a digital channel"/>
					<case value="3" show="Call to be placed on any type of channel"/>
				</switch>
			</showmap>
		</showtemplate>
				
		<showtemplate name="pptp.ocft" showtype="dec">
			<showmap>
				<switch expr="buf2int(this)">
					<case value="1" show="Call to use Asynchronous framing"/>
					<case value="2" show="all to use Synchronous framing"/>
					<case value="3" show="Call can use either type of framing"/>
				</switch>
			</showmap>
		</showtemplate>

		<showtemplate name="pptp.ocrc" showtype="dec">
			<showmap>
				<switch expr="buf2int(this)">
					<case value="1" show="(Connected) - Call established with no errors"/>
					<case value="2" show="General Error) - Outgoing Call not established for the reason indicated in Error Code"/>
					<case value="3" show="(No Carrier) - Outgoing Call failed due to no carrier detected"/>
					<case value="4" show="(Busy) - Outgoing Call failed due to detection of a busy signal"/>
					<case value="5" show="(Busy) -   (No Dial Tone) - Outgoing Call  failed due to lack of a dial tone"/>
					<case value="6" show="(Time-out) - Outgoing Call was not established within time allotted by PAC"/>
				</switch>
			</showmap>
		</showtemplate>

		<showtemplate name="pptp.icbt" showtype="dec">
			<showmap>
				<switch expr="buf2int(this)">
					<case value="1" show="Call is on an analog channel"/>
					<case value="2" show="Call is on a digital channel"/>
				</switch>
			</showmap>
		</showtemplate>

		<showtemplate name="pptp.icrc" showtype="dec">
			<showmap>
				<switch expr="buf2int(this)">
					<case value="1" show="(Connect) - The PAC should answer the incoming call"/>
					<case value="2" show="(General Error) - The Incoming Call should not be established due to the reason indicated in Error Code"/>
					<case value="3" show="(Do Not Accept) - The PAC should not accept the incoming call.  It should hang up or issue a busy indication"/>
				</switch>
			</showmap>
		</showtemplate>

 		<showtemplate name="pptp.icft" showtype="dec">
			<showmap>
				<switch expr="buf2int(this)">
					<case value="1" show="Call uses asynchronous framing"/>
					<case value="2" show="Call uses synchronous framing"/>
				</switch>
			</showmap>
		</showtemplate>

		<showtemplate name="pptp.ec" showtype="dec">
			<showmap>
				<switch expr="buf2int(this)">
					<case value="0" show="No error"/>
					<case value="1" show="Not-Connected"/>
					<case value="2" show="Bad-Format"/>
					<case value="3" show="Bad-Value"/>
					<case value="4" show="No-Resource"/>
					<case value="5" show="Bad-Call ID"/>   
				</switch>
			</showmap>
		</showtemplate>
	</visualization>
</protocol>

<protocol name="ppp" longname="PPP (Point-To-Point Protocol)" showsumtemplate="ppp">
	<format>
		<fields>
			<field type="fixed" name="flag" longname="Flag" size="1" showtemplate="FieldHex"/>
			<field type="fixed" name="control" longname="Control" size="1" showtemplate="FieldHex"/>
			<field type="fixed" name="protocol" longname="Protocol" size="2" showtemplate="FieldHex"/>
			<if expr="buf2int(protocol) == 0x00FD">
				<if-true>
					<field type="variable" name="cpayload" longname="PPP Compressed payload" expr="$packetlength - $currentoffset" showtemplate="Field4BytesHex"/>
				</if-true>
			</if>
		</fields>
	</format>

	<encapsulation>
		<switch expr="buf2int(protocol)">
			<case value="0x0021"> <nextproto proto="#ip"/> </case>
			<case value="0xc021"> <nextproto proto="#lcp"/> </case>
			<case value="0x8847" comment="mpls-unicast"> <nextproto proto="#mpls"/> </case>
			<case value="0x8848" comment="mpls-multicast"> <nextproto proto="#mpls"/> </case>
		</switch>
	</encapsulation>

	<visualization>
		<showsumtemplate name="ppp">
			<text value=" - PPP"/>
		</showsumtemplate>
	</visualization>

</protocol>

<protocol name="pppoe" longname="PPPoE Session Stage" showsumtemplate="pppoesession">
	<format>
		<fields>
			<field type="bit" name="ver" longname="Version" mask="0xF0" size="1" showtemplate="FieldDec"/>
			<field type="bit" name="type" longname="Type" mask="0x0F" size="1" showtemplate="FieldDec"/>
			<field type="fixed" name="code" longname="Code" size="1" showtemplate="pppoe.tagtype"/>
			<field type="fixed" name="session_ID" longname="Session ID" description="ID of the PPPoE session" size="2" showtemplate="FieldHex"/>
			<field type="fixed" name="hlen" longname="Length" description="Length" size="2" showtemplate="FieldDec"/>
			<field type="fixed" name="nextp" longname="Next protocol" description="Protocol encapsulated into PPPoE" size="2" showtemplate="FieldHex"/>
		</fields>
	</format>

	<encapsulation>
		<switch expr="buf2int(nextp)">
			<case value="33"> <nextproto proto="#ip"/> </case>
			<case value="87"> <nextproto proto="#ipv6"/> </case>
			<case value="32801"> <nextproto proto="#icmp"/> </case>
<!--
			<case value="49185"> <nextproto proto="#LCP"/> </case>
			<case value="43"> <nextproto proto="#IPX"/> </case>
			<case value="63"> <nextproto proto="#Netbeui"/> </case>
-->
		</switch>
	</encapsulation>
	
	<visualization>
	<showtemplate name="pppoe.tagtype" showtype="dec">
			<showmap>
				<switch expr="buf2int(this)">
					<case value="0" show="End of List"/> 
					<case value="257" show="Service Name"/> 
					<case value="258" show="AC Name"/> 
					<case value="259" show="Host Uniq"/> 
					<case value="260" show="AC Cookie"/> 
					<case value="261" show="Vendor Specific"/> 
					<case value="272" show="Relay Session Id"/> 
					<case value="513" show="Service Name Error"/> 
					<case value="514" show="AC System Error"/> 
					<case value="515" show="Generic Error"/> 
					<default show="Error in PPPoe Tag Type lookup"/> 
				</switch>
			</showmap>
		</showtemplate>
		<showsumtemplate name="pppoesession">
			<text value=" - "/>
			<protohdr showdata="longname"/>
		</showsumtemplate>
	</visualization>
</protocol>

<protocol name="icmp" longname="ICMP (Internet Control Message Protocol)" showsumtemplate="icmp">
	<format>
		<fields>
			<field type="fixed" name="type" longname="Type" size="1" showtemplate="icmp.type"/>

			<!-- fields switch -->
			<switch expr="buf2int(type)">
				<case value="0">
					<field type="fixed" name="code" longname="Code" size="1" showtemplate="FieldDec"/>
					<field type="fixed" name="checksum" longname="Checksum" size="2" showtemplate="FieldHex"/>
					<includeblk name="echoreply"/>
				</case>

				<case value="3">
					<field type="fixed" name="code" longname="Code" size="1" showtemplate="icmp.DestUnreachCode"/>
					<field type="fixed" name="checksum" longname="Checksum" size="2" showtemplate="FieldHex"/>
					<includeblk name="destunreach"/>
				</case>

				<case value="4">
					<field type="fixed" name="code" longname="Code" size="1" showtemplate="FieldDec"/>
					<field type="fixed" name="checksum" longname="Checksum" size="2" showtemplate="FieldHex"/>
					<includeblk name="squence"/>
				</case>

				<case value="5">
					<field type="fixed" name="code" longname="Code" size="1" showtemplate="icmp.RedirectCode"/>
					<field type="fixed" name="checksum" longname="Checksum" size="2" showtemplate="FieldHex"/>
					<includeblk name="redirect"/>
				</case>

				<case value="8">
					<field type="fixed" name="code" longname="Code" size="1" showtemplate="FieldDec"/>
					<field type="fixed" name="checksum" longname="Checksum" size="2" showtemplate="FieldHex"/>
					<includeblk name="echoreq"/>
				</case>

				<case value="9">
					<field type="fixed" name="code" longname="Code" size="1" showtemplate="FieldDec"/>
					<field type="fixed" name="checksum" longname="Checksum" size="2" showtemplate="FieldHex"/>
					<includeblk name="radv"/>
				</case>

				<case value="10">
					<field type="fixed" name="code" longname="Code" size="1" showtemplate="FieldDec"/>
					<field type="fixed" name="checksum" longname="Checksum" size="2" showtemplate="FieldHex"/>
					<includeblk name="rsol"/>
				</case>

				<case value="11">
					<field type="fixed" name="code" longname="Code" size="1" showtemplate="FieldDec"/>
					<field type="fixed" name="checksum" longname="Checksum" size="2" showtemplate="FieldHex"/>
					<includeblk name="timeex"/>
				</case>

				<case value="12">
					<field type="fixed" name="code" longname="Code" size="1" showtemplate="FieldDec"/>
					<field type="fixed" name="checksum" longname="Checksum" size="2" showtemplate="FieldHex"/>
					<includeblk name="paramprob"/>
				</case>

				<case value="13">
					<field type="fixed" name="code" longname="Code" size="1" showtemplate="FieldDec"/>
					<field type="fixed" name="checksum" longname="Checksum" size="2" showtemplate="FieldHex"/>
					<includeblk name="tsreq"/>
				</case>

				<case value="14">
					<field type="fixed" name="code" longname="Code" size="1" showtemplate="FieldDec"/>
					<field type="fixed" name="checksum" longname="Checksum" size="2" showtemplate="FieldHex"/>
					<includeblk name="tsreply"/>
				</case>

				<case value="17">
					<field type="fixed" name="code" longname="Code" size="1" showtemplate="FieldDec"/>
					<field type="fixed" name="checksum" longname="Checksum" size="2" showtemplate="FieldHex"/>
					<includeblk name="maskreq"/>
				</case>

				<case value="18">
					<field type="fixed" name="code" longname="Code" size="1" showtemplate="FieldDec"/>
					<field type="fixed" name="checksum" longname="Checksum" size="2" showtemplate="FieldHex"/>
					<includeblk name="maskreply"/>
				</case>

			</switch>
		</fields>

		<block name="echoreq" longname="Echo Request">
			<field type="fixed" name="identifier" longname="Identifier" size="2" showtemplate="FieldDec"/> 
			<field type="fixed" name="seqn" longname="Sequence number" size="2" showtemplate="FieldDec"/> 
			<field type="variable" name="data" longname="Padding Data" expr="$packetlength - $currentoffset" showtemplate="FieldAscii"/>
		</block>

		<block name="echoreply" longname="Echo Reply">
			<field type="fixed" name="identifier" longname="Identifier" size="2" showtemplate="FieldDec"/> 
			<field type="fixed" name="seqn" longname="Sequence number" size="2" showtemplate="FieldDec"/>
			<field type="variable" name="data" longname="Padding Data" expr="$packetlength - $currentoffset" showtemplate="FieldAscii"/>
		</block>

		<block name="redirect" longname="Redirect">
			<field type="fixed" name="address" longname="IP address" size="4" showtemplate="ip4addr-noplg"/> 
		</block>

		<block name="destunreach" longname="Destination Unreachable">
			<field type="fixed" name="unused" longname="Unused (must be zero)" size="4" showtemplate="FieldDec"/>
		</block>

		<block name="squence" longname="Source Quence">
			<field type="fixed" name="unused" longname="Unused (must be zero)" size="4" showtemplate="FieldDec"/>
		</block>

		<block name="timeex" longname="Time Exceeded for a Datagram">
			<field type="fixed" name="unused" longname="Unused (must be zero)" size="4" showtemplate="FieldDec"/>
		</block>

		<block name="paramprob" longname="Parameter Problem for a Datagram">
			<field type="bit" name="pointer" longname="Pointer" mask="0xFF000000" size="4" showtemplate="FieldBin"/>
			<field type="bit" name="unused" longname="Unused" mask="0x00FFFFFF" size="4" showtemplate="FieldBin"/>
		</block>

		<block name="tsreq" longname="Timestamp Request">
			<field type="fixed" name="identifier" longname="Identifier" size="2" showtemplate="FieldDec"/>
			<field type="fixed" name="sequenum" longname="Sequence Number" size="2" showtemplate="FieldDec"/>
			<field type="fixed" name="otimestamp" longname="Originate Timestamp" size="4" showtemplate="FieldDec"/>
			<field type="fixed" name="rtimestamp" longname="Receive Timestamp" size="4" showtemplate="FieldDec"/>
			<field type="fixed" name="ttimestamp" longname="Transmit Timestamp" size="4" showtemplate="FieldDec"/>
		</block>

		<block name="tsreply" longname="Timestamp Reply">
			<field type="fixed" name="identifier" longname="Identifier" size="2" showtemplate="FieldDec"/>
			<field type="fixed" name="sequenum" longname="Sequence Number" size="2" showtemplate="FieldDec"/>
			<field type="fixed" name="otimestamp" longname="Originate Timestamp" size="4" showtemplate="FieldDec"/>
			<field type="fixed" name="rtimestamp" longname="Receive Timestamp" size="4" showtemplate="FieldDec"/>
			<field type="fixed" name="ttimestamp" longname="Transmit Timestamp" size="4" showtemplate="FieldDec"/>
		</block>

		<block name="maskreq" longname="Address Mask Request">
			<field type="fixed" name="identifier" longname="Identifier" size="2" showtemplate="FieldDec"/>
			<field type="fixed" name="sequenum" longname="Sequence Number" size="2" showtemplate="FieldDec"/>
			<field type="fixed" name="addmask" longname="Address Mask" size="4" showtemplate="ip4addr-noplg"/>
		</block>

		<block name="maskreply" longname="Address Mask Reply">
			<field type="fixed" name="identifier" longname="Identifier" size="2" showtemplate="FieldDec"/>
			<field type="fixed" name="sequenum" longname="Sequence Number" size="2" showtemplate="FieldDec"/>
			<field type="fixed" name="addmask" longname="Address Mask" size="4" showtemplate="ip4addr-noplg"/>
		</block>

		<block name="radv" longname="Router Advertisement">
			<field type="fixed" name="reserved" longname="Reserved" size="4" showtemplate="FieldDec"/>
		</block>

		<block name="rsol" longname="Router Solicitation">
			<field type="fixed" name="numadd" longname="NumAddr" size="1" showtemplate="FieldDec"/>
			<field type="fixed" name="addrsize" longname="AddrSize" size="1" showtemplate="FieldDec"/>
			<field type="fixed" name="lifetime" longname="LifeTime" size="2" showtemplate="FieldDec"/>
			<block name="Address" longname="Address">
				<loop type="times2repeat" expr="buf2int(numadd)">
					<field type="fixed" name="routeaddr" longname="Router Address" size="4" showtemplate="ip4addr-noplg"/> 
					<field type="fixed" name="preflevel" longname="Preference Level" size="4" showtemplate="FieldDec"/> 
				</loop>
			</block>
		</block>
	</format>


	<encapsulation>
		<!-- The ICMP packet can carry the IP datagram that caused the error -->
		<nextproto proto="#ip"/>
	</encapsulation>


	<visualization>
		<showtemplate name="icmp.type" showtype="dec">
			<showmap>
				<switch expr="buf2int(this)">
					<case value="0" show="Echo Reply"/>
					<case value="3" show="Destination Unreachable"/>
					<case value="4" show="Source Quence"/>
					<case value="5" show="Redirect"/>
					<case value="8" show="Echo Request"/>
					<case value="9" show="Router Advertisement"/>
					<case value="10" show="Router Solicitation"/>
					<case value="11" show="Time exceeded for a Datagram"/>
					<case value="12" show="Parameter Problem on a Datagram"/>
					<case value="13" show="Timestamp Request"/>
					<case value="14" show="Timestamp Reply"/>
					<case value="15" show="Information Request (obsolete)"/>
					<case value="16" show="Information Reply (obsolete)"/>
					<case value="17" show="Address Mask Request"/>
					<case value="18" show="Address Mask Reply"/>
					<default show="Error in ICMP Type lookup"/>
				</switch>
			</showmap>
		</showtemplate>
		
		<showtemplate name="icmp.DestUnreachCode" showtype="dec">
			<showmap>
				<switch expr="buf2int(this)">
					<case value="0" show="Network Unreachable"/>
					<case value="1" show="Host Unreachable"/>
					<case value="2" show="Protocol Unreachable"/>
					<case value="3" show="Port Unreachable"/>
					<case value="4" show="Fragmentation needed and DF set"/>
					<case value="5" show="Source routed failed"/>
					<case value="6" show="Destination network failed"/>
					<case value="7" show="Destination host failed"/>
					<case value="8" show="Source host isolated"/>
					<case value="9" show="Communication with destination network administratively prohibited"/>
					<case value="10" show="Communication with destination host administratively prohibited"/>
					<case value="11" show="Network unreachable for type of service"/>
					<case value="12" show="Host unreachable for type of service"/>
					<default show="Error in ICMP Destination Unreachable code lookup"/>
				</switch>
			</showmap>
		</showtemplate>

		<showtemplate name="icmp.RedirectCode" showtype="dec">
			<showmap>
				<switch expr="buf2int(this)">
					<case value="0" show="Redirect datagrams for the Network"/>
					<case value="1" show="Redirect datagrams for the Host"/>
					<case value="2" show="Redirect datagrams for the Type of Service and Network"/>
					<case value="3" show="Redirect datagrams for the Type of Service and Host"/>
					<default show="Error in ICMP Redirect code lookup"/>
				</switch>
			</showmap>
		</showtemplate>

		<showsumtemplate name="icmp">
			<section name="next"/>
			<text value="ICMP "/>
			<protofield name="type" showdata="showmap"/>
		</showsumtemplate>

	</visualization>
</protocol>

<protocol name="mpls" longname="Multi Protocol Label Switching" showsumtemplate="mpls">
	<format>
		<fields>
			<!--
			The CoS field is identified as Exp (Experimental Use) inside RFC 3032
			-->
			<field type="bit" name="label" longname="Label" mask="0xFFFFF000" size="4" showtemplate="FieldDec"/>
			<field type="bit" name="cos" longname="Class of Service" mask="0x00000E00" size="4" showtemplate="FieldDec"/>
			<field type="bit" name="s" longname="Bottom of Stack" mask="0x00000100" size="4" showtemplate="FieldDec"/>
			<field type="bit" name="ttl" longname="Time To Live"  mask="0x000000FF" size="4" showtemplate="FieldDec"/>
		</fields>
	</format>

	<encapsulation>
		<if expr="buf2int(s) == 1">
			<if-true>
				<switch expr="buf2int(label)">
					<case value="0"> <nextproto proto="#ip"/> </case>
					<case value="2"> <nextproto proto="#ipv6"/> </case>
					<default> 
						<nextproto proto="#ip"/>
					</default>		
				</switch>
			</if-true>	
			<if-false>
				<nextproto proto="#mpls"/>
			</if-false>
		</if>
	</encapsulation>

	<visualization>
		<showsumtemplate name="mpls">
			<section name="next"/>
			<text value="LABEL: "/>
			<protofield name="label" showdata="showvalue"/>
		</showsumtemplate>
	</visualization>
</protocol>

<protocol name="gre" longname="GRE (Generic Router Encapsulation)" showsumtemplate="gre">
	<format>
		<fields>
			<switch expr="buf2int($packet[$currentoffset:2]) bitwand 0x0007">
				<case value="0">
					<field type="fixed" name="flag" longname="Flags" size="2" showtemplate="FieldHex">
						<field type="bit" name="cflag" longname="Checksum present" mask="0x8000" size="2" showtemplate="FieldBin"/>
						<field type="bit" name="rflag" longname="Routing present" mask="0x4000" size="2" showtemplate="FieldBin"/>
						<field type="bit" name="kflag" longname="Key present" mask="0x2000" size="2" showtemplate="FieldBin"/>
						<field type="bit" name="snflag" longname="Sequence Number present" mask="0x1000" size="2" showtemplate="FieldBin"/>
						<field type="bit" name="srflag" longname="Strict Source Route" mask="0x0800" size="2" showtemplate="FieldBin"/>
						<field type="bit" name="recurflag" longname="Recursion Control" mask="0x0700" size="2" showtemplate="FieldBin"/>
						<field type="bit" name="reserved" longname="Reserved" mask="0x00F8" size="2" showtemplate="FieldBin"/>
						<field type="bit" name="vflag" longname="Version" mask="0x0007" size="2" showtemplate="FieldBin"/>
					</field>

					<field type="fixed" name="protocol" longname="Protocol type" size="2" showtemplate="FieldHex"/>

					<if expr="buf2int(cflag) or buf2int(rflag)">
						<if-true>
							<field type="fixed" name="checksum" longname="Checksum" size="2" showtemplate="FieldHex"/>
							<field type="fixed" name="roffset" longname="Routing Offset" size="2" showtemplate="FieldDec"/>
						</if-true>
					</if>

					<!-- These fields have been deprecated in the new GRE RFC (post RFC 1701) -->
					<if expr="buf2int(kflag)">
						<if-true>
							<field type="fixed" name="key" longname="Key" size="4" showtemplate="FieldHex"/>
						</if-true>
					</if>
					<if expr="buf2int(snflag)">
						<if-true>
							<field type="fixed" name="seq" longname="Sequence Number" size="4" showtemplate="FieldHex"/>
						</if-true>
					</if>

					<if expr="buf2int(rflag)">
						<if-true>
							<loop type="do-while" expr="buf2int(sre_afamily) or buf2int(sre_length)">								
								<block name="sre" longname="Source Routing Entry">
									<field type="fixed" name="sre_afamily" longname="SRE Address Family" size="2" showtemplate="FieldHex"/>
									<field type="fixed" name="sre_offset" longname="SRE Offset" size="1" showtemplate="FieldDec"/>
									<field type="fixed" name="sre_length" longname="SRE Length" size="1" showtemplate="FieldDec"/>
									<field type="variable" name="sre_route" longname="SRE Routing Information" expr="buf2int(sre_length)" showtemplate="FieldHex"/>
								</block>
							</loop>
						</if-true>
					</if>
				</case>

				<case value="1">
					<field type="fixed" name="flag" longname="Flags" size="2" showtemplate="FieldHex">
						<field type="bit" name="cflag" longname="Checksum present" mask="0x8000" size="2" showtemplate="FieldBin"/>
						<field type="bit" name="rflag" longname="Routing present" mask="0x4000" size="2" showtemplate="FieldBin"/>
						<field type="bit" name="kflag" longname="Key present" mask="0x2000" size="2" showtemplate="FieldBin"/>
						<field type="bit" name="snflag" longname="Sequence Number present" mask="0x1000" size="2" showtemplate="FieldBin"/>
						<field type="bit" name="srflag" longname="Strict Source Route" mask="0x0800" size="2" showtemplate="FieldBin"/>
						<field type="bit" name="recurflag" longname="Recursion Control" mask="0x0700" size="2" showtemplate="FieldBin"/>
						<field type="bit" name="aflag" longname="Acknowledgement present" mask="0x0080" size="2" showtemplate="FieldBin"/>
						<field type="bit" name="reserved" longname="Reserved" mask="0x00780" size="2" showtemplate="FieldBin"/>
						<field type="bit" name="vflag" longname="Version" mask="0x0007" size="2" showtemplate="FieldBin"/>
					</field>
					<field type="fixed" name="protocol" longname="Protocol type" size="2" showtemplate="FieldHex"/>
					<field type="fixed" name="plen" longname="Payload length" size="2" showtemplate="FieldDec"/>
					<field type="fixed" name="callid" longname="Call ID" size="2" showtemplate="FieldDec"/>
					<if expr="buf2int(snflag)">
						<if-true>
							<field type="fixed" name="seq" longname="Sequence Number" size="4" showtemplate="FieldHex"/>
						</if-true>
					</if>
					<if expr="buf2int(aflag)">
						<if-true>
							<field type="fixed" name="ack" longname="Acnowledgement Number" size="4" showtemplate="FieldHex"/>
						</if-true>
					</if>
				</case>
			</switch>
		</fields>
	</format>

	<encapsulation>
		<if expr="buf2int(vflag) == 1">
			<if-true>
				<switch expr="buf2int(protocol)">
					<case value="0x880B"> <nextproto proto="#ppp"/> </case>
				</switch>
			</if-true>			
		</if>	
		<if expr="buf2int(vflag) == 0">
			<if-true>
				<switch expr="buf2int(protocol)">
					<!--more protocols are defined in RFC1701, but they seems to be fairly uncommon-->
					<case value="0x0800"> <nextproto proto="#ip"/> </case>
					<case value="0x0806"> <nextproto proto="#arp"/> </case>					
					<case value="0x880B"> <nextproto proto="#ppp"/> </case>
				</switch>
			</if-true>			
		</if>		

	</encapsulation>

	<visualization>
		<showsumtemplate name="gre">
			<text value=" - GRE"/>
		</showsumtemplate>
	</visualization>
</protocol>

<protocol name="arp" longname="ARP (Address Resolution Protocol)" comment="This protocol has been 'hardwired' to IP. In fact, we do not know any other network protocol that uses ARP." showsumtemplate="arp">
	<execute-code>
		<!-- If we're on Ethernet, update the packet length -->
		<after when="$linklayer == 1">
			<assign-variable name="$packetlength" value="$currentoffset"/>
		</after>
	</execute-code>

	<format>
		<fields>
			<field type="fixed" name="hType" longname="Hardware type" size="2" showtemplate="FieldDec"/>
			<field type="fixed" name="pType" longname="Protocol type" size="2" showtemplate="FieldHex"/>
			<field type="fixed" name="hLen" longname="Hardware address length" size="1" showtemplate="FieldDec"/>
			<field type="fixed" name="pLen" longname="Protocol address length" size="1" showtemplate="FieldDec"/>
			<field type="fixed" name="op" longname="Operation code" size="2" showtemplate="arp.code"/>
			<field type="fixed" name="sHwAddr" longname="Sender MAC address" size="6" showtemplate="MACaddressEth"/>
			<field type="fixed" name="sIPAddr" longname="Sender IP address" size="4" showtemplate="ip4addr"/>
			<field type="fixed" name="dHwAddr" longname="Destination MAC address" size="6" showtemplate="MACaddressEth"/>
			<field type="fixed" name="dIPAddr" longname="Destination IP address" size="4" showtemplate="ip4addr"/>
		</fields>
	</format>

	<visualization>
		<showtemplate name="arp.code" showtype="dec">
			<showmap>
				<switch expr="buf2int(this)">
					<case value="1" show="Request"/> 
					<case value="2" show="Reply"/> 
					<default show="Error in ARP code lookup"/> 
				</switch>
			</showmap>
		</showtemplate>
		
		<showsumtemplate name="arp">
			<section name="next"/>
			<text value="ARP "/>
			<protofield name="op" showdata="showmap"/>
			<text value=": "/>
			<if expr="buf2int(op) == 1">
				<if-true>
					<text value="who has "/>
					<protofield name="dIPAddr" showdata="showvalue"/>
					<text value=" tell "/>
					<protofield name="sIPAddr" showdata="showvalue"/>
				</if-true>

				<if-false>
					<protofield name="sIPAddr" showdata="showvalue"/>
					<text value=" is at "/>
					<protofield name="sHwAddr" showdata="showvalue"/>
				</if-false>
			</if>
		</showsumtemplate>
	</visualization>

</protocol>

<protocol name="ip" longname="IPv4 (Internet Protocol version 4)" showsumtemplate="ipv4">
	<!-- We should check that 'version' is equal to '4' -->
	<execute-code>
		<after>
			<!-- Store ipsrc and ipdst in a couple of variables for the sake of speed -->
			<!-- This aims at hiding differences between IPv4 and IPv6 for session tracking -->
			<assign-variable name="$ipsrc" value="src"/>
			<assign-variable name="$ipdst" value="dst"/>
			
			<if expr="$ipsrc lt $ipdst" >
				<if-true>
					<assign-variable name="$firstip" value="src"/>
					<assign-variable name="$secondip" value="dst"/>
				</if-true>
				<if-false>
					<assign-variable name="$firstip" value="dst"/>
					<assign-variable name="$secondip" value="src"/>
				</if-false>
			</if>
		</after>

		<!-- If we're on Ethernet, update the packet length -->
		<after when="$linklayer == 1">
			<assign-variable name="$packetlength" value="$currentoffset + buf2int(tlen) - buf2int(hlen) * 4"/>
		</after>
	</execute-code>

	<format>
		<fields>
			<field type="bit" name="ver" longname="Version" mask="0xF0" size="1" showtemplate="FieldDec"/>
			<field type="bit" name="hlen" longname="Header length" comment="The length is in multiple of 4 bytes" mask="0x0F" size="1" showtemplate="FieldMul4Dec"/>
			<field type="fixed" name="tos" longname="Type of service" size="1" showtemplate="FieldHex"/>
			<field type="fixed" name="tlen" longname="Total length" size="2" showtemplate="FieldDec"/>
			<field type="fixed" name="identification" longname="Identification" size="2" showtemplate="FieldDec"/>
			<block name="ffo" longname="Flags and Fragment offset">
				<field type="bit" name="unused" longname="Unused" mask="0x8000" size="2" showtemplate="FieldBin"/>
				<field type="bit" name="df" longname="Don't fragment" mask="0x4000" size="2" showtemplate="FieldBin"/>
				<field type="bit" name="mf" longname="More fragments" mask="0x2000" size="2" showtemplate="FieldBin"/>
				<field type="bit" name="foffset" longname="Fragment offset" comment="This is in multiple of 8 bytes" mask="0x1FFF" size="2" showtemplate="ShortMul8Dec"/>
			</block>
			<field type="fixed" name="ttl" longname="Time to live" size="1" showtemplate="FieldDec"/>
			<field type="fixed" name="nextp" longname="Next protocol" size="1" showtemplate="FieldDec"/>
			<field type="fixed" name="hchecksum" longname="Header Checksum" size="2" showtemplate="FieldHex"/>
			<field type="fixed" name="src" longname="Source address" size="4" showtemplate="ip4addr"/>
			<field type="fixed" name="dst" longname="Destination address" size="4" showtemplate="ip4addr"/>

			<!-- Options loop -->
			<block name="option" longname="IP Options">
				<loop type="size" expr="(buf2int(hlen) * 4) - 20">
					<switch expr="buf2int($packet[$currentoffset:1]) bitwand 0x1F">
						<case value="0"> <includeblk name="IP_OPT_EOL"/> </case>
						<case value="1"> <includeblk name="IP_OPT_NOP"/> </case>
						<case value="2"> <includeblk name="IP_OPT_SEC"/> </case>
						<case value="3"> <includeblk name="IP_OPT_LSR"/> </case>
						<case value="4"> <includeblk name="IP_OPT_TS"/> </case>
						<case value="5"> <includeblk name="IP_OPT_EX_SEC"/> </case>
						<case value="7"> <includeblk name="IP_OPT_RR"/> </case>
						<case value="8"> <includeblk name="IP_OPT_SID"/> </case>
						<case value="9"> <includeblk name="IP_OPT_SSR"/> </case>
						<case value="18"> <includeblk name="IP_OPT_TR"/> </case>
						<case value="20"> <includeblk name="IP_OPT_RA"/> </case>
						<default> <includeblk name="IP_OPT_UNK"/> </default>
					</switch>
				</loop>
			</block>
		</fields>


		<!-- IP options -->
		<block name="IP_OPT_EOL" longname="End of Options List">
			<field type="fixed" name="type" longname="Option Type" size="1" showtemplate="ipv4.opttype">
				<field type="bit" name="copy" longname="Copied flag" mask="0x80" size="1" showtemplate="ipv4.optcopytype"/>
				<field type="bit" name="class" longname="Option Class" mask="0x60" size="1" showtemplate="ipv4.optclass"/>
				<field type="bit" name="number" longname="Option Number" mask="0x1F" size="1" showtemplate="FieldDec"/>
			</field>
			<field type="padding" name="padding" longname="Padding" align="4" showtemplate="FieldHex"/>
		</block>

		<block name="IP_OPT_NOP" longname="No Operation Option">
			<field type="fixed" name="type" longname="Option Type" size="1" showtemplate="ipv4.opttype">
				<field type="bit" name="copy" longname="Copied flag" mask="0x80" size="1" showtemplate="ipv4.optcopytype"/>
				<field type="bit" name="class" longname="Option Class" mask="0x60" size="1" showtemplate="ipv4.optclass"/>
				<field type="bit" name="number" longname="Option Number" mask="0x1F" size="1" showtemplate="FieldDec"/>
			</field>
		</block>

		<block name="IP_OPT_SEC" longname="Security Option">
			<field type="fixed" name="type" longname="Option Type" size="1" showtemplate="ipv4.opttype">
				<field type="bit" name="copy" longname="Copied flag" mask="0x80" size="1" showtemplate="ipv4.optcopytype"/>
				<field type="bit" name="class" longname="Option Class" mask="0x60" size="1" showtemplate="ipv4.optclass"/>
				<field type="bit" name="number" longname="Option Number" mask="0x1F" size="1" showtemplate="FieldDec"/>
			</field>
			<field type="fixed" name="length" longname="Length" size="1" showtemplate="FieldDec"/>
			<field type="fixed" name="sec" longname="Security" size="2" showtemplate="ipv4.secsec"/>
			<field type="fixed" name="comp" longname="Compartments" size="2" showtemplate="ipv4.seccomp"/>
			<field type="fixed" name="hr" longname="Handling Restrictions" size="2" showtemplate="FieldDec"/>
			<field type="fixed" name="tcc" longname="Transmission Control Code" size="3" showtemplate="FieldAscii"/>
		</block>

		<block name="IP_OPT_EX_SEC" longname="Extended Security Option">
			<field type="fixed" name="type" longname="Option Type" size="1" showtemplate="ipv4.opttype">
				<field type="bit" name="copy" longname="Copied flag" mask="0x80" size="1" showtemplate="ipv4.optcopytype"/>
				<field type="bit" name="class" longname="Option Class" mask="0x60" size="1" showtemplate="ipv4.optclass"/>
				<field type="bit" name="number" longname="Option Number" mask="0x1F" size="1" showtemplate="FieldDec"/>
			</field>
			<field type="fixed" name="length" longname="Length" size="1" showtemplate="FieldDec"/>
			<field type="fixed" name="asecfc" longname="Additional Security Info Format Code" size="1" showtemplate="FieldDec"/>
			<field type="variable" name="asec" longname="Additional Security Info" expr="buf2int(length) - 3" showtemplate="Field4BytesHex"/>
			<!-- This expression is wrong; we'll check it later -->
		</block>

		<block name="IP_OPT_LSR" longname="Loose Source Routing Option">
			<field type="fixed" name="type" longname="Option Type" size="1" showtemplate="ipv4.opttype">
				<field type="bit" name="copy" longname="Copied flag" mask="0x80" size="1" showtemplate="ipv4.optcopytype"/>
				<field type="bit" name="class" longname="Option Class" mask="0x60" size="1" showtemplate="ipv4.optclass"/>
				<field type="bit" name="number" longname="Option Number" mask="0x1F" size="1" showtemplate="FieldDec"/>
			</field>

			<field type="fixed" name="length" longname="Length" size="1" showtemplate="FieldDec"/>
			<field type="fixed" name="pointer" longname="Pointer" size="1" showtemplate="FieldDec"/>

			<!-- Loop to print the addresses -->
			<block name="LSR_alist" longname="Address list">
				<loop type="size" expr="buf2int(length) - 3">
					<field type="fixed" name="raddr" longname="Router Address" size="4" showtemplate="ip4addr-noplg"/>
				</loop>
			</block>
		</block>

		<block name="IP_OPT_SSR" longname="Strict Source Routing Option">
			<field type="fixed" name="type" longname="Option Type" size="1" showtemplate="ipv4.opttype">
				<field type="bit" name="copy" longname="Copied flag" mask="0x80" size="1" showtemplate="ipv4.optcopytype"/>
				<field type="bit" name="class" longname="Option Class" mask="0x60" size="1" showtemplate="ipv4.optclass"/>
				<field type="bit" name="number" longname="Option Number" mask="0x1F" size="1" showtemplate="FieldDec"/>
			</field>

			<field type="fixed" name="length" longname="Length" size="1" showtemplate="FieldDec"/>
			<field type="fixed" name="pointer" longname="Pointer" size="1" showtemplate="FieldDec"/>

			<!-- Loop to print the addresses -->
			<block name="SRR_alist" longname="Address list">
				<loop type="size" expr="buf2int(length) - 3">
					<field type="fixed" name="raddr" longname="Router Address" size="4" showtemplate="ip4addr-noplg"/>
				</loop>
			</block>
		</block>

		<block name="IP_OPT_RR" longname="Record Route Option">
			<field type="fixed" name="type" longname="Option Type" size="1" showtemplate="ipv4.opttype">
				<field type="bit" name="copy" longname="Copied flag" mask="0x80" size="1" showtemplate="ipv4.optcopytype"/>
				<field type="bit" name="class" longname="Option Class" mask="0x60" size="1" showtemplate="ipv4.optclass"/>
				<field type="bit" name="number" longname="Option Number" mask="0x1F" size="1" showtemplate="FieldDec"/>
			</field>

			<field type="fixed" name="length" longname="Length" size="1" showtemplate="FieldDec"/>
			<field type="fixed" name="pointer" longname="Pointer" size="1" showtemplate="FieldDec"/>

			<!-- Loop to print the addresses -->
			<block name="RR_alist" longname="Address list">
				<loop type="size" expr="buf2int(length) - 3">
					<field type="fixed" name="raddr" longname="Router Address" size="4" showtemplate="ip4addr-noplg"/>
				</loop>
			</block>
		</block>

		<block name="IP_OPT_SID" longname="Stream Identifier Option">
			<field type="fixed" name="type" longname="Option Type" size="1" showtemplate="ipv4.opttype">
				<field type="bit" name="copy" longname="Copied flag" mask="0x80" size="1" showtemplate="ipv4.optcopytype"/>
				<field type="bit" name="class" longname="Option Class" mask="0x60" size="1" showtemplate="ipv4.optclass"/>
				<field type="bit" name="number" longname="Option Number" mask="0x1F" size="1" showtemplate="FieldDec"/>
			</field>
			<field type="fixed" name="length" longname="Length" size="1" showtemplate="FieldDec"/>
			<field type="fixed" name="sid" longname="Stream ID" size="2" showtemplate="FieldDec"/>
		</block>

		<block name="IP_OPT_RA" longname="Router Alert Option">
			<field type="fixed" name="type" longname="Option Type" size="1" showtemplate="ipv4.opttype">
				<field type="bit" name="copy" longname="Copied flag" mask="0x80" size="1" showtemplate="ipv4.optcopytype"/>
				<field type="bit" name="class" longname="Option Class" mask="0x60" size="1" showtemplate="ipv4.optclass"/>
				<field type="bit" name="number" longname="Option Number" mask="0x1F" size="1" showtemplate="FieldDec"/>
			</field>
			<field type="fixed" name="len" longname="Length" comment="The value of this field must be 4" size="1" showtemplate="FieldDec"/>
			<field type="fixed" name="value" longname="Value" size="2" showtemplate="ipv4.optralert"/>
		</block>


		<block name="IP_OPT_TR" longname="Trace Route Option">
			<field type="fixed" name="type" longname="Option Type" size="1" showtemplate="ipv4.opttype">
				<field type="bit" name="copy" longname="Copied flag" mask="0x80" size="1" showtemplate="ipv4.optcopytype"/>
				<field type="bit" name="class" longname="Option Class" mask="0x60" size="1" showtemplate="ipv4.optclass"/>
				<field type="bit" name="number" longname="Option Number" mask="0x1F" size="1" showtemplate="FieldDec"/>
			</field>

			<field type="fixed" name="len" longname="Length" size="1" showtemplate="FieldDec"/>
			<field type="fixed" name="id" longname="ID Number" size="2" showtemplate="FieldDec"/>
			<field type="fixed" name="ohc" longname="Outbound Hop Count" size="2" showtemplate="FieldDec"/>
			<field type="fixed" name="rhc" longname="Return Hop Count" size="2" showtemplate="FieldDec"/>
			<field type="fixed" name="TR_addr" longname="Originator IP Address" size="4" showtemplate="ip4addr-noplg"/>
		</block>


		<block name="IP_OPT_TS" longname="Timestamp Option">
			<field type="fixed" name="type" longname="Option Type" size="1" showtemplate="ipv4.opttype">
				<field type="bit" name="copy" longname="Copied flag" mask="0x80" size="1" showtemplate="ipv4.optcopytype"/>
				<field type="bit" name="class" longname="Option Class" mask="0x60" size="1" showtemplate="ipv4.optclass"/>
				<field type="bit" name="number" longname="Option Number" mask="0x1F" size="1" showtemplate="FieldDec"/>
			</field>

			<field type="fixed" name="length" longname="Length" size="1" showtemplate="FieldDec"/>
			<field type="fixed" name="pointer" longname="Pointer" size="1" showtemplate="FieldDec"/>
			<block name="ovf_flags" longname="Overflow and flag">
				<field type="bit" name="ts_ovf" longname="Overflow" mask="0xF0" size="1" showtemplate="FieldHex"/>
				<field type="bit" name="ts_flag" longname="Flag" mask="0x0F" size="1" showtemplate="ipv4.opttimestamp"/>
			</block>

			<!-- Loop to print the timestamps and addresses -->
			<block name="TS_list" longname="Timestamps">
				<loop type="size" expr="buf2int(length) - 4">
					<switch expr="buf2int(ts_flag)">
						<case value="1">
							<field type="fixed" name="TS_addr" longname="Address" size="4" showtemplate="ip4addr-noplg"/>
							<field type="fixed" name="TS_tstamp" longname="Time Stamp" size="4" showtemplate="FieldDec"/>
						</case>
						<default>
							<field type="fixed" name="TS_tstamp" longname="Time Stamp" size="4" showtemplate="FieldDec"/>
						</default>
					</switch>
				</loop>
			</block>
		</block>

		<!-- Unknown Option, shown if no other options match -->
		<block name="IP_OPT_UNK" longname="Unknown or Unsupported Option">
			<field type="fixed" name="type" longname="Option Type" size="1" showtemplate="ipv4.opttype">
				<field type="bit" name="copy" longname="Copied flag" mask="0x80" size="1" showtemplate="ipv4.optcopytype"/>
				<field type="bit" name="class" longname="Option Class" mask="0x60" size="1" showtemplate="ipv4.optclass"/>
				<field type="bit" name="number" longname="Option Number" mask="0x1F" size="1" showtemplate="FieldDec"/>
			</field>
			<field type="fixed" name="length" longname="Length" size="1" showtemplate="FieldDec"/>
			<field type="variable" name="OptionData" longname="Option Data" expr="buf2int(length)" showtemplate="Field4BytesHex"/>
		</block>
	</format>


	<encapsulation>
		<if expr="buf2int(foffset) == 0">			
			<if-true>
				<switch expr="buf2int(nextp)">
					<case value="4"> <nextproto proto="#ip"/> </case>
					<case value="6"> <nextproto proto="#tcp"/> </case>
					<case value="17"> <nextproto proto="#udp"/> </case>
					<case value="41"> <nextproto proto="#ipv6"/> </case>
					<case value="47"> <nextproto proto="#gre"/> </case>
					<case value="1"> <nextproto proto="#icmp"/> </case>
				</switch>
			</if-true>
		</if>
	</encapsulation>


	<visualization>
		<showtemplate name="ipv4.opttype" showtype="dec">	<!-- Option type -->
			<showmap>
				<switch expr="buf2int(this)"> 	
					<case value="0" show="End of Options List"/>
					<case value="1" show="No Operation"/>
					<case value="7" show="Record Route"/>
					<case value="10" show="Experimental Measurement"/>
					<case value="68" show="Time Stamp"/>
					<case value="82" show="Traceroute"/>
					<case value="130" show="Security"/>
					<case value="131" show="Loose Source Routing"/>
					<case value="133" show="Extended Security"/>
					<case value="134" show="Commercial Security"/>
					<case value="136" show="Stream ID"/>
					<case value="137" show="Strict Source Routing"/>
					<case value="142" show="Expermental Access Control"/>
					<case value="144" show="IMI Traffic Descriptor"/>
					<case value="145" show="Extended Internet Protocol"/>
					<case value="147" show="Address Extension"/>
					<case value="148" show="Router Alert"/>
					<case value="149" show="Selective Directed Broadcast"/>
					<case value="150" show="NSAP Addresses"/>
					<case value="151" show="Dynamic Packet State"/>
					<case value="152" show="Upstream Multicast Pkt."/>
					<case value="205" show="Experimental Flow Control"/>
					<default show="Unknown option"/>
				</switch>
			</showmap>
		</showtemplate>

		<showtemplate name="ipv4.optcopytype" showtype="bin">	<!-- Option Copy type -->
			<showmap>
				<switch expr="buf2int(this)">
					<case value="0" show="not copied into all fragments"/>
					<case value="1" show="copied into all fragments"/>
					<default show="Unknown"/>
				</switch>
			</showmap>
		</showtemplate>

		<showtemplate name="ipv4.optclass" showtype="bin">	<!-- Option Class type -->
			<showmap>
				<switch expr="buf2int(this)">
					<case value="0" show="control"/>
					<case value="1" show="reserved for future use"/>
					<case value="2" show="debugging and measurement"/>
					<case value="3" show="reserved for future use"/>
					<default show="Unknown"/>
				</switch>
			</showmap>
		</showtemplate>

		<showtemplate name="ipv4.secsec" showtype="dec">	<!-- Security level -->
			<showmap>
				<switch expr="buf2int(this)">
					<case value="0" show="Unclassified"/>
					<case value="61749" show="Confidential"/>
					<case value="30874" show="EFTO"/>
					<case value="48205" show="MMMM"/>
					<case value="24102" show="PROG"/>
					<case value="44819" show="Restricted"/>
					<case value="55176" show="Secret"/>
					<case value="27589" show="Top Secret"/>
					<default show="Unknown"/>
				</switch>
			</showmap>
		</showtemplate>

		<showtemplate name="ipv4.seccomp" showtype="dec">	<!-- Security Compartment -->
			<showmap>
				<switch expr="buf2int(this)">
					<case value="0" show="Not Compartmented"/>
					<default show="Unknown Compartment" comment="Every compartment different from 0 is unknown"/>
				</switch>
			</showmap>
		</showtemplate>

		<showtemplate name="ipv4.optralert" showtype="dec">	<!-- Routing Alert Value -->
			<showmap>
				<switch expr="buf2int(this)">
					<case value="0" show="Router shall examine packet"/>
					<default show="reserved"/>
				</switch>
			</showmap>
		</showtemplate>

		<showtemplate name="ipv4.opttimestamp" showtype="bin">	<!-- Timestamp Flag -->
			<showmap>
				<switch expr="buf2int(this)">
					<case value="0" show="Time stamps only"/>
					<case value="1" show="Time stamps and addresses"/>
					<case value="3" show="Time stamps for prespecified addresses"/>
				</switch>
			</showmap>
		</showtemplate>

		<showsumtemplate name="ipv4">
			<if expr="($prevproto == #ip) or ($prevproto == #ipv6) or ($prevproto == #ppp) or ($prevproto == #pppoe) or ($prevproto == #gre)">
				<if-true>
					<text value=" - "/>
				</if-true>
				<if-false>
					<section name="next"/>
				</if-false>
			</if>

			<text value="IP: "/>
			<protofield name="src" showdata="showvalue"/>
			<text value=" => "/>
			<protofield name="dst" showdata="showvalue"/>
			<text value=" (Len "/>
			<protofield name="tlen" showdata="showvalue"/>
			<text value=")"/>
			<if expr="(buf2int(mf) == 1) or (buf2int(foffset) != 0)">
				<if-true>
					<text value=" Fragment " expr="buf2int(foffset)*8"/>

					<!-- the packet ends at: fragment offset * 8 + (total length - header length * 4 - 1) -->
					<text value=":" expr="buf2int(foffset) * 8 + buf2int(tlen) - 1 - buf2int(hlen) * 4"/>
				</if-true>
			</if>
		</showsumtemplate>
	</visualization>
</protocol>


<protocol name="ipv6" longname="IPv6 (Internet Protocol version 6)" showsumtemplate="ipv6">
	<!-- We should check that 'version' is equal to '6' -->
	<execute-code>
		<after>
			<!-- Store ipsrc and ipdst in a couple of variables for the sake of speed -->
			<!-- This aims at hiding differences between IPv4 and IPv6 for session tracking -->
			<assign-variable name="$ipsrc" value="src"/>
			<assign-variable name="$ipdst" value="dst"/>
			
			<if expr="$ipsrc lt $ipdst" >
				<if-true>
					<assign-variable name="$firstip" value="src"/>
					<assign-variable name="$secondip" value="dst"/>
				</if-true>
				<if-false>
					<assign-variable name="$firstip" value="dst"/>
					<assign-variable name="$secondip" value="src"/>
				</if-false>
			</if>
		</after>

		<!-- If we're on Ethernet, update the packet length -->
		<after when="$linklayer == 1">
			<assign-variable name="$packetlength" value="$currentoffset + buf2int(plen)"/>
		</after>
	</execute-code>

	<format>
		<fields>
			<field type="bit" name="ver" longname="Version" mask="0xF0000000" size="4" showtemplate="FieldDec"/>
			<field type="bit" name="tos" longname="Type of service" mask="0x0F000000" size="4" showtemplate="FieldHex"/>
			<field type="bit" name="flabel" longname="Flow label" mask="0x00FFFFFF" size="4" showtemplate="FieldHex"/>
			<field type="fixed" name="plen" longname="Payload Length" size="2" showtemplate="FieldDec"/>
			<field type="fixed" name="nexthdr" longname="Next Header" size="1" showtemplate="ipv6.nexthdr"/>
			<field type="fixed" name="hop" longname="Hop limit" size="1" showtemplate="FieldDec"/>
			<field type="fixed" name="src" longname="Source address" size="16" showtemplate="ip6addr"/>
			<field type="fixed" name="dst" longname="Destination address" size="16" showtemplate="ip6addr"/>

			<loop type="while" expr="1">
				<!-- Loop until we find a 'break' -->
				<switch expr="buf2int(nexthdr)">
					<case value="0">
						<includeblk name="HBH"/>
					</case>
					<case value="43">
						<includeblk name="RH"/>
					</case>
					<case value="44">
						<includeblk name="FH"/>
					</case>
					<case value="51">
						<includeblk name="AH"/>
					</case>
					<case value="60">
						<includeblk name="DOH"/>
					</case>
					<default>
						<loopctrl type="break"/>
					</default>
				</switch>
			</loop>
		</fields>


		<block name="HBH" longname="Hop By Hop Option">
			<field type="fixed" name="nexthdr" longname="Next Header" size="1" showtemplate="ipv6.nexthdr"/>
			<field type="fixed" name="helen" longname="Length (multiple of 8 bytes, not including the first 8)" size="1" showtemplate="ipv6.hbhlen"/>
			<loop type="size" expr="(buf2int(helen) * 8) + 6">	<!-- '6' because the first two bytes are nexthdr and helen -->
				<includeblk name="Option"/>
			</loop>
		</block>

		<block name="FH" longname="Fragment Header">
			<field type="fixed" name="nexthdr" longname="Next Header" size="1" showtemplate="ipv6.nexthdr"/>
			<field type="fixed" name="reserved" longname="Reserved (multiple of 8 bytes)" comment="This is in multiple of 8 bytes" size="1" showtemplate="FieldDec"/>
			<field type="bit" name="fragment offset" longname="Fragment Offset" mask="0xFFF0" size="2" showtemplate="FieldDec"/>
			<field type="bit" name="res" longname="Res" mask="0x0004" size="2" showtemplate="FieldHex"/>
			<field type="bit" name="m" longname="M" mask="0x0001" size="2" showtemplate="FieldBin"/>
			<field type="fixed" name="identification" longname="Identification" size="4" showtemplate="FieldDec"/>
		</block>

		<block name="AH" longname="Authentication Header">
			<field type="fixed" name="nexthdr" longname="Next Header" size="1" showtemplate="ipv6.nexthdr"/>
			<field type="fixed" name="payload len" longname="Payload Len" size="1" showtemplate="FieldDec"/>
			<field type="fixed" name="reserved" longname="Reserved" size="2" showtemplate="FieldDec"/>
			<field type="fixed" name="spi" longname="Security Parameters Index" size="4" showtemplate="FieldDec"/>
			<field type="fixed" name="snf" longname="Sequence Number Field" size="4" showtemplate="FieldDec"/>
		</block>

		<block name="DOH" longname="Destination Option Header">
			<field type="fixed" name="nexthdr" longname="Next Header" size="1" showtemplate="ipv6.nexthdr"/>
			<field type="fixed" name="helen" longname="Length (multiple of 8 bytes, not including the first 8)" size="1" showtemplate="ipv6.hbhlen"/>
			<loop type="size" expr="(buf2int(helen) * 8)+6"> <!-- '6' because the first two bytes are nexthdr and helen -->
				<includeblk name="Option"/>
			</loop>
		</block>

		<block name="RH" longname="Routing Header">
			<field type="fixed" name="nexthdr" longname="Next Header" size="1" showtemplate="ipv6.nexthdr"/>
			<field type="fixed" name="hlen" longname="Length (multiple of 8 bytes)" comment="This is in multiple of 8 bytes" size="1" showtemplate="FieldDec"/>	
			<field type="fixed" name="rtype" longname="Routing Type" size="1" showtemplate="FieldDec"/>
			<field type="fixed" name="segment left" longname="Segment Left" size="1" showtemplate="FieldDec"/>
			<field type="fixed" name="res" longname="Reserved (must be zero)" size="4" showtemplate="FieldDec"/>

			<switch expr="buf2int(rtype)">
				<case value="0">
					<loop type="times2repeat" expr="(buf2int(hlen) div 2)">
						<field type="fixed" name="address" longname="Address" size="16" showtemplate="ip6addr"/>
					</loop>
				</case>
				<default>
					<field type="variable" name="tsd" longname="Type Specific Data" expr="(buf2int(hlen) * 8)" showtemplate="Field4BytesHex"/>
				</default>
			</switch>
		</block>


		<block name="Option" longname="Option">
			<field type="fixed" name="opttype" longname="Option Type" size="1" showtemplate="ipv6.opttype">
				<field type="bit" name="act" longname="Action (action if Option Type is unrecognized)" mask="0xC0" size="1" showtemplate="ipv6.optact"/> 
				<field type="bit" name="chg" longname="Change (whether or not option data can change while packet is en-route)" mask="0x20" size="1" showtemplate="ipv6.optchg"/> 
				<field type="bit" name="res" longname="Option Code" mask="0x1F" size="1" showtemplate="FieldDec"/> 
			</field>

			<switch expr="buf2int(opttype)">
				<case value="0">
					<!-- No fields are present if the option is not 'Pad1'-->
				</case>

				<case value="5">	<!-- Router Alert -->
					<field type="fixed" name="optlen" longname="Option Length" size="1" showtemplate="FieldDec"/>
					<field type="fixed" name="value" size="2" longname="Option Value" showtemplate="ipv6.optroutalert"/>
				</case>

				<default>
					<field type="fixed" name="optlen" longname="Option Length" size="1" showtemplate="FieldDec"/>
					<field type="variable" name="optval" longname="Option Value" expr="buf2int(optlen)" showtemplate="Field4BytesHex"/>
				</default>
			</switch>
		</block>
	</format>


	<encapsulation>
		<switch expr="buf2int(nexthdr)">
			<case value="4"> <nextproto proto="#ip"/> </case>
			<case value="6"> <nextproto proto="#tcp"/> </case>
			<case value="17"> <nextproto proto="#udp"/> </case>
			<case value="58"> <nextproto proto="#icmp6"/> </case>
		</switch>
	</encapsulation>


	<visualization>
		<showtemplate name="ipv6.nexthdr" showtype="dec">
			<showmap>
				<switch expr="buf2int(this)">
					<case value="0" show="Hop By Hop Option Header"/>
					<case value="43" show="Fragment Header"/>
					<case value="44" show="Authentication Header"/>
					<case value="51" show="Destination Option Header"/>
					<case value="60" show="Routing Header"/>
					<case value="50" show="Encapsulating Security Payload"/>
					<case value="58" show="Internet Control Message Protocol (ICMPv6)"/>
					<case value="59" show="No next Header"/>
					<default show="Upper Layer Header"/>
				</switch>
			</showmap>
		</showtemplate>

		<showtemplate name="ipv6.opttype" showtype="hex">
			<showmap>
				<switch expr="buf2int(this)">
					<case value="0" show="Pad1 Option"/>
					<case value="1" show="PadN Option"/>
					<case value="5" show="Router Alert Option"/>
					<default show="Error in IPv6 Option Type lookup"/> 
				</switch>
			</showmap>
		</showtemplate>

		<showtemplate name="ipv6.optact" showtype="bin">
			<showmap>
				<switch expr="buf2int(this)">
					<case value="0" show="Skip over option"/>
					<case value="1" show="Discard packet silently"/>
					<case value="2" show="Discard packet and send ICMP"/>
					<case value="3" show="Discard packet and send ICMP if packet was unicast"/>
					<default show="Error in IPv6 Option Action lookup"/> 
				</switch>
			</showmap>
		</showtemplate>

		<showtemplate name="ipv6.optchg" showtype="bin">
			<showmap>
				<switch expr="buf2int(this)">
					<case value="0" show="Option data does not change en-route"/>
					<case value="1" show="Option data may change en-route"/>
					<default show="Error in IPv6 Option Change lookup"/> 
				</switch>
			</showmap>
		</showtemplate>

		<showtemplate name="ipv6.optroutalert" showtype="dec">
			<showmap>
				<switch expr="buf2int(this)">
					<case value="0" show="Datagram contains a Multicast Listener Discovery message"/>
					<case value="1" show="Datagram contains RSVP message"/>
					<case value="2" show="Datagram contains an Active Networks message"/> 
					<default show="Error in IPv6 Router Alert Option lookup"/> 
				</switch>
			</showmap>
		</showtemplate>


		<!-- Length of the hop by hop option header -->
		<showtemplate name="ipv6.hbhlen" showtype="dec">
			<showdtl>
				<text expr="(buf2int(this) * 8) + 8"/>
				<text value=" (field value = "/>
				<protofield showdata="showvalue"/>
				<text value=")"/>
			</showdtl>
		</showtemplate>


		<showsumtemplate name="ipv6">
			<if expr="($prevproto == #ip) or ($prevproto == #ipv6)">
				<if-true>
					<text value=" - "/>
				</if-true>
				<if-false>
					<section name="next"/>
				</if-false>
			</if>

			<text value="IPv6: "/>
			<protofield name="src" showdata="showvalue"/>
			<text value=" => "/>
			<protofield name="dst" showdata="showvalue"/>
			<text value=" (Len " expr="buf2int(plen) + 40"/>
			<text value=")"/>
		</showsumtemplate>
	</visualization>

</protocol>


<protocol name="tcp" longname="TCP (Transmission Control Protocol)" showsumtemplate="tcp">
	<execute-code>
		<after>
			<assign-variable name="$L4proto" value="#tcp"/>
			<!-- Stores tcp src and dst port in a couple of variables for the sake of speed -->
			<!-- By the way, the same method can be used to hide differences between IPv4 and IPv6 -->
			<assign-variable name="$portsrc" value="sport"/>
			<assign-variable name="$portdst" value="dport"/>

			<assign-variable name="$payloadlength" value="$packetlength - $currentoffset"/>

			<if expr="$ipsrc lt $ipdst" >
				<if-true>
					<assign-variable name="$firstport" value="sport"/>
					<assign-variable name="$secondport" value="dport"/>
				</if-true>
				<if-false>
					<assign-variable name="$firstport" value="dport"/>
					<assign-variable name="$secondport" value="sport"/>
				</if-false>
			</if>
		</after>

		<!-- This section is enabled when we have to do application-layer full check -->
		<after>
			<!-- Let's update the 'timestamp' of current seervice so that it does not expire -->
			<if expr="$enable_servertable">
				<!-- Server is active so we need to update KnownServer entry-->
				<if-true>
					<if expr="updatelookuptable($KnownServerTable, $firstip, $firstport)"><if-true></if-true></if>
					<if expr="updatelookuptable($KnownServerTable, $secondip,$secondport)"><if-true></if-true></if>
				</if-true>
			</if>

			<!-- Let's update the 'timestamp' of current session so that it does not expire -->
			<!-- due to the lifetime (the current packet confirms that the session is still active) -->
			<if expr="updatelookuptable($tcpsessiontable, $firstip, $secondip, $firstport, $secondport)">
				<if-true>

					<!-- This code is pretty simple and it does not take into account any TCP state -->
					<!-- Please be careful if you want to to replace "obsolete" with "purge": -->
					<!--  (a) packets following this one (e.g. ACK packets, after the FIN) -->
					<!--  (b) the payload of the current packet (if one) -->
					<!-- won't be recognized as belonging to the correct protocol, since the entry is deleted from the session table -->
					<if expr="buf2int(fin) == 1">
						<if-true>
							<update-lookuptable name="$tcpsessiontable" action="obsolete">
								<lookupkey value="$firstip"/>
								<lookupkey value="$secondip"/>
								<lookupkey value="$firstport"/>
								<lookupkey value="$secondport"/>
							</update-lookuptable>						
						</if-true>
					</if>

					<!-- If case of RST, let's make obsolete both sides of the session -->
					<if expr="buf2int(rst) == 1">
						<if-true>
							<update-lookuptable name="$tcpsessiontable" action="obsolete">
								<lookupkey value="$firstip"/>
								<lookupkey value="$secondip"/>
								<lookupkey value="$firstport"/>
								<lookupkey value="$secondport"/>						
							</update-lookuptable>
						</if-true>
					</if>

				</if-true>
			</if>
		</after>

		<!-- Let's check if this connection belongs to a well-known server. If not, we have to update the server list -->
		<!-- with the data related to the the server itself (this is contained in the CandidateServersTable). -->
		<!-- The CandidateServersTable contains only the info related to the server, but it does not know the protocol associated to it. -->
		<!-- This data is moved into the KnownServerTable when we finally know the protocol associated to this server. -->
		<!-- Please note that we may have also the infortunate case in which this packet is lost. -->
		<after when="(buf2int(syn) == 1) and (buf2int(ackf) == 0) and ($enable_servertable)">
			<if expr="not checklookuptable ($KnownServerTable, $ipdst, $portdst)">
				<if-true>
					<if expr="not checklookuptable ($CandidateServersTable, $ipdst, $portdst)">
						<if-true>
							<update-lookuptable name="$CandidateServersTable" action="add" validity="updateonhit" keeptime="10" hittime="10">
								<lookupkey value="$ipdst"/>
								<lookupkey value="$portdst"/>
							</update-lookuptable>		
						</if-true>
					</if>
				</if-true>
				<if-false>
					<if expr="updatelookuptable($KnownServerTable, $ipdst, $portdst)"><if-true></if-true></if>
				</if-false>
			</if>
		</after>

	</execute-code>
	<format>
		<fields>
			<field type="fixed" name="sport" longname="Source port" size="2" showtemplate="FieldDec"/>
			<field type="fixed" name="dport" longname="Destination port" size="2" showtemplate="FieldDec"/>
			<field type="fixed" name="seq" longname="Sequence number" size="4" showtemplate="FieldDec"/>
			<field type="fixed" name="ack" longname="Acknowledgement Number" size="4" showtemplate="FieldDec"/>
			<field type="bit" name="hlen" longname="Header length" mask="0xF000" size="2" comment="This field is in multiple of 4 bytes" showtemplate="FieldMul4Dec"/>
			<field type="bit" name="res" longname="Reserved (must be zero)" mask="0x0FC0" size="2" showtemplate="FieldHex"/>
			<field type="bit" name="flags" longname="Flags" mask="0x003F" size="2" showtemplate="FieldHex">
				<field type="bit" name="urg" longname="Urgent pointer" mask="0x0020" size="2" showtemplate="FieldBin"/>
				<field type="bit" name="ackf" longname="Ack valid" mask="0x0010" size="2" showtemplate="FieldBin"/>
				<field type="bit" name="push" longname="Push requested" mask="0x0008" size="2" showtemplate="FieldBin"/>
				<field type="bit" name="rst" longname="Reset requested" mask="0x0004" size="2" showtemplate="FieldBin"/>
				<field type="bit" name="syn" longname="Syn requested" mask="0x0002" size="2" showtemplate="FieldBin"/>
				<field type="bit" name="fin" longname="Fin requested" mask="0x0001" size="2" showtemplate="FieldBin"/>
			</field>
			<field type="fixed" name="win" longname="Window size" size="2" showtemplate="FieldDec"/>
			<field type="fixed" name="crc" longname="Checksum" size="2" showtemplate="FieldHex"/>
			<field type="fixed" name="urg" longname="Urgent Pointer" size="2" showtemplate="FieldHex"/>

			<!-- TCP Options -->
			<block name="options" longname="TCP Options">
				<loop type="size" expr="(buf2int(hlen) * 4) - 20">

					<switch expr="buf2int($packet[$currentoffset:1])">
						<case value="0">
							<includeblk name="eol"/>
							<field type="padding" name="padf" longname="Padding" description="Field used to re-align the PDU to a word" align="4" showtemplate="FieldDec"/>
						</case>
						<case value="1"> <includeblk name="noperation"/> </case>
						<case value="2"> <includeblk name="mss"/> </case>
						<case value="3"> <includeblk name="winscale"/> </case>
						<case value="4"> <includeblk name="sackpermitted"/> </case>
						<case value="5"> <includeblk name="sackformat"/> </case>
						<case value="8"> <includeblk name="timestamp"/> </case>
						<case value="19"> <includeblk name="md5signature"/> </case>
						<default> <includeblk name="unknown"/> </default>
					</switch>
				</loop>
			</block>
		</fields>

		<block name="eol" longname="End of Option List">
			<field type="fixed" name="endopt" longname="End of Option" size="1" description="Indicates the end of the option list" showtemplate="FieldDec"/>
		</block>
			
		<block name="noperation" longname="No Operation">
			<field type="fixed" name="type" longname="Type" description="This option code may be used between options" size="1" showtemplate="FieldDec"/>
		</block>

		<block name="mss" longname="Maximum Segment Size">
			<field type="fixed" name="type" longname="Type" size="1" showtemplate="FieldDec"/>
			<field type="fixed" name="length" longname="Option length" description="must be 4" size="1" showtemplate="FieldDec"/>
			<field type="fixed" name="maxssize" longname="Maximum Segment Size" size="2" showtemplate="FieldDec"/>
		</block>

		<block name="winscale" longname="TCP Windows Scale Option">
			<field type="fixed" name="type" longname="Type" description="Used to enable window scaling" size="1" showtemplate="FieldDec"/>
			<field type="fixed" name="length" longname="Option Length" description="must be 3" size="1" showtemplate="FieldDec"/>
			<field type="fixed" name="shift.cnt" longname="Shift Count" description="If window scaling is enabled the sender will right-shift its receive window values by 'shift.cnt'" size="1" showtemplate="FieldDec"/>
		</block>

		<block name="sackpermitted" longname="Sack-Permitted Option">
			<field type="fixed" name="type" longname="Type" size="1" showtemplate="FieldDec"/>
			<field type="fixed" name="length" longname="Option Length" description="must be 2" size="1" showtemplate="FieldDec"/>
		</block>

		<block name="sackformat" longname="Sack Option Format">
			<field type="fixed" name="type" longname="Type" size="1" showtemplate="FieldDec"/>
			<field type="fixed" name="length" longname="Option Length" description="(8 x n_blocks) + 2" size="1" showtemplate="FieldDec"/>
			<block name="Blocks Received" longname="Blocks Received">
				<loop type="times2repeat" expr="(buf2int(length) - 2) div 8">
					<field type="fixed" name="leftedge" longname="Left Edge of Block" size="4" showtemplate="FieldDec"/>
					<field type="fixed" name="rightedge" longname="Right Edge of Block" size="4" showtemplate="FieldDec"/>
				</loop>
			</block>
		</block>

		<block name="timestamp" longname="TCP Timestamp Option">
			<field type="fixed" name="type" longname="Type" size="1" showtemplate="FieldDec"/>
			<field type="fixed" name="length" longname="Option length" description="must be 10" size="1" showtemplate="FieldDec"/>
			<field type="fixed" name="tsval" longname="Timestamp Value" size="4" showtemplate="FieldDec"/>
			<field type="fixed" name="tsechoreply" longname="Timestamp Echo Reply" size="4" showtemplate="FieldDec"/>
		</block>

		<block name="md5signature" longname="MD5 Signature Option">
			<field type="fixed" name="type" longname="Type" size="1" showtemplate="FieldDec"/>
			<field type="fixed" name="length" longname="Option length" comment="must be 18" size="1" showtemplate="FieldDec"/>
			<field type="fixed" name="md5digest" longname="MD5 Digest" size="16" showtemplate="Field4BytesHex"/>
		</block>

		<block name="unknown" longname="Unknown TCP Option">
			<field type="fixed" name="type" longname="Type" size="1" showtemplate="FieldDec"/>
			<field type="fixed" name="length" longname="Option length" size="1" showtemplate="FieldDec"/>
			<field type="variable" name="value" longname="Value" expr="buf2int(length)" showtemplate="Field4BytesHex"/>
		</block>
	</format>

	<encapsulation>
		<switch expr="buf2int(sport)">
			<case value="20"> <nextproto proto="#ftpdata"/> </case>
			<case value="53"> <nextproto-candidate proto="#dns_tcp"/> </case>
			<case value="21"> <nextproto proto="#ftp"/> </case>
			<case value="80"> <nextproto-candidate proto="#http"/> </case>
			<case value="5060"> <nextproto-candidate proto="#sip"/> </case>
			<case value="5061"> <nextproto-candidate proto="#sip"/> </case>
			<case value="1723"> <nextproto-candidate proto="#pptp"/> </case>
		</switch>
		<switch expr="buf2int(dport)">
			<case value="20"> <nextproto proto="#ftpdata"/> </case>
			<case value="21"> <nextproto proto="#ftp"/> </case>
			<case value="53"> <nextproto-candidate proto="#dns_tcp"/> </case>
			<case value="80"> <nextproto-candidate proto="#http"/> </case>
			<case value="5060"> <nextproto-candidate proto="#sip"/> </case>
			<case value="5061"> <nextproto-candidate proto="#sip"/> </case>
			<case value="1723"> <nextproto-candidate proto="#pptp"/> </case>
		</switch>
		<nextproto-candidate proto="#http"/>
	</encapsulation>

	<visualization>
		<showsumtemplate name="tcp">
			<section name="next"/>
			<text value="TCP: port "/>
			<protofield name="sport" showdata="showvalue"/>
			<text value=" => "/>
			<protofield name="dport" showdata="showvalue"/>
			<text value=" ("/>
			<if expr="buf2int(syn) == 1">
				<if-true>
					<text value="SYN "/>
				</if-true>
			</if>
			<if expr="buf2int(fin) == 1">
				<if-true>
					<text value="FIN "/>
				</if-true>
			</if>
			<if expr="buf2int(ackf) == 1">
				<if-true>
					<text value="ACK "/>
				</if-true>
			</if>
			<if expr="buf2int(rst) == 1">
				<if-true>
					<text value="RST "/>
				</if-true>
			</if>
			<if expr="buf2int(push) == 1">
				<if-true>
					<text value="PUSH "/>
				</if-true>
			</if>
			<if expr="buf2int(urg) == 1">
				<if-true>
					<text value="URG "/>
				</if-true>
			</if>
			<text value=")"/>
			<text value=" Seq "/>
			<protofield name="seq" showdata="showvalue"/>
			<text value=", Ack "/>
			<protofield name="ack" showdata="showvalue"/>
			<text value=", Win "/>
			<protofield name="win" showdata="showvalue"/>
		</showsumtemplate>
	</visualization>
</protocol>

<protocol name="vlan" longname="Virtual LAN (802.3ac)" showsumtemplate="vlan">
	<format>
		<fields>
			<block name="vlan" size="2" longname="Tag Control Information">
				<field type="bit" name="pri" longname="User Priority" mask="0xE000" size="2" showtemplate="FieldHex"/>
				<field type="bit" name="cfi" longname="CFI" mask="0x1000" size="2" showtemplate="FieldDec"/>
				<field type="bit" name="vlanid" longname="VLAN ID" mask="0x0FFF" size="2" showtemplate="FieldDec"/>
			</block>

			<field type="fixed" name="type" longname="Ethertype - Length" size="2" showtemplate="eth.typelength"/>
		</fields>
	</format>


	<encapsulation>
		<switch expr="buf2int(type)">
			<case value="0x800"> <nextproto proto="#ip"/> </case>
			<case value="0x806"> <nextproto proto="#arp"/> </case>
			<case value="0x8100"> <nextproto proto="#vlan" comment="Standard 802.1Q in 802.1Q encapsulation"/> </case>
			<case value="0x9100"> <nextproto proto="#vlan" comment="802.1Q in 802.1Q encapsulation used by Cisco"/> </case>
			<case value="0x8864"> <nextproto proto="#pppoe"/> </case>
			<case value="0x86DD"> <nextproto proto="#ipv6"/> </case>
		</switch>
	</encapsulation>

	<visualization>
		<showsumtemplate name="vlan">
			<text value=" (VLAN-ID "/>
			<protofield name="vlanid" showdata="showvalue"/>
			<text value=")"/>
		</showsumtemplate>
	</visualization>

</protocol>

<protocol name="lcp" longname="LCP (Link Control Protocol)" showsumtemplate="lcp">
	<format>
		<fields>
			<field type="fixed" name="code" longname="Code" size="1" showtemplate="lcp.code"/>
			<field type="fixed" name="identifier" longname="Identifier" size="1" showtemplate="FieldHex"/>
			<field type="fixed" name="len" longname="Length" size="2" showtemplate="FieldDec"/>
			<if expr="buf2int(code) == 8">
				<if-true>
					<field type="fixed" name="rejpro" longname="Rejected Protocol" size="2" showtemplate="FieldHex"/>
				</if-true>
			</if>
			<if expr="buf2int(code) == 9 or buf2int(code) == 10 or buf2int(code) == 11 or buf2int(code) == 12">
				<if-true>
					<field type="fixed" name="magic" longname="Magic Number" size="4" showtemplate="FieldDec"/>
				</if-true>
			</if>
			<loop type="size" expr="buf2int(len)-4">
				<!-- Here a switch could be better in order to provide
				a better decription of each option-->
				<field type="fixed" name="opt_type" longname="Option type" size="1" showtemplate="lcp.opt.type"/>
				<field type="fixed" name="opt_len" longname="Option length" size="1" showtemplate="FieldDec"/>
				<field type="variable" name="opt_data" longname="Option data" expr="buf2int(opt_len)-2" showtemplate="FieldHexBin"/>								
			</loop>
		</fields>
	</format>

	<visualization>
		<showsumtemplate name="lcp">
			<text value=" - LCP"/>
		</showsumtemplate>

		<showtemplate name="lcp.code" showtype="dec">
			<showmap>
				<switch expr="buf2int(this)">
					<case value="1" show="Configure-Request"/> 
					<case value="2" show="Configure-Ack"/> 
					<case value="3" show="Configure-Nak"/> 
					<case value="4" show="Configure-Reject"/> 
					<case value="5" show="Terminate-Request"/> 
					<case value="6" show="Terminate-Ack"/>
					<case value="7" show="Code-Reject"/>
					<case value="8" show="Protocol-Reject"/>
					<case value="9" show="Echo-Request"/>
					<case value="10" show="Echo-Reply"/>
					<case value="11" show="Discard-Request"/>
					<case value="12" show="Link-Quality Report"/>
					<default show="Error in code lookup"/> 
				</switch>
			</showmap>
		</showtemplate>

		<showtemplate name="lcp.opt.type" showtype="dec">
			<showmap>
				<switch expr="buf2int(this)">
					<!--for more info see http://www.networksorcery.com/enp/protocol/LCP.htm-->
					<case value="0" show="Vendor Specific"/> 
					<case value="1" show="Maximum-Receive-Unit"/> 
					<case value="3" show="Authentication-Protocol"/> 
					<case value="4" show="Quality-Protocol"/> 					
					<case value="5" show="Magic-Number"/> 
					<case value="7" show="Protocol-Field-Compression (Deprecated)"/>
					<case value="8" show="Address-and-Control-Field-Compression"/>
					<case value="9" show="FCS-Alternatives"/>
					<case value="10" show="Self-Describing-Pad"/>
					<case value="11" show="Numbered-Mode"/>
					<case value="12" show="Identification"/>
					<case value="13" show="Callback"/>
					<case value="14" show="Connect-Time (Deprecated)"/>
					<case value="15" show="Compound-Frames (Deprecated)"/>
					<case value="16" show="Nominal-Data-Encapsulation (Deprecated)"/>
					<case value="17" show="Multilink Max-Receive-Reconstructed-Unit (MRRU)"/>
					<case value="18" show="Multilink Short Sequence Number Header Format"/>
					<case value="19" show="Multilink Endpoint Discriminator"/>
					<case value="20" show="Proprietary"/>
					<case value="21" show="DCE-Identifier"/>
					<case value="22" show="MP+ Procedure Option"/>
					<case value="23" show="Link Discriminator for BACP."/>
					<case value="24" show="LCP-Authentication-Option"/>
					<case value="25" show="COBS (Consistent Overhead Byte Stuffing)"/>					
					<case value="26" show="Prefix Elision"/>
					<case value="27" show="Multilink header format"/>
					<case value="28" show="Internationalization"/>
					<case value="29" show="Simple Data Link on SONET/SDH"/>					
					<default show="Error option code lookup"/> 
				</switch>
			</showmap>
		</showtemplate>
	</visualization>
</protocol>

<protocol name="icmp6" longname="ICMPv6 (Internet Control Message Protocol version 6)" showsumtemplate="icmp6">
	<format>
		<fields>
			<!-- The first three fields are common for every ICMPv6 message -->
			<!-- 'Code' ad 'Checksum' are common among all the headers; however the meaning of the 'Code' is different -->
			<field type="fixed" name="type" longname="Type" size="1" showtemplate="icmp6.type"/>

			<switch expr="buf2int(type)">
				<!-- Error messages -->
				<case value="1">
					<field type="fixed" name="code" longname="Code" size="1" showtemplate="icmp6.code1"/>
					<field type="fixed" name="checksum" longname="Checksum" size="2" showtemplate="FieldHex"/>
					<includeblk name="Error"/>
				</case>
				<case value="2">
					<field type="fixed" name="code" longname="Code" size="1" showtemplate="FieldDec"/>
					<field type="fixed" name="checksum" longname="Checksum" size="2" showtemplate="FieldHex"/>
					<includeblk name="Error"/>
				</case>
				<case value="3">
					<field type="fixed" name="code" longname="Code" size="1" showtemplate="icmp6.code3"/>
					<field type="fixed" name="checksum" longname="Checksum" size="2" showtemplate="FieldHex"/>
					<includeblk name="Error"/>
				</case>
				<case value="4">
					<field type="fixed" name="code" longname="Code" size="1" showtemplate="icmp6.code4"/>
					<field type="fixed" name="checksum" longname="Checksum" size="2" showtemplate="FieldHex"/>
					<includeblk name="Error"/>
				</case>

				<!-- Informational messages -->
				<case value="128">
					<field type="fixed" name="code" longname="Code" size="1" showtemplate="FieldDec"/>
					<field type="fixed" name="checksum" longname="Checksum" size="2" showtemplate="FieldHex"/>
					<includeblk name="Echo"/>
				</case>
				<case value="129">
					<field type="fixed" name="code" longname="Code" size="1" showtemplate="FieldDec"/>
					<field type="fixed" name="checksum" longname="Checksum" size="2" showtemplate="FieldHex"/>
					<includeblk name="Echo"/>
				</case>

				<!-- Group Management messages -->
				<case value="130">
					<field type="fixed" name="code" longname="Code" size="1" showtemplate="FieldDec"/>
					<field type="fixed" name="checksum" longname="Checksum" size="2" showtemplate="FieldHex"/>
					<includeblk name="Group"/>
				</case>
				<case value="131">
					<field type="fixed" name="code" longname="Code" size="1" showtemplate="FieldDec"/>
					<field type="fixed" name="checksum" longname="Checksum" size="2" showtemplate="FieldHex"/>
					<includeblk name="Group"/>
				</case>
				<case value="132">
					<field type="fixed" name="code" longname="Code" size="1" showtemplate="FieldDec"/>
					<field type="fixed" name="checksum" longname="Checksum" size="2" showtemplate="FieldHex"/>
					<includeblk name="Group"/>
				</case>

				<!-- Router / Neighbor Advertisement / Solicitation -->
				<case value="133">
					<field type="fixed" name="code" longname="Code" size="1" showtemplate="FieldDec"/>
					<field type="fixed" name="checksum" longname="Checksum" size="2" showtemplate="FieldHex"/>
					<includeblk name="RoutSol"/>
				</case>
				<case value="134">
					<field type="fixed" name="code" longname="Code" size="1" showtemplate="FieldDec"/>
					<field type="fixed" name="checksum" longname="Checksum" size="2" showtemplate="FieldHex"/>
					<includeblk name="RoutAdv"/>
				</case>
				<case value="135">
					<field type="fixed" name="code" longname="Code" size="1" showtemplate="FieldDec"/>
					<field type="fixed" name="checksum" longname="Checksum" size="2" showtemplate="FieldHex"/>
					<includeblk name="NeighSol"/>
				</case>
				<case value="136">
					<field type="fixed" name="code" longname="Code" size="1" showtemplate="FieldDec"/>
					<field type="fixed" name="checksum" longname="Checksum" size="2" showtemplate="FieldHex"/>
					<includeblk name="NeighAdv"/>
				</case>
		
				<!-- Other messages -->
				<case value="137">
					<field type="fixed" name="code" longname="Code" size="1" showtemplate="FieldDec"/>
					<field type="fixed" name="checksum" longname="Checksum" size="2" showtemplate="FieldHex"/>
					<includeblk name="Redir"/>
				</case>
		
				<case value="138">
					<field type="fixed" name="code" longname="Code" size="1" showtemplate="icmp6.code138"/>
					<field type="fixed" name="checksum" longname="Checksum" size="2" showtemplate="FieldHex"/>
					<includeblk name="RoutRen"/>
				</case>
		
				<case value="141">
					<field type="fixed" name="code" longname="Code" size="1" showtemplate="FieldDec"/>
					<field type="fixed" name="checksum" longname="Checksum" size="2" showtemplate="FieldHex"/>
					<includeblk name="INDS"/>
				</case>
		
				<case value="142">
					<field type="fixed" name="code" longname="Code" size="1" showtemplate="FieldDec"/>
					<field type="fixed" name="checksum" longname="Checksum" size="2" showtemplate="FieldHex"/>
					<includeblk name="INDA"/>
				</case>
			</switch>
		</fields>

		<block name="Error" longname="Error Packet">
			<field type="fixed" name="unused" size="4" longname="Unused" showtemplate="FieldHex"/>
			<!-- Here you can find the fragment of the IPv6 packet that caused the error -->
		</block>

		<block name="Echo" longname="Echo Packet">
			<field type="fixed" name="id" size="2" longname="Identifier" showtemplate="FieldDec"/>
			<field type="fixed" name="sequence_number" size="2" longname="Sequence Number" showtemplate="FieldDec"/>
			<field type="variable" name="data" longname="Data" expr="$packetlength - $currentoffset" showtemplate="Field4BytesHex"/>
		</block>

		<block name="Group" longname="Group Membership">
			<field type="fixed" name="maximum_response_delay" size="2" longname="Maximum Response Delay" showtemplate="FieldDec"/>
			<field type="fixed" name="unused" size="2" longname="unused" showtemplate="FieldDec"/>
			<field type="fixed" name="multicast_address" longname="Multicast Address" size="16" showtemplate="ip6addr-noplg"/>
		</block>

		<block name="RoutSol" longname="Router Solicitation">
			<field type="fixed" name="reserved" longname="Reserved" size="4" showtemplate="FieldDec"/>
			<loop type="size" expr="$packetlength - $currentoffset">
				<includeblk name="NDO"/>
			</loop>
		</block>

		<block name="RoutAdv" longname="Router Advertisement">
			<field type="fixed" name="cur_hop_limit" longname="Current Hop Limit" size="1" showtemplate="FieldDec"/>
			<block name="flags" longname="Flags">
				<field type="bit" name="managed_address_configuration" mask="0x80" size="1" longname="Managed Address Configuration" showtemplate="FieldBin"/>
				<field type="bit" name="other_stateful_configuration" mask="0x40" size="1" longname="Other Stateful Configuration" showtemplate="FieldBin"/>
				<field type="bit" name="reserved" mask="0x3F" size="1" longname="Reserved" showtemplate="FieldBin"/>
			</block>
			<field type="fixed" name="router_lifetime" size="2" longname="Router Lifetime" showtemplate="FieldDec"/>
			<field type="fixed" name="reachable_time" size="4" longname="Reachable Time" showtemplate="FieldDec"/>
			<field type="fixed" name="retrans_time" size="4" longname="Retransmission Time" showtemplate="FieldDec"/>
			<loop type="size" expr="$packetlength - $currentoffset">
				<includeblk name="NDO"/>
			</loop>
		</block>

		<block name="NeighSol" longname="Neighbor Solicitation" showsumtemplate="icmp6.neighsol">
			<field type="fixed" size="4" name="reserved" longname="Reserved" showtemplate="FieldDec"/>
			<field type="fixed" name="target_address" longname="Target Address" size="16" showtemplate="ip6addr-noplg"/>
			<loop type="size" expr="$packetlength - $currentoffset">
				<includeblk name="NDO"/>
			</loop>
		</block>

		<block name="NeighAdv" longname="Neighbor Advertisement" showsumtemplate="icmp6.neighadv">>
			<block name="flags" longname="Flags">
				<field type="bit" name="router_flag" mask="0x80000000" size="4" longname="Router Flag" showtemplate="FieldBin"/>
				<field type="bit" name="solicited_flag" mask="0x40000000" size="4" longname="Solicited Flag" showtemplate="FieldBin"/>
				<field type="bit" name="override_flag" mask="0x20000000" size="4" longname="Override Flag" showtemplate="FieldBin"/>
				<field type="bit" name="reserved" mask="0x1FFFFFFF" size="4" longname="Reserved" showtemplate="FieldBin"/>
			</block>
			<field type="fixed" name="target_address" longname="Target Address" size="16" showtemplate="ip6addr-noplg"/>
			<loop type="size" expr="$packetlength - $currentoffset">
				<includeblk name="NDO"/>
			</loop>
		</block>

		<block name="Redir" longname="Redirect">
			<field type="fixed" name="reserved" longname="Reserved" size="4" showtemplate="FieldDec"/>
			<field type="fixed" name="target_address" longname="Target Address" size="16" showtemplate="ip6addr-noplg"/>
			<field type="fixed" name="destination_address" longname="Destination Address" size="4" showtemplate="ip6addr-noplg"/>
			<loop type="size" expr="$packetlength - $currentoffset">
				<includeblk name="NDO"/>
			</loop>
		</block>

		<block name="RoutRen" longname="Router Renumbering">
			<field type="fixed" name="sequence_number" size="4" longname="Sequence Number" showtemplate="FieldDec"/>
			<field type="fixed" name="segment_number" longname="Segment Number" size="1" showtemplate="FieldDec"/>
			<block name="flags" longname="Flags">
				<field type="bit" name="test_command" mask="0x80" size="1" longname="Test Command" showtemplate="FieldBin"/>
				<field type="bit" name="result_requested" mask="0x40" size="1" longname="Result Requested" showtemplate="FieldBin"/>
				<field type="bit" name="all_interfaces" mask="0x20" size="1" longname="All Interfaces" showtemplate="FieldBin"/>
				<field type="bit" name="site_specific" mask="0x10" size="1" longname="Site Specific" showtemplate="FieldBin"/>
				<field type="bit" name="processed_previously" mask="0x08" size="1" longname="Processed Previously" showtemplate="FieldBin"/>
				<field type="bit" name="reserved" mask="0x07" size="1" longname="Reserved" showtemplate="FieldBin"/>
			</block>
			<field type="fixed" name="maximum_delay" size="2" longname="Maximum Delay" showtemplate="FieldDec"/>
			<field type="fixed" name="reserved" size="4" longname="Reserved" showtemplate="FieldHex"/>
			<loop type="size" expr="$packetlength - $currentoffset">
				<includeblk name="RR_command" type="continue" longname="Router Renumbering Command"/>
				<includeblk name="RR_result" type="continue" longname="Router Renumbering Result"/>
			</loop>
		</block>

		<block name="INDS" longname="Inverse Neighbor Discovery Solicitation">
			<field type="fixed" name="reserved" size="4" longname="Reserved" showtemplate="FieldDec"/>
			<loop type="size" expr="$packetlength - $currentoffset">
				<includeblk name="NDO"/>
			</loop>
		</block>

		<block name="INDA" longname="Inverse Neighbor Discovery Advertisement">
			<field type="fixed" name="reserved" size="4" longname="Reserved" showtemplate="FieldDec"/>
			<loop type="size" expr="$packetlength - $currentoffset">
				<includeblk name="NDO"/>
			</loop>
		</block>


		<!-- Common Options; these are called several times from within other options -->
<!--
		<block name="NDO" longname="Neighbor Discovery Option" showtemplate="icmp6.ndo">
-->
		<block name="NDO" longname="Neighbor Discovery Option">
			<field type="fixed" name="ndotype" longname="Type" size="1" showtemplate="icmp6.ndotype"/>
			<field type="fixed" name="length" longname="Length" size="1" showtemplate="FieldDec"/>

			<switch expr="buf2int(ndotype)">
				<case value="1" name="source_link_layer_address" longname="Source Link Layer Address">
					<field type="fixed" name="link_layer_address" longname="Link Layer Address" size="6" showtemplate="MAC-dash"/>
				</case>

				<case value="2" name="target_link_layer_address" longname="Target Link Layer Address">
					<field type="fixed" name="link_layer_address" longname="Link Layer Address" size="6" showtemplate="MAC-dash"/>
				</case>

				<case value="3" name="prefix_information" longname="Prefix Information">
					<field type="fixed" name="prefix_length" longname="Prefix Length" size="1" showtemplate="FieldDec"/>
					<block name="flags" longname="Flags">
						<field type="bit" name="L" mask="0x80" size="1" longname="On-link" showtemplate="FieldBin"/>
						<field type="bit" name="A" mask="0x40" size="1" longname="Autonomous address-configuration" comment="Can be used as a prefix for interface auto-configuration" showtemplate="FieldBin"/>
						<field type="bit" name="reserved_1" mask="0x3F" size="1" longname="Reserved" showtemplate="FieldBin"/>
					</block>
					<field type="fixed" name="valid_lifetime" size="4" longname="Valid Lifetime" showtemplate="FieldDec"/>
					<field type="fixed" name="preferred_lifetime" size="4" longname="Preferred Lifetime" showtemplate="FieldDec"/>
					<field type="fixed" name="reserved_2" size="4" longname="Reserved" showtemplate="FieldDec"/>
					<field type="fixed" name="prefix" longname="Prefix" size="16" showtemplate="ip6addr-noplg"/>
				</case>

				<case value="4" name="redirect_header" longname="Redirect Header">
					<field type="fixed" name="reserved" size="6" longname="Reserved" showtemplate="FieldDec"/>
					<!-- Here you can find the IPv6 original packet -->
				</case>

				<case value="5" name="MTU" longname="MTU Option">
					<field type="fixed" name="reserved" size="2" longname="Reserved" showtemplate="FieldDec"/>
					<field type="fixed" name="MTU" size="4" longname="MTU (Maximum Transfer Unit)" showtemplate="FieldDec"/>
				</case>

				<case value="9" name="source_address_list" longname="Source Address List">
					<field type="fixed" name="reserved" size="6" longname="Reserved" showtemplate="FieldDec"/>
					<loop type="times2repeat" expr="(buf2int(length) - 1) div 2">
						<field type="fixed" name="IPv6_address" longname="IPv6 Address" size="16" showtemplate="ip6addr-noplg"/>
					</loop>
				</case>

				<case value="10" name="target_address_list" longname="Target Address List">
					<field type="fixed" name="reserved" size="6" longname="Reserved" showtemplate="FieldDec"/>
					<loop type="times2repeat" expr="(buf2int(length) - 1) div 2">
						<field type="fixed" name="IPv6_address" longname="IPv6 Address" size="16" showtemplate="ip6addr-noplg"/>
					</loop>
				</case>
			</switch>
		</block>

		<block name="RR_command" longname="Router Renumbering Command">
			<field type="fixed" name="opcode" longname="Opcode" size="1" showtemplate="FieldDec"/>
			<field type="fixed" name="oplength" longname="Oplength" size="1" showtemplate="FieldDec"/>
			<field type="fixed" name="ordinal" longname="Ordinal" size="1" showtemplate="FieldDec"/>
			<field type="fixed" name="matchlength" longname="Match Length" size="1" showtemplate="FieldDec"/>
			<field type="fixed" name="minlength" longname="Minimum Length" size="1" showtemplate="FieldDec"/>
			<field type="fixed" name="maxlength" longname="Maximum Length" size="1" showtemplate="FieldDec"/>
			<field type="fixed" name="reserved" size="2" longname="Reserved" showtemplate="FieldHex"/>
			<field type="fixed" name="match-prefix" longname="Match-Prefix" size="16" showtemplate="ip6addr-noplg"/>

			<block name="use-prefix_part" longname="Use-Prefix Part">
				<loop type="times2repeat" expr="(buf2int(oplength) - 3) div 2">
					<field type="fixed" name="uselength" longname="Use Length" size="1" showtemplate="FieldDec"/>
					<field type="fixed" name="keeplength" longname="Keep Length" size="1" showtemplate="FieldDec"/>
					<field type="fixed" name="flagmask" longname="Flagmask" size="1" showtemplate="FieldDec"/>
					<field type="fixed" name="RAFlags" longname="RA Flags" size="1" showtemplate="FieldDec"/>
					<field type="fixed" name="valid_lifetime" size="4" longname="Valid Lifetime" showtemplate="FieldDec"/>
					<field type="fixed" name="preferred_lifetime" size="4" longname="Preferred Lifetime" showtemplate="FieldDec"/>
					<block name="flags" longname="Flags">
						<field type="bit" name="V" mask="0x80000000" size="4" longname="V" showtemplate="FieldBin"/>
						<field type="bit" name="P" mask="0x40000000" size="4" longname="P" showtemplate="FieldBin"/>
						<field type="bit" name="reserved" mask="0x3FFFFFFF" size="4" longname="Reserved" showtemplate="FieldBin"/>
					</block>
					<field type="fixed" name="userprefix" longname="User Prefix" size="16" showtemplate="ip6addr-noplg"/>
				</loop>
			</block>
		</block>

		<block name="RR_result" longname="Router Renumbering Result">
			<block name="flags" longname="Flags">
				<field type="bit" name="reserved" mask="0xFFFC" size="2" longname="Reserved" showtemplate="FieldBin"/>
				<field type="bit" name="B" mask="0x0002" size="2" longname="B" showtemplate="FieldBin"/>
				<field type="bit" name="F" mask="0x0001" size="2" longname="F" showtemplate="FieldBin"/>
			</block>
			<field type="fixed" name="ordinal" longname="Ordinal" size="1" showtemplate="FieldDec"/>
			<field type="fixed" name="matchedlength" longname="Matched Length" size="1" showtemplate="FieldDec"/>
			<field type="fixed" name="interfaceindex" size="4" longname="Interface Index" showtemplate="FieldDec"/>
			<field type="fixed" name="matchedprefix" longname="Matched Prefix" size="16" showtemplate="ip6addr-noplg"/>
		</block>
	</format>

	<visualization>
		<showtemplate name="icmp6.type" showtype="dec">
			<showmap>
				<switch expr="buf2int(this)">
					<case value="1" show="Destination Unreachable"/>
					<case value="2" show="Packet Too Big"/>
					<case value="3" show="Time Exceeded"/>
					<case value="4" show="Parameter Problem"/>
					<case value="128" show="Echo Request"/>
					<case value="129" show="Echo Reply"/>
					<case value="130" show="Group Membership Query"/>
					<case value="131" show="Group Membership Report"/>
					<case value="132" show="Group Membership Reduction"/>
					<case value="133" show="Router Solicitation"/>
					<case value="134" show="Router Advertisement"/>
					<case value="135" show="Neighbor Solicitation"/>
					<case value="136" show="Neighbor Advertisement"/>
					<case value="137" show="Redirect"/>
					<case value="138" show="Router Renumbering"/>
					<case value="141" show="Inverse Neighbor Discovery Solicitation"/>
					<case value="142" show="Inverse Neighbor Discovery Advertisement"/>
					<default show="Error in ICMP6 type lookup"/> 
				</switch>
			</showmap>
		</showtemplate>
		
		<showtemplate name="icmp6.code1" showtype="dec">
			<showmap>
				<switch expr="buf2int(this)">
					<case value="0" show="No Route To Destination"/>
					<case value="1" show="Communication With Destination Administratively Prohibited"/>
					<case value="2" show="Not A Neighbor"/>
					<case value="3" show="Address Unreachable"/>
					<case value="4" show="Port Unreachable"/>
					<default show="Error in ICMP6 Code 1 lookup"/> 
				</switch>
			</showmap>
		</showtemplate>
		
		<showtemplate name="icmp6.code3" showtype="dec">
			<showmap>
				<switch expr="buf2int(this)">
					<case value="0" show="Hop Limit Exceeded In Transit"/>
					<case value="1" show="Fragment Reassembly Time Exceeded"/>
					<default show="Error in ICMP6 Code 3 lookup"/> 
				</switch>
			</showmap>
		</showtemplate>
		
		<showtemplate name="icmp6.code4" showtype="dec">
			<showmap>
				<switch expr="buf2int(this)">
					<case value="0" show="Erroneous Header Field"/>
					<case value="1" show="Unrecognized Next Header"/>
					<case value="2" show="Unrecognized IPv6 Option"/>
					<default show="Error in ICMP6 Code 4 lookup"/> 
				</switch>
			</showmap>
		</showtemplate>
		
		<showtemplate name="icmp6.code138" showtype="dec">
			<showmap>
				<switch expr="buf2int(this)">
					<case value="0" show="Router Renumbering Command"/>
					<case value="1" show="Router Renumbering Result"/>
					<case value="255" show="Sequence Number Reset"/>
					<default show="Error in ICMP6 Code 138 lookup"/> 
				</switch>
			</showmap>
		</showtemplate>
		
		<showtemplate name="icmp6.ndotype" showtype="dec">
			<showmap>
				<switch expr="buf2int(this)">
					<case value="1" show="Source Link Layer Address"/>
					<case value="2" show="Target Link Layer Address"/>
					<case value="3" show="Prefix Information"/>
					<case value="4" show="Redirect Header"/>
					<case value="5" show="MTU"/>
					<case value="6" show="NBMA Shortcut Limit Option"/>
					<case value="7" show="Advertisement Interval"/>
					<case value="8" show="Home Agent Information"/>
					<case value="9" show="Source Address List"/>
					<case value="10" show="Target Address List"/>
					<default show="Error in ICMP6 NDO Type lookup"/> 
				</switch>
			</showmap>
		</showtemplate>

		<showsumtemplate name="icmp6">
			<section name="next"/>
			<text value="ICMP6: "/>
			<protofield name="type" showdata="showmap"/>
			<if expr="(buf2int(type) == 1) or (buf2int(type) == 3) or (buf2int(type) == 4) or (buf2int(type) == 138)">
				<!-- In this case, print the 'code' as well -->				
				<if-true>
					<text value=" ("/>
					<protofield name="code" showdata="showmap"/>
					<text value=")"/>
				</if-true>
			</if>
		</showsumtemplate>

		<showsumtemplate name="icmp6.neighsol">
			<text value=": who has "/>
			<protofield name="target_address" showdata="showvalue"/>
			<if expr="ispresent(link_layer_address)">
				<if-true>
					<!-- Source MA address is optional -->
					<text value="? I am at "/>
					<protofield name="link_layer_address" showdata="showvalue"/>
				</if-true>
				<if-false>
					<text value="?"/>
				</if-false>
			</if>
		</showsumtemplate>

		<showsumtemplate name="icmp6.neighadv">
			<text value=": I am "/>
			<protofield name="target_address" showdata="showvalue"/>
			<text value=" at "/>
			<protofield name="link_layer_address" showdata="showvalue"/>
		</showsumtemplate>

<!--
		<showtemplate name="icmp6.ndo">
			<protofield name="NDO" showdata="longname"/>
			<text value=" "/>
			<protofield name="ndotype" showdata="showmap"/>
		</showsumtemplate>
-->
	</visualization>
	
</protocol>

<protocol name="ftp" longname="FTP (File Transfer Protocol) - Control connection" showsumtemplate="ftpcontrol">
	<execute-code>
		<init>
			<variable name="$ftpdataport" type="buffer" validity="static" size="2"/>
		</init>

		<verify>
			<if expr="hasstring($packet[$currentoffset:0], '^220.*ftp|^220.*(\x0d\x0a)$',0)"> 
				<if-true>
					<assign-variable name="$protoverify_result" value="%FOUND"/>
				</if-true>
			</if>
<!--
			<if expr="hasstring($packet[$currentoffset : 0], '^(USER|PASS|ACCT|CWD|CDUP|SMNT|REIN|QUIT|PORT|PASV|PASS|TYPE|STRU|MODE|RETR|STOR|STOU|APPE|ALLO|REST|RNFR|RNTO|ABOR|DELE|RMD|MKD|PWD|LIST|NLST|SITE|SYST|STAT|HELP|NOOP)',0)">
				<if-true>
					<assign-variable name="$protoverify_result" value="%FOUND"/>
				</if-true>
			</if>
-->
		</verify>

		<before when="$protoverify_result == %FOUND">
			<assign-variable name="$session_hit" value="1"/>
			<update-lookuptable name="$tcpsessiontable" action="add" validity="updateonhit" keeptime="300" hittime="300">
				<lookupkey value="$firstip"/>
				<lookupkey value="$secondip"/>
				<lookupkey value="$firstport"/>
				<lookupkey value="$secondport"/>
				<lookupdata value="#ftp"/>
				<lookupdata value="0"/>
			</update-lookuptable>

			<if expr="$enable_servertable">
				<if-true>
					<if expr="checklookuptable($CandidateServersTable, $ipsrc, $portsrc)">
						<if-true>
							<update-lookuptable name="$KnownServerTable" action="add" validity="updateonhit" keeptime="300" hittime="300">
								<lookupkey value="$ipsrc"/>
								<lookupkey value="$portsrc"/>
								<lookupdata value="#ftp"/>
							</update-lookuptable>
							<!-- delete entry from CandidateServersTable -->
							<update-lookuptable name="$CandidateServersTable" action="purge">
								<lookupkey value="$ipsrc"/>
								<lookupkey value="$portsrc"/>											
							</update-lookuptable>
						</if-true>
						<if-false>
							<if expr="checklookuptable($CandidateServersTable, $ipdst, $portdst)">
								<if-true>
									<update-lookuptable name="$KnownServerTable" action="add" validity="updateonhit" keeptime="300" hittime="300">
										<lookupkey value="$ipdst"/>
										<lookupkey value="$portdst"/>
										<lookupdata value="#ftp"/>
									</update-lookuptable>
									<update-lookuptable name="$CandidateServersTable" action="purge">
										<lookupkey value="$ipdst"/>
										<lookupkey value="$portdst"/>											
									</update-lookuptable>
								</if-true>
							</if>
						</if-false>
					</if>
				</if-true>
			</if>
		</before>
		

		<after when="ispresent(port)">
			<!-- Add a session entry related to the FTP data connection -->

			<if expr="ispresent(command) and command == 'PORT'">
				<if-true>
					<!-- Active mode: client always uses port specified in the message; server uses port 20 -->
					<assign-variable name="$ftpdataport[0:1]" value="int2buf( ascii2int(port1), 1)" />
					<assign-variable name="$ftpdataport[1:1]" value="int2buf( ascii2int(port2), 1)" />

					<if expr="$ipsrc lt $ipdst">
						<if-true>
							<update-lookuptable name="$tcpsessiontable" action="add" validity="replaceonhit" keeptime="300" newhittime="300">
								<lookupkey value="$ipsrc"/>
								<lookupkey value="$ipdst"/>
								<lookupkey value="$ftpdataport"/>
								<lookupkey value="'\x00\x00'" mask="0x0000"/>
								<lookupdata value="#ftpdata"/>
								<lookupdata value="0"/>
							</update-lookuptable>
						</if-true>

						<if-false>
							<update-lookuptable name="$tcpsessiontable" action="add" validity="replaceonhit" keeptime="300" newhittime="300">
								<lookupkey value="$ipdst"/>
								<lookupkey value="$ipsrc"/>
								<lookupkey value="'\x00\x00'" mask="0x0000"/>
								<lookupkey value="$ftpdataport"/>
								<lookupdata value="#ftpdata"/>
								<lookupdata value="0"/>
							</update-lookuptable>
						</if-false>
					</if>
				</if-true>
			</if>
			
			<if expr="ispresent(code) and code == '227'">
				<if-true>
					<!-- Passive mode: server always uses port specified in the message; client port is unknown -->
					<assign-variable name="$ftpdataport[0:1]" value="int2buf( ascii2int(port1), 1)" />
					<assign-variable name="$ftpdataport[1:1]" value="int2buf( ascii2int(port2), 1)" />

					<if expr="$ipsrc lt $ipdst">
						<if-true>
							<update-lookuptable name="$tcpsessiontable" action="add" validity="replaceonhit" keeptime="300" newhittime="300">
								<lookupkey value="$ipsrc"/>
								<lookupkey value="$ipdst"/>
								<lookupkey value="$ftpdataport"/>
								<lookupkey value="'\x00\x00'" mask="0x0000"/>
								<lookupdata value="#ftpdata"/>
								<lookupdata value="0"/>
							</update-lookuptable>
						</if-true>
						
						<if-false>
							<update-lookuptable name="$tcpsessiontable" action="add" validity="replaceonhit" keeptime="300" newhittime="300">
								<lookupkey value="$ipdst"/>
								<lookupkey value="$ipsrc"/>
								<lookupkey value="'\x00\x00'" mask="0x0000"/>
								<lookupkey value="$ftpdataport"/>
								<lookupdata value="#ftpdata"/>	
								<lookupdata value="0"/>
							</update-lookuptable>				
						</if-false>
					</if>
				</if-true>
			</if>
		</after>
	</execute-code>

	<format>
		<fields>
			<loop type="size" expr="$packetlength - $currentoffset">
			
				<!--<if expr= "hasstring($packet[$currentoffset : 0], '^[^0-9].{3,4}',0)">-->
				<if expr="hasstring($packet[$currentoffset : 0], '^(USER|PASS|ACCT|CWD|CDUP|SMNT|REIN|QUIT|PORT|PASV|PASS|TYPE|STRU|MODE|RETR|STOR|STOU|APPE|ALLO|REST|RNFR|RNTO|ABOR|DELE|RMD|MKD|PWD|LIST|NLST|SITE|SYST|STAT|HELP|NOOP)',0)">
					<if-true>
						<if expr="$packet[$currentoffset:4] == 'PORT'">
							<if-true>
								<field type="line" name="port" longname="Data connection port" showtemplate="FieldAscii">
									<field type="tokenended" name="command" longname="Command" endtoken=" " endoffset="$token_fieldlen" showtemplate="FieldAscii"/>
									<field type="tokenended" name="host1" longname="Host (1st part)" endtoken="," endoffset="$token_fieldlen" enddiscard="1" showtemplate="FieldAscii"/>
									<field type="tokenended" name="host2" longname="Host (2nd part)" endtoken="," endoffset="$token_fieldlen" enddiscard="1" showtemplate="FieldAscii"/>
									<field type="tokenended" name="host3" longname="Host (3rd part)" endtoken="," endoffset="$token_fieldlen" enddiscard="1" showtemplate="FieldAscii"/>
									<field type="tokenended" name="host4" longname="Host (4th part)" endtoken="," endoffset="$token_fieldlen" enddiscard="1" showtemplate="FieldAscii"/>
									<field type="tokenended" name="port1" longname="Port (1st part)" endtoken="," endoffset="$token_fieldlen" enddiscard="1" showtemplate="FieldAscii"/>
									<field type="tokenended" name="port2" longname="Port (2nd part)" endtoken="\x0D" endoffset="$token_fieldlen" showtemplate="FieldAscii"/>		
								</field>
							</if-true>
							
							<if-false>
								<field type="line" name="commandftp" longname="Command FTP" showtemplate="FieldAscii">
									<field type="tokenended" name="command" longname="Command" endtoken=" " showtemplate="FieldAscii"/>
									<field type="tokenended" name="argument" longname="Argument" endtoken="x0Dx0A" showtemplate="FieldAscii"/>
								</field>
							</if-false>
						</if>
					</if-true>
					
					<if-false>	
						<if expr="$packet[$currentoffset:3] == '227'">
							<if-true>
								<field type="line" name="port" longname="Data connection port" showtemplate="FieldAscii">
									<field type="fixed" name="code" longname="Code" size="3" showtemplate="FieldAscii"/>
									<field type="tokenended" name="string" longname="String" endtoken="(" endoffset="$token_fieldlen" enddiscard="1" showtemplate="FieldAscii"/>
									<field type="tokenended" name="host1" longname="Host (1st part)" endtoken="," endoffset="$token_fieldlen" enddiscard="1" showtemplate="FieldAscii"/>
									<field type="tokenended" name="host2" longname="Host (2nd part)" endtoken="," endoffset="$token_fieldlen" enddiscard="1" showtemplate="FieldAscii"/>
									<field type="tokenended" name="host3" longname="Host (3rd part)" endtoken="," endoffset="$token_fieldlen" enddiscard="1" showtemplate="FieldAscii"/>
									<field type="tokenended" name="host4" longname="Host (4th part)" endtoken="," endoffset="$token_fieldlen" enddiscard="1" showtemplate="FieldAscii"/>
									<field type="tokenended" name="port1" longname="Port (1st part)" endtoken="," endoffset="$token_fieldlen" enddiscard="1" showtemplate="FieldAscii"/>
									<field type="tokenended" name="port2" longname="Port (2nd part)" endtoken=")" endoffset="$token_fieldlen" showtemplate="FieldAscii"/>
								</field>
							</if-true>
							<if-false>
								<field type="fixed" name="code" longname="Code" size="3" showtemplate="FieldAscii"/>
								<field type="tokenended" name="string" longname="String" endtoken="\x0D\x0A" showtemplate="FieldAscii"/>
							</if-false>
							<missing-packetdata>
								<field type="variable" name="truncdata" longname="Truncated Data" expr="$packetlength - $currentoffset" showtemplate="FieldAscii"/>
							</missing-packetdata>
						</if>
					</if-false>
				</if>
			</loop>
		</fields>
	</format>

	<visualization>
		<showsumtemplate name="ftpcontrol">
			<section name="next"/>
			<text value="FTP Control"/>
			<if expr="ispresent(code)">
				<if-true>
					<text value=" reply"/>
				</if-true>
			</if>
			<if expr="ispresent(command)">
				<if-true>
					<text value=" command"/>
				</if-true>
			</if>
		</showsumtemplate>
	</visualization>
</protocol>

<protocol name="ftpdata" longname="FTP (File Transfer Protocol) - Data connection" showsumtemplate="ftpdata">
	<format>
		<fields>
			<field type="variable" name="data" longname="FTP Data" expr="$packetlength - $currentoffset" showtemplate="Field4BytesHex"/>
		</fields>
	</format>

	<visualization>
		<showsumtemplate name="ftpdata">
			<section name="next"/>
			<text value="FTP Data"/>
		</showsumtemplate>
	</visualization>
</protocol>

<protocol name="sip" longname="Session Initiation Protocol" showsumtemplate="sip">
	<execute-code>
		<verify>
			<if expr="hasstring($packet[$currentoffset:0], '^(invite|register|cancel|message|subscribe|notify) sip[\x09-\x0d -~]*sip/[0-2]\.[0-9]', 0)">
				<if-true>
					<assign-variable name="$protoverify_result" value="%FOUND"/>
				</if-true>
			</if>
		</verify>

		<before when="($L4proto == #tcp) and ($protoverify_result == %FOUND)">	
			<assign-variable name="$session_hit" value="1"/>
			<update-lookuptable name="$tcpsessiontable" action="add" validity="updateonhit" keeptime="300" hittime="300">
				<lookupkey value="$firstip"/>
				<lookupkey value="$secondip"/>
				<lookupkey value="$firstport"/>
				<lookupkey value="$secondport"/>
				<lookupdata value="#sip"/>
				<lookupdata value="0"/>
			</update-lookuptable>

			<if expr="$enable_servertable">
				<if-true>
					<if expr="checklookuptable($CandidateServersTable, $ipsrc, $portsrc)">
						<if-true>
							<update-lookuptable name="$KnownServerTable" action="add" validity="updateonhit" keeptime="300" hittime="300">
								<lookupkey value="$ipsrc"/>
								<lookupkey value="$portsrc"/>
								<lookupdata value="#sip"/>
							</update-lookuptable>
							<!-- delete entry from CandidateServersTable -->
							<update-lookuptable name="$CandidateServersTable" action="purge">
								<lookupkey value="$ipsrc"/>
								<lookupkey value="$portsrc"/>											
							</update-lookuptable>
						</if-true>
						<if-false>
							<if expr="checklookuptable($CandidateServersTable, $ipdst, $portdst)">
								<if-true>
									<update-lookuptable name="$KnownServerTable" action="add" validity="updateonhit" keeptime="300" hittime="300">
										<lookupkey value="$ipdst"/>
										<lookupkey value="$portdst"/>
										<lookupdata value="#sip"/>
									</update-lookuptable>
									<update-lookuptable name="$CandidateServersTable" action="purge">
										<lookupkey value="$ipdst"/>
										<lookupkey value="$portdst"/>											
									</update-lookuptable>
								</if-true>
							</if>
						</if-false>
					</if>
				</if-true>
			</if>
		</before>

		<before when="($L4proto == #udp) and ($protoverify_result == %FOUND)">	
			<assign-variable name="$session_hit" value="1"/>
			<update-lookuptable name="$udpsessiontable" action="add" validity="updateonhit" keeptime="300" hittime="300">
				<lookupkey value="$ipsrc"/>
				<lookupkey value="$ipdst"/>
				<lookupkey value="$portsrc"/>
				<lookupkey value="$portdst"/>
				<lookupdata value="#sip"/>
			</update-lookuptable>

			<!-- SIP has bidirectional connections, so let's insert also the other direction -->
			<update-lookuptable name="$udpsessiontable" action="add" validity="updateonhit" keeptime="300" hittime="300">
				<lookupkey value="$ipdst"/>
				<lookupkey value="$ipsrc"/>
				<lookupkey value="$portdst"/>
				<lookupkey value="$portsrc"/>
				<lookupdata value="#sip"/>
			</update-lookuptable>
		</before>
	</execute-code>
	<format>
		<fields>
			<field type="line" name="cmd" longname="Command" showtemplate="FieldAscii"/>
			<loop type="size" expr="$packetlength - $currentoffset">
				<field type="line" name="HeaderField" longname="Header Field" showtemplate="FieldAscii"/>
			</loop>
		</fields>
	</format>

	<visualization>
		<showsumtemplate name="sip">
			<section name="next"/>
			<text value="SIP: "/>
			<protofield name="cmd" showdata="showvalue"/>
		</showsumtemplate>
	</visualization>
</protocol>

<protocol name="dns_tcp" longname="DNS over TCP" showsumtemplate="dns_tcp">
		<execute-code>
		<verify>
			<!-- check this signature -->
			<if expr="(($packetlength - $currentoffset - 2 )==(buf2int($packet[$currentoffset : 2])))">
				<if-true>
					<assign-variable name="$protoverify_result" value="%FOUND"/>
				</if-true>	
			</if>
		</verify>

		<before when="$protoverify_result == %FOUND">
			<assign-variable name="$session_hit" value="1"/>
			<update-lookuptable name="$tcpsessiontable" action="add" validity="updateonhit" keeptime="300" hittime="300">
				<lookupkey value="$firstip"/>
				<lookupkey value="$secondip"/>
				<lookupkey value="$firstport"/>
				<lookupkey value="$secondport"/>
				<lookupdata value="#dns_tcp"/>
				<lookupdata value="0"/>
			</update-lookuptable>	

			<if expr="$enable_servertable">
				<if-true>
					<if expr="checklookuptable($CandidateServersTable, $ipsrc, $portsrc)">
						<if-true>
							<update-lookuptable name="$KnownServerTable" action="add" validity="updateonhit" keeptime="300" hittime="300">
								<lookupkey value="$ipsrc"/>
								<lookupkey value="$portsrc"/>
								<lookupdata value="#dns_tcp"/>
							</update-lookuptable>
							<!-- delete entry from CandidateServersTable -->
							<update-lookuptable name="$CandidateServersTable" action="purge">
								<lookupkey value="$ipsrc"/>
								<lookupkey value="$portsrc"/>											
							</update-lookuptable>
						</if-true>
						<if-false>
							<if expr="checklookuptable($CandidateServersTable, $ipdst, $portdst)">
								<if-true>
									<update-lookuptable name="$KnownServerTable" action="add" validity="updateonhit" keeptime="300" hittime="300">
										<lookupkey value="$ipdst"/>
										<lookupkey value="$portdst"/>
										<lookupdata value="#dns_tcp"/>
									</update-lookuptable>
									<update-lookuptable name="$CandidateServersTable" action="purge">
										<lookupkey value="$ipdst"/>
										<lookupkey value="$portdst"/>											
									</update-lookuptable>
								</if-true>
							</if>
						</if-false>
					</if>
				</if-true>
			</if>
		</before>		
	</execute-code>
	<format>
		<fields>
			<field type="variable" name="data" longname="Data" expr="$packetlength - $currentoffset" showtemplate="FieldAscii"/>
		</fields>
	</format>
	
	<visualization>
		<showsumtemplate name="dns_tcp">
			<section name="next"/>
			<text value="DNS over TCP"/>
		</showsumtemplate>
	</visualization>
</protocol>

<protocol name="http" longname="HTTP (Hyper Text Transfer Protocol)" showsumtemplate="http">
	<execute-code>
		<verify>
			<!-- <if expr="hasstring($packet[$currentoffset:0], 'http/(0\.9|1\.0|1\.1) [1-5][0-9][0-9]|(post|get|head|propfind|mkcol|delete|put|copy|move|lock|unlock) [\x09-\x0d -~]* http/[01]\.[019]', 0)"> -->
			<if expr="hasstring($packet[$currentoffset:0], 'http/(0\.9|1\.0|1\.1) [1-5][0-9][0-9]|(connect|post|get|head|propfind|mkcol|delete|put|copy|move|lock|unlock) [\x09-\x0d -~]* http/[01]\.[019]', 0)">
				<if-true>
					<assign-variable name="$protoverify_result" value="%CANDIDATE"/>
				</if-true>
			</if>
		</verify>

		<before when="$protoverify_result == %CANDIDATE or $protoverify_result == %FOUND">
			<assign-variable name="$session_hit" value="1"/>
			<update-lookuptable name="$tcpsessiontable" action="add" validity="updateonhit" keeptime="300" hittime="300">
				<lookupkey value="$firstip"/>
				<lookupkey value="$secondip"/>
				<lookupkey value="$firstport"/>
				<lookupkey value="$secondport"/>
				<lookupdata value="#http"/>
				<lookupdata value="0"/>
			</update-lookuptable>

			<if expr="$enable_servertable">
				<if-true>
					<if expr="checklookuptable($CandidateServersTable, $ipsrc, $portsrc)">
						<if-true>
							<update-lookuptable name="$KnownServerTable" action="add" validity="updateonhit" keeptime="300" hittime="300">
								<lookupkey value="$ipsrc"/>
								<lookupkey value="$portsrc"/>
								<lookupdata value="#http"/>
							</update-lookuptable>
							<!-- delete entry from CandidateServersTable -->
							<update-lookuptable name="$CandidateServersTable" action="purge">
								<lookupkey value="$ipsrc"/>
								<lookupkey value="$portsrc"/>											
							</update-lookuptable>
						</if-true>
						<if-false>
							<if expr="checklookuptable($CandidateServersTable, $ipdst, $portdst)">
								<if-true>
									<update-lookuptable name="$KnownServerTable" action="add" validity="updateonhit" keeptime="300" hittime="300">
										<lookupkey value="$ipdst"/>
										<lookupkey value="$portdst"/>
										<lookupdata value="#http"/>
									</update-lookuptable>
									<update-lookuptable name="$CandidateServersTable" action="purge">
										<lookupkey value="$ipdst"/>
										<lookupkey value="$portdst"/>											
									</update-lookuptable>
								</if-true>
							</if>
						</if-false>
					</if>
				</if-true>
			</if>
		</before>
	</execute-code>

	<format>
		<fields>

			<!-- Check if this packet contains an header -->
			<if expr="($packet[$currentoffset : 3] == 'GET') or ($packet[$currentoffset : 4] == 'POST') or ($packet[$currentoffset : 4] == 'HTTP')">
				<if-true>

					<block name="header" longname="HTTP Header">

						<!-- Requestline and statusline-->
						<if expr="($packet[$currentoffset : 3] == 'GET') or ($packet[$currentoffset : 4] == 'POST')">
							<if-true>
								<field type="line" name="cmdline" longname="Command Line" showtemplate="FieldAscii">
									<field type="tokenended" name="method" longname="Method" endtoken=" " showtemplate="FieldAscii"/>
									<field type="tokenended" name="url" longname="URL" endtoken=" " showtemplate="FieldAscii"/>
									<field type="line" name="version" longname="Version" showtemplate="FieldAscii"/>
								</field>
							</if-true>
							
							<if-false>
								<field type="line" name="statusline" longname="Status Line" showtemplate="FieldAscii">
									<field type="tokenended" name="version" longname="Version" endtoken=" " showtemplate="FieldAscii"/>
									<field type="tokenended" name="statuscode" longname="Status Code" endtoken=" " showtemplate="FieldAscii"/>
									<field type="line" name="reasonphrase" longname="Reason Phrase" showtemplate="FieldAscii"/>
								</field>
							</if-false>
						</if>

						<loop type="size" expr="$packetlength - $currentoffset">

							<switch expr="extractstring($packet[$currentoffset: 0], '[^:\n]*', 1, 0)" 
										comment="Field names are case-insensitive in HTTP; however, field-values may be case sensitive.">

								<case value="'User-Agent'">
									<field type="line" name="useragent" longname="User Agent" showtemplate="HttpField"/>
								</case>
								<case value="'Accept'">
									<field type="line" name="accept" longname="Accept MIME Types" showtemplate="HttpField"/>
								</case>
								<case value="'Accept-Language'">
									<field type="line" name="acceptlanguage" longname="Accept Language" showtemplate="HttpField"/>
								</case>
								<case value="'Server'">
									<field type="line" name="server" longname="Server" showtemplate="HttpField" />
								</case>
								<case value="'Content-Type'">
									<field type="line" name="contenttype" longname="Content Type" showtemplate="HttpField" />
								</case>
								<case value="'Host'">
									<field type="line" name="host" longname="Host" showtemplate="HttpField" />
								</case>
								<case value="'Content-Encoding'">
									<field type="line" name="contentencoding" longname="Content Encoding" showtemplate="HttpField" />
								</case>
								<case value="'Content-Length'">
									<field type="line" name="contentlength" longname="Content Length" showtemplate="HttpField" />
								</case>
								<case value="'Date'">
									<field type="line" name="date" longname="Date" showtemplate="HttpField" />
								</case>
								<case value="'Expires'">
									<field type="line" name="expires" longname="Expires" showtemplate="HttpField" />
								</case>
								<case value="'From'">
									<field type="line" name="from" longname="From" showtemplate="HttpField" />
								</case>
								<case value="'If-Modified-Since'">
									<field type="line" name="ifmodifiedsince" longname="If Modified Since" showtemplate="HttpField" />
								</case>
								<case value="'Last-Modified'">
									<field type="line" name="lastmodified" longname="Last Modified" showtemplate="HttpField" />
								</case>
								<case value="'Location'">
									<field type="line" name="location" longname="Location" showtemplate="HttpField" />
								</case>
								<case value="'Pragma'">
									<field type="line" name="pragma" longname="Pragma" showtemplate="HttpField" />
								</case>
								<case value="'Referer'">
									<field type="line" name="referer" longname="Referer" showtemplate="HttpField" />
								</case>	
								<case value="'WWW-Authenticate'">
									<field type="line" name=" wwwauthenticate" longname="WWW Authenticate" showtemplate="HttpField" />
								</case>	

								<!-- other options will follow -->

								<!-- This is an other way to say 'stop, the HTTP header is ended -->
								<case value="'\x0D'">
									<field type="line" name="endheader" longname="End Of Header" showtemplate="FieldAscii"/>
									<loopctrl type="break"/>
								</case>

								<default>
									<field type="line" name="option" longname="Option" showtemplate="FieldAscii"/>
								</default>
							</switch>

						</loop>
					</block>
				</if-true>
				<missing-packetdata>
					<field type="variable" name="truncdata" longname="Truncated Data" expr="$packetlength - $currentoffset" showtemplate="FieldAscii"/>
				</missing-packetdata>
			</if>

			<block name="header" longname="HTTP Object">
				<loop type="size" expr="$packetlength - $currentoffset">
					<field type="line" name="data" longname="HTTP data" showtemplate="FieldAscii"/>
				</loop>
			</block>

		</fields>
	</format>

	<visualization>
		<showsumtemplate name="http">
			<section name="next"/>
			<if expr="ispresent(method)">
				<if-true>
					<text value="HTTP request"/>
				</if-true>
				
				<if-false>
					<text value="HTTP response"/>
				</if-false>	
			</if>
		</showsumtemplate>

		<!-- This template aims at showing only the part of the field which is after the ": " delimiter, -->
		<!-- which corresponds to the field value (hence the last '1' as parameter). -->
		<showtemplate name="HttpField" showtype="ascii" showgrp="1"> 
			<showdtl>
				<text expr="extractstring(this, ': ([[:print:]]*)', 1, 1)"/>
			</showdtl>
		</showtemplate>

	</visualization>
</protocol>



<protocol name="udp" longname="UDP (User Datagram protocol)" showsumtemplate="udp">
	<execute-code>
		<after>
			<assign-variable name="$L4proto" value="#udp"/>
			<!-- Stores tcp src and dst port in a couple of variables for the sake of speed -->
			<!-- By the way, the same method can be used to hide differences between IPv4 and IPv6 -->
			<assign-variable name="$portsrc" value="sport"/>
			<assign-variable name="$portdst" value="dport"/>

			<assign-variable name="$payloadlength" value="$packetlength - $currentoffset"/>


			<if expr="$ipsrc lt $ipdst" >
				<if-true>
					<assign-variable name="$firstport" value="sport"/>
					<assign-variable name="$secondport" value="dport"/>
				</if-true>
				<if-false>
					<assign-variable name="$firstport" value="dport"/>
					<assign-variable name="$secondport" value="sport"/>
				</if-false>
			</if>

			<!-- Let's update the 'timestamp' of current session so that it does not expire -->
			<!-- due to the lifetime (the current packet confirms that the session is still active) -->
			<if expr="updatelookuptable($udpsessiontable, $ipsrc, $ipdst, $portsrc, $portdst)"><if-true></if-true></if>

			<if expr="$enable_servertable">
				<if-true>
					<if expr="updatelookuptable($KnownUDPServerTable, $ipsrc, $portsrc)"><if-true></if-true></if>
					<if expr="updatelookuptable($KnownUDPServerTable, $ipdst, $portdst)"><if-true></if-true></if>
				</if-true>
			</if>
		</after>
	</execute-code>

	<format>
		<fields>
			<field type="fixed" name="sport" longname="Source port" size="2" showtemplate="FieldDec"/>
			<field type="fixed" name="dport" longname="Destination port" size="2" showtemplate="FieldDec"/>
			<field type="fixed" name="len" longname="Payload length" size="2" showtemplate="FieldDec"/>
			<field type="fixed" name="crc" longname="Checksum" size="2" showtemplate="FieldHex"/>
		</fields>
	</format>

	<encapsulation>
		<switch expr="buf2int(sport)">
			<case value="53"> <nextproto proto="#dns"/> </case>
		</switch>
		<switch expr="buf2int(dport)">
			<case value="53"> <nextproto proto="#dns"/> </case>
		</switch>
	</encapsulation>

	<visualization>
		<showsumtemplate name="udp">
			<section name="next"/>
			<text value="UDP: port "/>
			<protofield name="sport" showdata="showvalue"/>
			<text value=" => "/>
			<protofield name="dport" showdata="showvalue"/>
		</showsumtemplate>
	</visualization>
</protocol>

<protocol name="dns" longname="DNS (Domain Name System)" showsumtemplate="dns">
	<format>
		<fields>
			<field type="fixed" name="ID" size="2" longname="Identifier" showtemplate="FieldDec"/>
			<block name="flags" longname="Flags">
				<field type="bit" name="Query" mask="0x8000" size="2" longname="Message type" showtemplate="dns.query"/>
				<field type="bit" name="Opcode" mask="0x7800" size="2" longname="Type of query" showtemplate="dns.opcode"/>
				<field type="bit" name="AuthAnsw" mask="0x0400" size="2" longname="Authoritative answer" showtemplate="FieldBin"/>
				<field type="bit" name="Truncation" mask="0x0200" size="2" longname="Truncation" showtemplate="FieldBin"/>
				<field type="bit" name="Recursive" mask="0x0100" size="2" longname="Recursion desired" showtemplate="FieldBin"/>
				<field type="bit" name="AvlRecur" mask="0x0080" size="2" longname="Recursion available" showtemplate="FieldBin"/>
				<field type="bit" name="checking" mask="0x0070" size="2" longname="Checking disabled" showtemplate="FieldBin"/>
				<field type="bit" name="RCode" mask="0x000F" size="2" longname="Response code" showtemplate="dns.rcode"/>
			</block>		
			
			<field type="fixed" name="QuestionCount" size="2" longname="Number of questions" showtemplate="FieldDec"/>
			<field type="fixed" name="AnswerCount" size="2" longname="Number of answers" showtemplate="FieldDec"/>
			<field type="fixed" name="NameServerCount" size="2" longname="Number of name server resource records" showtemplate="FieldDec"/>
			<field type="fixed" name="AdditionalCount" size="2" longname="Number of additional resource records" showtemplate="FieldDec"/>

			<block name="QuestionsLoop" longname="Question Records">
				<loop type="times2repeat" expr="buf2int(QuestionCount)">
					<includeblk name="Question"/>
				</loop>
			</block>

			<block name="AnswersLoop" longname="Answer Records">
				<loop type="times2repeat" expr="buf2int(AnswerCount)">
					<includeblk name="Answer"/>
				</loop>
			</block>

			<block name="NSRRLoop" longname="Name Server Resource Records">
				<loop type="times2repeat" expr="buf2int(NameServerCount)">
					<includeblk name="NameServerResourceRecord"/>
				</loop>
			</block>

			<block name="ARRLoop" longname="Additional Resource Records">
				<loop type="times2repeat" expr="buf2int(AdditionalCount)">
					<includeblk name="AdditionalResourceRecord"/>
				</loop>
			</block>
		</fields>

		<block name="Question" longname="Question">
			<field type="plugin" name="dname" longname="Domain Name" plugin="DomainName" showtemplate="dns.dname"/>
			<field type="fixed" name="qtype" size="2" longname="Question type" showtemplate="dns.type"/>
			<field type="fixed" name="qclass" size="2" longname="Question class" showtemplate="dns.class"/>
		</block>

		<block name="Answer" longname="Answer">
			<field type="plugin" name="dname" longname="Domain Name" plugin="DomainName" showtemplate="dns.dname"/>
		 	<field type="fixed" name="type" size="2" longname="Answer type" showtemplate="dns.type"/>
			<field type="fixed" name="class" size="2" longname="Answer class" showtemplate="dns.class"/>
			<field type="fixed" name="ttl" size="4" longname="Time to live" showtemplate="FieldDec"/>
			<field type="fixed" name="rdlength" size="2" longname="Resource data length" showtemplate="FieldDec"/>

			<switch expr="buf2int(type)">
				<case value="1"> <field type="fixed" name="ip4addr" longname="IPv4 address" size="4" showtemplate="ip4addr-noplg"/> </case>	
				<case value="2"> <field type="variable" name="nameserver" longname="Name server" expr="buf2int(rdlength)" showtemplate="dns.dname"/> </case>	
				<case value="3"> <includeblk name="MD"/> </case>	
				<case value="4"> <includeblk name="MF"/> </case>	
				<case value="5"> <field type="variable" name="cname" longname="Canonical name" expr="buf2int(rdlength)" showtemplate="dns.dname"/> </case>
				<case value="6"> <includeblk name="SOA"/> </case>	
				<case value="7"> <includeblk name="MB"/> </case>	
				<case value="8"> <includeblk name="MG"/> </case>	
				<case value="9"> <includeblk name="MR"/> </case>	
				<case value="10"> <field type="variable" name="null" longname="NULL" expr="$packetlength - $currentoffset" showtemplate="Field4BytesHex"/> </case>
				<case value="11"> <includeblk name="WKS"/> </case>
				<case value="12"> <field type="variable" name="ptrname" longname="Domain name" expr="buf2int(rdlength)" showtemplate="dns.dname"/> </case>
				<case value="13"> <includeblk name="HINFO"/> </case>	
				<case value="14"> <includeblk name="MINFO"/> </case>	
				<case value="15"> <includeblk name="MX"/> </case>	
				<case value="16"> <includeblk name="TXT"/> </case>
				<case value="28"> <field type="fixed" name="ip6addr" longname="IPv6 address" size="16" showtemplate="ip6addr"/> </case>	
				<case value="33"> <includeblk name="SRV"/> </case>
				<case value="35"> <includeblk name="NAPTR"/> </case>
				<case value="38"> <includeblk name="A6"/> </case>
				<default> <field type="variable" name="rddata" longname="Resource Data" expr="buf2int(rdlength)" showtemplate="Field4BytesHex"/> </default>
			</switch>			
		</block>

		<block name="NameServerResourceRecord" longname="NS Resource Record">
			<field type="plugin" name="dname" longname="Domain Name" plugin="DomainName" showtemplate="dns.dname"/>		
		 	<field type="fixed" name="type" size="2" longname="Answer type" showtemplate="dns.type"/>
			<field type="fixed" name="class" size="2" longname="Answer class" showtemplate="dns.class"/>
			<field type="fixed" name="ttl" size="4" longname="Time to live" showtemplate="FieldDec"/>
			<field type="fixed" name="rdlength" size="2" longname="Resource data length" showtemplate="FieldDec"/>

			<switch expr="buf2int(type)">
				<case value="1"> <field type="fixed" name="ip4addr" longname="IPv4 address" size="4" showtemplate="ip4addr-noplg"/> </case>	
				<case value="2"> <field type="variable" name="nameserver" longname="Name server" expr="buf2int(rdlength)" showtemplate="dns.dname"/> </case>	
				<case value="3"> <includeblk name="MD"/> </case>	
				<case value="4"> <includeblk name="MF"/> </case>	
				<case value="5"> <field type="variable" name="cname" longname="Canonical name" expr="buf2int(rdlength)" showtemplate="dns.dname"/> </case>
				<case value="6"> <includeblk name="SOA"/> </case>	
				<case value="7"> <includeblk name="MB"/> </case>	
				<case value="8"> <includeblk name="MG"/> </case>	
				<case value="9"> <includeblk name="MR"/> </case>	
				<case value="10"> <field type="variable" name="null" longname="NULL" expr="$packetlength - $currentoffset" showtemplate="Field4BytesHex"/> </case>
				<case value="11"> <includeblk name="WKS"/> </case>
				<case value="12"> <field type="variable" name="ptrname" longname="Domain name" expr="buf2int(rdlength)" showtemplate="dns.dname"/> </case>
				<case value="13"> <includeblk name="HINFO"/> </case>	
				<case value="14"> <includeblk name="MINFO"/> </case>	
				<case value="15"> <includeblk name="MX"/> </case>	
				<case value="16"> <includeblk name="TXT"/> </case>	
				<case value="28"> <field type="fixed" name="ip6addr" longname="IPv6 address" size="16" showtemplate="ip6addr"/> </case>	
				<case value="33"> <includeblk name="SRV"/> </case>
				<case value="35"> <includeblk name="NAPTR"/> </case>
				<case value="38"> <includeblk name="A6"/> </case>
				<default> <field type="variable" name="rddata" longname="Resource Data" expr="buf2int(rdlength)" showtemplate="Field4BytesHex"/> </default>
			</switch>			
		</block>	

		<block name="AdditionalResourceRecord" longname="Additional Resource Records">
			<field type="plugin" name="dname" longname="Domain Name" plugin="DomainName" showtemplate="dns.dname"/>
		 	<field type="fixed" name="type" size="2" longname="Answer type" showtemplate="dns.type"/>
			<field type="fixed" name="class" size="2" longname="Answer class" showtemplate="dns.class"/>
			<field type="fixed" name="ttl" size="4" longname="Time to live" showtemplate="FieldDec"/>
			<field type="fixed" name="rdlength" size="2" longname="Resource data length" showtemplate="FieldDec"/>

			<switch expr="buf2int(type)">
				<!-- For a ,ist of types, check http://www.networksorcery.com/enp/protocol/dns.htm#Answer%20RRs -->
				<case value="1"> <field type="fixed" name="ip4addr" longname="IPv4 address" size="4" showtemplate="ip4addr-noplg"/> </case>	
				<case value="2"> <field type="variable" name="nameserver" longname="Name server" expr="buf2int(rdlength)" showtemplate="dns.dname"/> </case>	
				<case value="3"> <includeblk name="MD"/> </case>	
				<case value="4"> <includeblk name="MF"/> </case>	
				<case value="5"> <field type="variable" name="cname" longname="Canonical name" expr="buf2int(rdlength)" showtemplate="dns.dname"/> </case>
				<case value="6"> <includeblk name="SOA"/> </case>	
				<case value="7"> <includeblk name="MB"/> </case>	
				<case value="8"> <includeblk name="MG"/> </case>	
				<case value="9"> <includeblk name="MR"/> </case>	
				<case value="10"> <field type="variable" name="null" longname="NULL" expr="$packetlength - $currentoffset" showtemplate="Field4BytesHex"/> </case>
				<case value="11"> <includeblk name="WKS"/> </case>
				<case value="12"> <field type="variable" name="ptrname" longname="Domain name" expr="buf2int(rdlength)" showtemplate="dns.dname"/> </case>
				<case value="13"> <includeblk name="HINFO"/> </case>	
				<case value="14"> <includeblk name="MINFO"/> </case>	
				<case value="15"> <includeblk name="MX"/> </case>	
				<case value="16"> <includeblk name="TXT"/> </case>	
				<case value="28"> <field type="fixed" name="ip6addr" longname="IPv6 address" size="16" showtemplate="ip6addr"/> </case>	
				<case value="33"> <includeblk name="SRV"/> </case>
				<case value="35"> <includeblk name="NAPTR"/> </case>
				<case value="38"> <includeblk name="A6"/> </case>
				<default> <field type="variable" name="rddata" longname="Resource Data" expr="buf2int(rdlength)" showtemplate="Field4BytesHex"/> </default>
			</switch>			
		</block>

		<block name="A6" longname="A6 Resource Record">
			<field type="fixed" name="prefixlen" size="1" longname="Prefix length" showtemplate="FieldDec"/>
			<field type="variable" name="suffix" longname="Address suffix" expr="(buf2int(prefixlen) + 7) div 8" showtemplate="FieldAscii"/>
			
			<if expr="(buf2int(prefixlen) != 0) and (buf2int(prefixlen) != 128)">
				<if-true>
					<field type="plugin" name="dname" longname="Domain Name" plugin="DomainName" showtemplate="dns.dname"/>
				</if-true>
			</if>
		</block>

		<block name="HINFO" longname="HINFO Resource Record">
			<field type="fixed" name="cpulen" longname="CPU string length" size="1" showtemplate="FieldDec"/>
			<field type="variable" name="CPU" description="CPU type" longname="CPU type" expr="buf2int(cpulen)" showtemplate="FieldAscii"/>
			<field type="fixed" name="oslen" longname="OS string length" size="1" showtemplate="FieldDec"/>
			<field type="variable" name="OS" description="Operating System" longname="Operating system" expr="buf2int(oslen)" showtemplate="FieldAscii"/>			
		</block>

		<block name="MB" longname="MB Resource Record">
			<field type="plugin" name="dname" longname="Domain Name" plugin="DomainName" showtemplate="dns.dname"/>
		</block>

		<block name="MD" longname="MD Resource Record">
			<field type="plugin" name="dname" longname="Domain Name" plugin="DomainName" showtemplate="dns.dname"/>
		</block>

		<block name="MF" longname="MF Resource Record">
			<field type="plugin" name="dname" longname="Domain Name" plugin="DomainName" showtemplate="dns.dname"/>
		</block>

		<block name="MG" longname="MG Resource Record">
			<field type="plugin" name="dname" longname="Domain Name" plugin="DomainName" showtemplate="dns.dname"/>
		</block>

		<block name="MINFO" longname="MINFO Resource Record">
			<field type="plugin" name="RMAILBX" longname="RMAILBX Domain Name" plugin="DomainName" showtemplate="dns.dname"/>
			<field type="plugin" name="EMAILBX" longname="EMAILBX Domain Name" plugin="DomainName" showtemplate="dns.dname"/>
		</block>

		<block name="MR" longname="MR Resource Record">
			<field type="plugin" name="dname" longname="Domain Name" plugin="DomainName" showtemplate="dns.dname"/>
		</block>

		<block name="MX" longname="MX Resource Record">
			<field type="fixed" name="preference" size="2" longname="Preference" showtemplate="FieldDec"/>
			<field type="plugin" name="exchange" longname="Mail Exchanger (SMTP)" plugin="DomainName" showtemplate="dns.dname"/>
		</block>

		<block name="SOA" longname="SOA Resource Record">
			<field type="plugin" name="mname" longname="Primary name server" plugin="DomainName" showtemplate="dns.dname"/>
			<field type="plugin" name="rname" longname="Responsible autority's mailbox" description="Mailbox of the person responsible for this zone" plugin="DomainName" showtemplate="dns.dname"/>
			<field type="fixed" name="SERIAL" size="4" longname="Serial" showtemplate="FieldDec"/>
			<field type="fixed" name="REFRESH" size="4" longname="Refresh" showtemplate="FieldDec"/>
			<field type="fixed" name="RETRY" size="4" longname="Retry" showtemplate="FieldDec"/>
			<field type="fixed" name="EXPIRE" size="4" longname="Expire" showtemplate="FieldDec"/>
			<field type="fixed" name="MINIMUM" size="4" longname="Minimum" showtemplate="FieldDec"/>
		</block>

		<block name="TXT" longname="TXT Resource Record">
			<field type="fixed" name="txtlen" longname="TXT-DATA string length" size="1" showtemplate="FieldDec"/>
			<field type="variable" name="TXT-DATA" description="TXT-DATA" longname="TXT-DATA" expr="buf2int(txtlen)" showtemplate="FieldAscii"/>
		</block>

		<block name="WKS" longname="WKS Resource Record">
			<field type="fixed" name="ADDRESS" longname="Internet address" size="4" showtemplate="ip4addr-noplg"/>
			<field type="fixed" name="PROTOCOL" longname="IP Protocol Number" size="1" showtemplate="FieldDec"/>
			<!-- TODO: what about that hell of bitmasks????? -->
		</block>

		<block name="SRV" longname="SRV Resource Record">
			<field type="fixed" name="priority" longname="Priority" size="2" showtemplate="FieldDec"/>
			<field type="fixed" name="weight" longname="Weight" size="2" showtemplate="FieldDec"/>
			<field type="fixed" name="port" longname="Port" size="2" showtemplate="FieldDec"/>
			<field type="plugin" name="tname" longname="Target Name" plugin="DomainName" showtemplate="dns.dname"/>
		</block>

		<block name="NAPTR" longname="NAPTR Resource Record">
			<field type="fixed" name="order" longname="Order" size="2" showtemplate="FieldDec"/>
			<field type="fixed" name="preference" longname="Preference" size="2" showtemplate="FieldDec"/>
			<field type="fixed" name="flagslen" longname="Flags Length" size="1" showtemplate="FieldDec"/>
			<field type="variable" name="flags" longname="Flags" expr="buf2int(flagslen)" showtemplate="FieldAscii"/>
			<field type="fixed" name="servicelen" longname="Service Length" size="1" showtemplate="FieldDec"/>
			<field type="variable" name="service" longname="Service" expr="buf2int(servicelen)" showtemplate="FieldAscii"/>
			<field type="fixed" name="regexplen" longname="RegExp Length" size="1" showtemplate="FieldDec"/>
			<field type="variable" name="regexp" longname="Regular Expression" expr="buf2int(regexplen)" showtemplate="FieldAscii"/>
			<field type="plugin" name="rname" longname="Replacement Name" plugin="DomainName" showtemplate="dns.dname"/>
		</block>
	</format>


	<visualization>
		<showtemplate name="dns.query" showtype="bin">
			<showmap>
				<switch expr="buf2int(this)">
					<case value="0" show="Query"/>
					<default show="Response"/> 
				</switch>
			</showmap>
		</showtemplate>

		<showtemplate name="dns.opcode" showtype="bin">
			<showmap>
				<switch expr="buf2int(this)">
					<case value="0" show="Standard query"/>
					<case value="1" show="Inverse query"/>
					<case value="2" show="Service status request"/>
					<default show="Reserved"/> 
				</switch>
			</showmap>
		</showtemplate>


		<showtemplate name="dns.rcode" showtype="bin">
			<showmap>
				<switch expr="buf2int(this)">
					<case value="0" show="No error"/>
					<case value="1" show="Format error"/>
					<case value="2" show="Server failure"/>
					<case value="3" show="Name error"/>
					<case value="4" show="Not implemented"/>
					<case value="5" show="Refused"/>
					<default show="Reserved"/>
				</switch>
			</showmap>
		</showtemplate>

		<showtemplate name="dns.type" showtype="dec">
			<showmap>
				<switch expr="buf2int(this)">
					<!-- http://www.iana.org/assignments/dns-parameters -->
					<case value="0" show="Reserved (should not be used)"/>
					<case value="1" show="A - IPv4 host address"/>
					<case value="2" show="NS - Authoritative name server"/>
					<case value="3" show="MD - Mail destination; obsolete"/>
					<case value="4" show="MF - Mail forwarder; obsolete"/>
					<case value="5" show="CNAME - Canonical name for an alias"/>
					<case value="6" show="SOA - Start of a zone of authority"/>
					<case value="7" show="MB - Mailbox domain name; experimental"/>
					<case value="8" show="MG - Mail group member; experimental"/>
					<case value="9" show="MR - Mail rename domain name; experimental"/>
					<case value="10" show="NULL - Null RR; experimental"/>
					<case value="11" show="WKS - Well known service description"/>
					<case value="12" show="PTR - Domain name pointer"/>
					<case value="13" show="HINFO - Host information"/>
					<case value="14" show="MINFO - Mailbox or mail list information"/>
					<case value="15" show="MX - Mail exchange"/>
					<case value="16" show="TXT - Text strings"/>
					<case value="28" show="AAAA - IPv6 host address"/>
					<case value="33" show="SRV - Service location"/>
					<case value="35" show="NAPTR - Naming authority pointer"/>
					<case value="38" show="A6 - IPv6 host address"/>
					<case value="41" show="OPT"/>
					<case value="252" show="AFXR - Request for a transfer of an entire zone"/>
					<case value="253" show="MAILB - Request for mailbox-related records"/>
					<case value="254" show="MAILA - Request for mail agent RRs;obsolete"/>
					<case value="255" show="* - Request for all records"/>
					<default show="DNS Query type not recognized"/>
				</switch>
			</showmap>
		</showtemplate>

		<showtemplate name="dns.class" showtype="dec">
			<showmap>
				<switch expr="buf2int(this)">
					<case value="0" show="Reserved IANA"/>
					<case value="1" show="IN - Internet"/>
					<case value="2" show="CS - CSNET class - obsolete"/>
					<case value="3" show="CH - CHAOS class"/>
					<case value="4" show="HS - Hesiod"/>
					<case value="255" show="* - Any class"/>
					<default show="DNS class not recognized"/>
				</switch>
			</showmap>
		</showtemplate>
		
		<showtemplate name="dns.dname" showtype="hex" showplg="DomainName"/>

		<showsumtemplate name="dns">
			<section name="next"/>
			<text value="DNS "/>
			<protofield name="Query" showdata="showmap"/>
		</showsumtemplate>

	</visualization>

</protocol>


<protocol name="defaultproto" longname="Other data" comment="Generic protocol that is called when no other protocols are available" showsumtemplate="defaultproto">
	<execute-code>
		<before when="($L4proto == #tcp)">
			<!-- Since both sides of the connection are stored in the table, we can just check for one of them -->
			<if expr="not updatelookuptable($unknownprotosessiontable, $firstip, $secondip, $firstport, $secondport)">
				<if-true>
					<assign-variable name="$session_hit" value="1"/>
					<update-lookuptable name="$unknownprotosessiontable" action="add" validity="updateonhit" keeptime="300" hittime="300">
						<lookupkey value="$firstip"/>
						<lookupkey value="$secondip"/>
						<lookupkey value="$firstport"/>
						<lookupkey value="$secondport"/>
					</update-lookuptable>
				</if-true>
			</if>
		</before>
		
		<before when="($L4proto == #udp)">
			<!-- Since both sides of the connection are stored in the table, we can just check for one of them -->
			<if expr="not updatelookuptable($unknownprotosessiontable, $ipsrc, $ipdst, $portsrc, $portdst)">
				<if-true>
					<assign-variable name="$session_hit" value="1"/>
					<update-lookuptable name="$unknownprotosessiontable" action="add" validity="updateonhit" keeptime="300" hittime="300">
						<lookupkey value="$ipsrc"/>
						<lookupkey value="$ipdst"/>
						<lookupkey value="$portsrc"/>
						<lookupkey value="$portdst"/>
					</update-lookuptable>
					<update-lookuptable name="$unknownprotosessiontable" action="add" validity="updateonhit" keeptime="300" hittime="300">
						<lookupkey value="$ipdst"/>
						<lookupkey value="$ipsrc"/>
						<lookupkey value="$portdst"/>
						<lookupkey value="$portsrc"/>
					</update-lookuptable>
				</if-true>
			</if>
		</before>
	</execute-code>
	<format>
		<fields>
			<field type="variable" name="payload" longname="Data payload" expr="$packetlength - $currentoffset" showtemplate="Field4BytesHex"/>
		</fields>
	</format>
	
	<visualization>
		<showsumtemplate name="defaultproto">
			<section name="L7"/>
			<text value="Generic Data"/>
		</showsumtemplate>
	</visualization>
</protocol>

<visualization>

	<!-- Defines the structure of the summary view of each packet -->
	<showsumstruct>
		<sumsection name="NUMBER" longname="N."/>
		<sumsection name="TIME" longname="Time"/>
		<sumsection name="L2" longname="Data Link"/>
		<sumsection name="L3" longname="Network"/>
		<sumsection name="L4" longname="Transport"/>
		<sumsection name="L7" longname="Application"/>
	</showsumstruct>


	<!-- Very simple and common templates -->
	<showtemplate name="FieldBin" showtype="bin"/>
	<showtemplate name="FieldDec" showtype="dec"/>
	<showtemplate name="FieldHex" showtype="hex"/>
	<showtemplate name="FieldAscii" showtype="ascii" showgrp="1"/>

	<showtemplate name="FieldHexBin" showtype="hex">
		<showdtl>
		    <text value="0x"/>
			<protofield showdata="value"/>
			<text value=" ("/>
			<text expr="buf2int(this)"/>
			<text value=")"/>					
		</showdtl>
	</showtemplate>	



	<!-- Templates that prints a field as a continuous string of hex numbers (e.g. '0xAABBCCDDEE...') -->
	<!-- with a delimiter every N bytes (in order to improve readability) -->
	<showtemplate name="Field4BytesHex" showtype="hex" showgrp="4" showsep=" "/>			<!-- E.g. "AABBCCDD AABBCCDD" -->
	<showtemplate name="Field1BytesHex" showtype="hex" showgrp="1" showsep=" "/>			<!-- E.g. "AA BB CC DD" -->
	<showtemplate name="Field2BytesHexDash" showtype="hex" showgrp="2" showsep="-"/>		<!-- E.g. "AABB CCDD" -->
	<showtemplate name="Field2BytesHexColon" showtype="hex" showgrp="2" showsep=":"/>		<!-- E.g. "AABB:CCDD" -->

	<!-- Templates for fields that cannot be printed with standard NetPDL primitives -->
	<showtemplate name="ip4addr" showtype="dec" showgrp="1" showsep="." showplg="IP46Name"/>

	<showtemplate name="ip6addr" showtype="hexnox" showgrp="2" showsep=":" showplg="IP46Name">
		<showdtl>
			<protofield showdata="showvalue"/>
			<if expr="this == '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'">
				<if-true>
					<text value=" (Unspecified Address)"/>
				</if-true>
			</if>
			<if expr="this == '\xFF\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01'">
				<if-true>
					<text value=" (All nodes multicast address)"/>
				</if-true>
			</if>
			<if expr="this[0:12] == '\xFF\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01'">
				<if-true>
					<text value=" (Multicast solicited node)"/>
				</if-true>
			</if>

<!-- FULVIO: questo non funz perche' non ci sono funzioni di traduzione in stampa, per cui quando -->
<!-- voglio far stampare una stringa dal "text", questo me la stampa come se fosse codificata in ascii -->
<!--
			<if expr="(this[11:2] == '\xFF\xFE')">
				<if-true>
					<text value=" (Originating MAC address: "/>
					<text expr="this[8:3]"/>
					<text value="-"/>
					<text expr="this[13:3]"/>
					<text value=")"/>
				</if-true>
			</if>
-->
		</showdtl>
	</showtemplate>

	<showtemplate name="netbios-name" showplg="NetBIOSName"/>


	<!-- Template for printing IPv4 address using only numbers (e.g. netmasks) -->
	<showtemplate name="ip4addr-noplg" showtype="dec" showgrp="1" showsep="."/>

	<!-- Template for printing IPv6 address using only numbers (e.g. prefixes) -->
	<showtemplate name="ip6addr-noplg" showtype="hexnox" showgrp="2" showsep=":"/>

	<!-- Templates specific for MAC addresses -->
	<showtemplate name="MAC-colon" showtype="hexnox" showgrp="1" showsep=":"/>
	<showtemplate name="MAC-dash" showtype="hexnox" showgrp="3" showsep="-"/>




	<!-- *********************************************************** -->
	<!-- Generic templates with some common visualization primitives -->
	<!-- *********************************************************** -->

	<!-- Generic template that prints a field timed by '4' -->
	<showtemplate name="FieldMul4Dec" showtype="dec">
		<showdtl>
			<text expr="buf2int(this) * 4"/>
			<text value=" (field value = "/>
			<protofield showdata="showvalue"/>
			<text value=")"/>
		</showdtl>
	</showtemplate>

	<!-- Generic template that prints a short-field timed by '8' -->
	<showtemplate name="ShortMul8Dec" showtype="dec">
		<showdtl>
			<text expr="buf2int(this) * 8"/>
			<text value=" (field value = "/>
			<protofield showdata="showvalue"/>
			<text value=")"/>
		</showdtl>
	</showtemplate>

	<showtemplate name="ShortDiv256Dec" showtype="dec">
		<showdtl>
			<text expr="buf2int(this) div 256"/>
			<text value=" sec (field value = "/>
			<protofield showdata="showvalue"/>
			<text value=")"/>
		</showdtl>
	</showtemplate>

	<showtemplate name="TrueFalse" showtype="dec">
		<showmap>
			<switch expr="buf2int(this)">
				<case value="0" show="False"/>
				<case value="1" show="True"/>
			</switch>
		</showmap>
	</showtemplate>



	<!-- ************************************************ -->
	<!-- Generic templates used by more than one protocol -->
	<!-- ************************************************ -->

	<showtemplate name="eth.typelength" showtype="dec">
		<showdtl>
			<if expr="buf2int(this) le 1500">				
				<if-true>
					<protofield showdata="showvalue"/>
					<text value=" (Length)"/>
				</if-true>

				<if-false>
					<text value="0x"/>
					<protofield showdata="value"/>
					<text value=" (Ethertype)"/>
				</if-false>
			</if>
		</showdtl>
	</showtemplate>

	<showtemplate name="dhcp.code" showtype="dec">
		<showmap>
			<switch expr="buf2int(this)">
				<case value="1" show="Request"/> 
				<case value="2" show="Reply"/> 
				<default show="Error in DHCP / BOOTP code lookup"/> 
			</switch>
		</showmap>
	</showtemplate>

	<showtemplate name="pppoe.code" showtype="hex">
		<showmap>
			<switch expr="buf2int(this)">
				<case value="0" show="Session"/> 
				<case value="7" show="PADO"/> 
				<case value="9" show="PADI"/> 
				<case value="25" show="PADR"/> 
				<case value="101" show="PADS"/> 
				<case value="167" show="PADT"/> 
				<default show="Error in PPPoe code lookup"/> 
			</switch>
		</showmap>
	</showtemplate>

	<showtemplate name="rip.cmd" showtype="dec">
		<showmap>
			<switch expr="buf2int(this)">
				<case value="1" show="Request"/> 
				<case value="2" show="Update"/> 
				<default show="Error in RIP command lookup"/> 
			</switch>
		</showmap>
	</showtemplate>

	<showtemplate name="bluetooth.page_scan_mode" showtype="dec">
		<showmap>
			<switch expr="buf2int(this)">
				<case value="0" show="Mandatory Page Scan Mode"/>
				<case value="1" show="Optional Page Scan Mode 1"/>
				<case value="2" show="Optional Page Scan Mode 2"/>
				<case value="3" show="Optional Page Scan Mode 3"/>
				<default show="Reserved"/>
			</switch>
		</showmap>
	</showtemplate>

	<showtemplate name="bluetooth.encryption_enable" showtype="dec">
		<showmap>
			<switch expr="buf2int(this)">
				<case value="0" show="Link Level Encryption OFF"/>
				<case value="1" show="Link Level Encryption ON"/>
				<default show="Invalid Code"/>
			</switch>
		</showmap>
	</showtemplate>
	

	<!-- Generic template for visualizing Ethernet MAC addresses -->
	<showtemplate name="MACaddressEth" showtype="hexnox" showgrp="3" showsep="-">
		<showdtl>
			<protofield showdata="showvalue"/>
			<if expr="(buf2int(this[0:1]) bitwand 0b00000001) == 0b00000001">
				<!-- It extracts the first byte of the MAC address, then it matches the result against -->
				<!-- the 'xxxxxxx1' pattern -->
				<!-- Extract the first byte of the MAC address -->
				<!-- If it is a broadcast address, the last char will be '1' (due to network/host byte order)-->
				
				<if-true>
					<if expr="this == '\xFF\xFF\xFF\xFF\xFF\xFF'">
						<if-true>
							<text value=" (Broadcast address)"/>
						</if-true>

						<if-false>
							<text value=" (Multicast address)"/>
						</if-false>		
					</if>
				</if-true>

				<if-false>
					<text value=" (Unicast address, vendor "/>
					<protofield showdata="showmap"/>
					<text value=")"/>
				</if-false>
			</if>
		</showdtl>

		<showmap>
			<switch expr="buf2int(this[0:3])">		<!-- Extracts the first 3 bytes of the MAC address -->
				<case value="0xFFFFFF" show="Broadcast address"/>
				<case value="0x000001" show="SuperLAN-2U"/> 
				<case value="0x000002" show="BBN (was internal usage only, no longer used)"/>
				<case value="0x000009" show="powerpipes?"/> 
				<case value="0x00000C" show="Cisco"/> 
				<case value="0x00000E" show="Fujitsu"/> 
				<case value="0x00000F" show="NeXT"/> 
				<case value="0x000010" show="Sytek (Hughes LAN Systems)"/> 
				<case value="0x000011" show="Tektronix"/> 
				<case value="0x000015" show="Datapoint Corporation"/> 
				<case value="0x000018" show="Webster Computer Corporation Appletalk/Ethernet Gateway"/> 
				<case value="0x00001A" show="AMD (?)"/> 
				<case value="0x00001B" show="Novell (now Eagle Technology)"/> 
				<case value="0x00001C" show="JDR Microdevices generic, NE2000 drivers"/> 
				<case value="0x00001D" show="Cabletron"/> 
				<case value="0x00001F" show="Cryptall Communications Corp."/> 
				<case value="0x000020" show="DIAB (Data Intdustrier AB)"/> 
				<case value="0x000021" show="SC&amp;C (PAM Soft&amp;Hardware also reported)"/> 
				<case value="0x000022" show="Visual Tecnology"/> 
				<case value="0x000023" show="ABB Automation AB, Dept. Q"/> 
				<case value="0x000024" show="Olicom"/> 
				<case value="0x000029" show="IMC"/> 
				<case value="0x00002A" show="TRW"/> 
				<case value="0x00002C" show="NRC - Network Resources Corporation - MultiGate Hub1+, Hub2, etc"/> 
				<case value="0x000032" show="GPT Limited (reassigned from GEC Computers Ltd)"/> 
				<case value="0x000037" show="Oxford Metrics Ltd"/> 
				<case value="0x00003B" show="Hyundai/Axil Sun clones"/> 
				<case value="0x00003C" show="Auspex"/> 
				<case value="0x00003D" show="AT&amp;T"/> 
				<case value="0x00003F" show="Syntrex Inc"/> 
				<case value="0x000044" show="Castelle"/> 
				<case value="0x000046" show="ISC-Bunker Ramo, An Olivetti Company"/> 
				<case value="0x000048" show="Epson"/> 
				<case value="0x000049" show="Apricot Ltd."/> 
				<case value="0x00004B" show="APT -ICL also reported"/> 
				<case value="0x00004C" show="NEC Corporation"/> 
				<case value="0x00004F" show="Logicraft 386-Ware P.C. Emulator"/> 
				<case value="0x000051" show="Hob Electronic Gmbh &amp; Co. KG"/> 
				<case value="0x000052" show="Optical Data Systems (ODS)"/> 
				<case value="0x000055" show="AT&amp;T"/> 
				<case value="0x000058" show="Racore Computer Products Inc"/> 
				<case value="0x00005A" show="S&amp;Koch (Schneider &amp; Koch in Europe and Syskonnect outside of Europe) OR Xerox 806 (unregistered)"/> 
				<case value="0x00005B" show="Eltec"/> 
				<case value="0x00005D" show="RCE"/> 
				<case value="0x00005E" show="IANA (U.S. Department of Defense)"/> 
				<case value="0x00005F" show="Sumitomo"/> 
				<case value="0x000061" show="Gateway Communications"/> 
				<case value="0x000062" show="Honeywell"/> 
				<case value="0x000063" show="Hewlett-Packard LanProbe"/> 
				<case value="0x000064" show="Yokogawa Digital Computer Corp"/> 
				<case value="0x000065" show="Network General"/> 
				<case value="0x000066" show="Talaris"/> 
				<case value="0x000068" show="Rosemount Controls"/> 
				<case value="0x000069" show="Concord Communications, Inc (although someone said Silicon Graphics)"/> 
				<case value="0x00006B" show="MIPS"/> 
				<case value="0x00006D" show="Case"/> 
				<case value="0x00006E" show="Artisoft, Inc."/> 
				<case value="0x00006F" show="Madge Networks Ltd. Token-ring adapters"/> 
				<case value="0x000073" show="DuPont"/> 
				<case value="0x000075" show="Bell Northern Research (BNR)"/> 
				<case value="0x000077" show="Interphase Corporation [Used in other systems, e.g. MIPS, Motorola]"/> 
				<case value="0x000078" show="Labtam Australia"/> 
				<case value="0x000079" show="Networth Incorporated [bought by Compaq, used in Netelligent series]"/> 
				<case value="0x00007A" show="Ardent"/> 
				<case value="0x00007B" show="Research Machines"/> 
				<case value="0x00007D" show="Cray Research Superservers,Inc [Also Harris (3M) (old)]"/> 
				<case value="0x00007E" show="NetFRAME multiprocessor network servers"/> 
				<case value="0x00007F" show="Linotype-Hell AG Linotronic typesetters"/> 
				<case value="0x000080" show="Cray Communications A/S (formerly Dowty Network Services) [Also shows as Harris (3M) (new) and/or Imagen(?) elsewhere]"/> 
				<case value="0x000081" show="Synoptics"/> 
				<case value="0x000083" show="Tadpole Technology [had Optical Data Systems which is wrong according to both]"/> 
				<case value="0x000084" show="Aquila (?), ADI Systems Inc.(?)"/> 
				<case value="0x000086" show="Gateway Communications Inc. (then Megahertz &amp; now 3com)"/> 
				<case value="0x000087" show="Hitachi"/> 
				<case value="0x000089" show="Cayman Systems Gatorbox"/> 
				<case value="0x00008A" show="Datahouse Information Systems"/> 
				<case value="0x00008E" show="Solbourne(?), Jupiter(?) (I've had confirming mail on Solbourne)"/> 
				<case value="0x000092" show="Unisys, Cogent (both reported)"/> 
				<case value="0x000093" show="Proteon"/> 
				<case value="0x000094" show="Asante MAC"/> 
				<case value="0x000095" show="Sony/Tektronix"/> 
				<case value="0x000097" show="Epoch"/> 
				<case value="0x000098" show="Cross Com"/> 
				<case value="0x000099" show="Memorex Telex Corporations"/> 
				<case value="0x00009F" show="Ameristar Technology"/> 
				<case value="0x0000A0" show="Sanyo Electronics"/> 
				<case value="0x0000A2" show="Wellfleet"/> 
				<case value="0x0000A3" show="Network Application Tech. (NAT)"/> 
				<case value="0x0000A4" show="Acorn"/> 
				<case value="0x0000A5" show="Compatible Systems Corporation"/> 
				<case value="0x0000A6" show="Network General (internal assignment, not for products)"/> 
				<case value="0x0000A7" show="NCD (Network Computing Devices) X-terminals"/> 
				<case value="0x0000A8" show="Stratus Computer, Inc."/> 
				<case value="0x0000A9" show="Network Systems"/> 
				<case value="0x0000AA" show="Xerox (Xerox machines)"/> 
				<case value="0x0000AC" show="Conware Netzpartner [had Apollo, claimed incorrect]"/> 
				<case value="0x0000AE" show="Dassault Automatismes et Telecommunications"/> 
				<case value="0x0000AF" show="Nuclear Data Acquisition Interface Modules (AIM)"/> 
				<case value="0x0000B0" show="RND (RAD Network Devices)"/> 
				<case value="0x0000B1" show="Alpha Microsystems Inc."/> 
				<case value="0x0000B3" show="CIMLinc"/> 
				<case value="0x0000B4" show="Edimax"/> 
				<case value="0x0000B5" show="Datability Terminal Servers"/> 
				<case value="0x0000B6" show="Micro-matic Research"/> 
				<case value="0x0000B7" show="Dove Fastnet"/> 
				<case value="0x0000BB" show="TRI-DATA Systems Inc. Netway products, 3274 emulators"/> 
				<case value="0x0000BC" show="Allen-Bradley, now SMC (Standard Microsystems Corp.)"/> 
				<case value="0x0000C0" show="Western Digital"/> 
				<case value="0x0000C1" show="Olicom A/S"/> 
				<case value="0x0000C5" show="Farallon Computing Inc (Phone Net Card)"/> 
				<case value="0x0000C6" show="HP Intelligent Networks Operation (formerly Eon Systems)"/> 
				<case value="0x0000C8" show="Altos"/> 
				<case value="0x0000C9" show="Emulex Terminal Servers, Print Servers"/> 
				<case value="0x0000CA" show="LANcity Cable Modems (now owned by BayNetworks)"/> 
				<case value="0x0000CC" show="Densan Co., Ltd."/> 
				<case value="0x0000CD" show="Industrial Research Limited"/> 
				<case value="0x0000D0" show="Develcon Electronics, Ltd."/> 
				<case value="0x0000D1" show="Adaptec, Inc. Nodem product"/> 
				<case value="0x0000D2" show="SBE Inc"/> 
				<case value="0x0000D3" show="Wang Labs"/> 
				<case value="0x0000D4" show="PureData"/> 
				<case value="0x0000D7" show="Dartmouth College (NED Router)"/> 
				<case value="0x0000D8" show="3Com? old Novell NE1000's (before about 1987?)? PS/2"/> 
				<case value="0x0000DD" show="Gould"/> 
				<case value="0x0000DE" show="Unigraph"/> 
				<case value="0x0000E1" show="Hitachi (laptop built-in)"/> 
				<case value="0x0000E2" show="Acer Counterpoint"/> 
				<case value="0x0000E3" show="Integrated Micro Products Ltd"/> 
				<case value="0x0000E4" show="mips?"/> 
				<case value="0x0000E6" show="Aptor Produits De Comm Indust"/> 
				<case value="0x0000E8" show="Accton Technology Corporation"/> 
				<case value="0x0000E9" show="ISICAD, Inc."/> 
				<case value="0x0000ED" show="April"/> 
				<case value="0x0000EE" show="Network Designers Limited [also KNX Ltd, a former division]"/> 
				<case value="0x0000EF" show="Alantec (now owned by ForeSystems)"/> 
				<case value="0x0000F0" show="Samsung"/> 
				<case value="0x0000F2" show="Spider Communications (Montreal, not Spider Systems)"/> 
				<case value="0x0000F3" show="Gandalf Data Ltd. - Canada"/> 
				<case value="0x0000F4" show="Allied Telesis, Inc."/> 
				<case value="0x0000F6" show="A.M.C. (Applied Microsystems Corp.)"/> 
				<case value="0x0000F8" show="DEC"/> 
				<case value="0x0000FB" show="Rechner zur Kommunikation"/> 
				<case value="0x0000FD" show="High Level Hardarware (Orion, UK)"/> 
				<case value="0x0000FF" show="Camtec Electronics (UK) Ltd."/> 
				<case value="0x000102" show="BBN (Bolt Beranek and Newman, Inc.) internal usage (not registered)"/> 
				<case value="0x000143" show="IEEE 802"/> 
				<case value="0x000150" show="Megahertz (now 3com) modem"/> 
				<case value="0x000163" show="NDC (National Datacomm Corporation)"/> 
				<case value="0x000168" show="W&amp;G (Wandel &amp; Goltermann) [incorrect according to W&amp;G]"/> 
				<case value="0x0001C8" show="Thomas Conrad Corp."/> 
				<case value="0x0001FA" show="Compaq (PageMarq printers)"/> 
				<case value="0x000204" show="Novell NE3200"/> 
				<case value="0x000205" show="Hamilton (Sparc Clones)"/> 
				<case value="0x000216" show="ESI (Extended Systems, Inc) print servers"/> 
				<case value="0x000288" show="Global Village (PCcard in Mac portable)"/> 
				<case value="0x0003C6" show="Morning Star Technologies Inc"/> 
				<case value="0x000400" show="Lexmark (Print Server)"/> 
				<case value="0x0004AC" show="IBM (Intel 82557-based Ethernet 10/100) PCMCIA Ethernet adapter"/> 
				<case value="0x000502" show="Apple (PCI bus Macs)"/> 
				<case value="0x00059A" show="PowerComputing (Mac clone)"/> 
				<case value="0x0005A8" show="PowerComputing Mac clones"/> 
				<case value="0x00060D" show="Hewlett-Packard JetDirect token-ring interfaces"/> 
				<case value="0x000629" show="IBM RISC6000 system"/> 
				<case value="0x00067C" show="Cisco"/> 
				<case value="0x0006C1" show="Cisco"/> 
				<case value="0x000701" show="Racal-Datacom"/> 
				<case value="0x00070D" show="Cisco 2511 Token Ring"/> 
				<case value="0x000852" show="Technically Elite Concepts"/> 
				<case value="0x000855" show="Fermilab"/> 
				<case value="0x0008C7" show="Compaq"/> 
				<case value="0x000A8A" show="Cisco Systems Aironet (802.11)"/> 
				<case value="0x001007" show="Cisco Systems Catalyst 1900"/> 
				<case value="0x00100B" show="Cisco Systems"/> 
				<case value="0x00100D" show="Cisco Systems Catalyst 2924-XL"/> 
				<case value="0x001011" show="Cisco Systems Cisco 75xx"/> 
				<case value="0x00101F" show="Cisco Systems Catalyst 2901"/> 
				<case value="0x001029" show="Cisco Systems Catalyst 5000"/> 
				<case value="0x00102F" show="Cisco Systems Cisco 5000"/> 
				<case value="0x00104B" show="3Com 3C905-TX PCI"/> 
				<case value="0x00105A" show="3Com Fast Etherlink XL in a Gateway 2000"/> 
				<case value="0x001060" show="Billington Novell NE200 Compatible"/> 
				<case value="0x001079" show="Cisco 5500 Router"/> 
				<case value="0x00107A" show="Ambicom (was Tandy?)"/> 
				<case value="0x00107B" show="Cisco Systems"/> 
				<case value="0x001083" show="HP-UX E 9000/889"/> 
				<case value="0x0010A4" show="Xircom RealPort 10/100 PC Card"/> 
				<case value="0x0010A6" show="Cisco"/> 
				<case value="0x0010D1" show="BlazeNet"/> 
				<case value="0x0010D7" show="Argosy EN 220 Fast Ethernet PCMCIA"/> 
				<case value="0x0010F6" show="Cisco"/> 
				<case value="0x001700" show="Kabel"/> 
				<case value="0x002000" show="Lexmark (Print Server)"/> 
				<case value="0x002005" show="simpletech"/> 
				<case value="0x002008" show="Cable &amp; Computer Technology"/> 
				<case value="0x00200C" show="Adastra Systems Corp"/> 
				<case value="0x002011" show="Canopus Co Ltd"/> 
				<case value="0x002017" show="Orbotech"/> 
				<case value="0x002018" show="Realtek"/> 
				<case value="0x00201A" show="Nbase"/> 
				<case value="0x002025" show="Control Technology Inc (Industrial Controls and Network Interfaces)"/> 
				<case value="0x002028" show="Bloomberg"/> 
				<case value="0x002029" show="TeleProcessing CSU/DSU (now owned by ADC/Kentrox)"/> 
				<case value="0x00202B" show="ATML (Advanced Telecommunications Modules, Ltd.)"/> 
				<case value="0x002035" show="IBM (International Business Machines) mainframes, Etherjet printers"/> 
				<case value="0x002036" show="BMC Software"/> 
				<case value="0x002042" show="Datametrics Corp"/> 
				<case value="0x002045" show="SolCom Systems Limited"/> 
				<case value="0x002048" show="Fore Systems Inc"/> 
				<case value="0x00204B" show="Autocomputer Co Ltd"/> 
				<case value="0x00204C" show="Mitron Computer Pte Ltd"/> 
				<case value="0x002056" show="Neoproducts"/> 
				<case value="0x002061" show="Dynatech Communications Inc"/> 
				<case value="0x002063" show="Wipro Infotech Ltd"/> 
				<case value="0x002066" show="General Magic Inc"/> 
				<case value="0x002067" show="Node Runner Inc"/> 
				<case value="0x00206B" show="Minolta Co., Ltd Network printers"/> 
				<case value="0x002078" show="Runtop Inc"/> 
				<case value="0x002085" show="3COM SuperStack II UPS management module"/> 
				<case value="0x00208A" show="Sonix Communications Ltd"/> 
				<case value="0x00208B" show="Focus Enhancements"/> 
				<case value="0x00208C" show="Galaxy Networks Inc"/> 
				<case value="0x002094" show="Cubix Corporation"/> 
				<case value="0x00209C" show="PRIMARY ACCESS CORP."/> 
				<case value="0x0020A5" show="Newer Technology"/> 
				<case value="0x0020A6" show="Proxim Inc"/> 
				<case value="0x0020A7" show="Pairgain Technologies, Inc."/> 
				<case value="0x0020AF" show="3COM Corporation ?"/> 
				<case value="0x0020B2" show="CSP (Printline Multiconnectivity converter)"/> 
				<case value="0x0020B6" show="Agile Networks Inc"/> 
				<case value="0x0020B9" show="Metricom, Inc."/> 
				<case value="0x0020C5" show="Eagle NE2000"/> 
				<case value="0x0020C6" show="NECTEC"/> 
				<case value="0x0020C9" show="Victron"/> 
				<case value="0x0020D0" show="Versalynx Corp. The One Port terminal server"/> 
				<case value="0x0020D2" show="RAD Data Communications Ltd"/> 
				<case value="0x0020D3" show="OST (Ouet Standard Telematique)"/> 
				<case value="0x0020D8" show="NetWave"/> 
				<case value="0x0020DA" show="Xylan"/> 
				<case value="0x0020DC" show="Densitron Taiwan Ltd"/> 
				<case value="0x0020E0" show="PreMax PE-200 (PCMCIA NE2000-clone card, sold by InfoExpress)"/> 
				<case value="0x0020E5" show="Apex Data"/> 
				<case value="0x0020EE" show="Gtech Corporation"/> 
				<case value="0x0020F6" show="Net Tek &amp; Karlnet Inc"/> 
				<case value="0x0020F8" show="Carrera Computers Inc"/> 
				<case value="0x0020FC" show="Matrox"/> 
				<case value="0x004001" show="Zero One Technology Co Ltd (ZyXEL?)"/> 
				<case value="0x004005" show="TRENDware International Inc.; Linksys; Simple Net; all three reported"/> 
				<case value="0x004009" show="Tachibana Tectron Co Ltd"/> 
				<case value="0x00400B" show="Crescendo (now owned by Cisco)"/> 
				<case value="0x00400C" show="General Micro Systems, Inc."/> 
				<case value="0x00400D" show="LANNET Data Communications"/> 
				<case value="0x004010" show="Sonic Mac Ethernet interfaces"/> 
				<case value="0x004011" show="Facilities Andover Environmental Controllers"/> 
				<case value="0x004013" show="NTT Data Communication Systems Corp"/> 
				<case value="0x004014" show="Comsoft Gmbh"/> 
				<case value="0x004015" show="Ascom"/> 
				<case value="0x004017" show="XCd XJet - HP printer server card"/> 
				<case value="0x00401C" show="AST Pentium/90 PC (emulating AMD EISA card)"/> 
				<case value="0x00401F" show="Colorgraph Ltd"/> 
				<case value="0x004020" show="Pilkington Communication"/> 
				<case value="0x004023" show="Logic Corporation"/> 
				<case value="0x004025" show="Molecular Dynamics"/> 
				<case value="0x004026" show="Melco Inc"/> 
				<case value="0x004027" show="SMC Massachusetts [Had:Sigma (?), maybe the S?]"/> 
				<case value="0x004028" show="Netcomm"/> 
				<case value="0x00402A" show="Canoga-Perkins"/> 
				<case value="0x00402B" show="TriGem"/> 
				<case value="0x00402F" show="Xlnt Designs Inc (XDI)"/> 
				<case value="0x004030" show="GK Computer"/> 
				<case value="0x004032" show="Digital Communications"/> 
				<case value="0x004033" show="Addtron Technology Co., Ltd."/> 
				<case value="0x004036" show="TribeStar"/> 
				<case value="0x004039" show="Optec Daiichi Denko Co Ltd"/> 
				<case value="0x00403C" show="Forks, Inc."/> 
				<case value="0x004041" show="Fujikura Ltd."/> 
				<case value="0x004043" show="Nokia Data Communications"/> 
				<case value="0x004048" show="SMD Informatica S.A."/> 
				<case value="0x00404C" show="Hypertec Pty Ltd."/> 
				<case value="0x00404D" show="Telecomm Techniques"/> 
				<case value="0x00404F" show="Space &amp; Naval Warfare Systems"/> 
				<case value="0x004050" show="Ironics, Incorporated"/> 
				<case value="0x004052" show="Star Technologies Inc"/> 
				<case value="0x004053" show="Datum [Bancomm Division] TymServe 2000"/> 
				<case value="0x004054" show="Thinking Machines Corporation"/> 
				<case value="0x004057" show="Lockheed-Sanders"/> 
				<case value="0x004059" show="Yoshida Kogyo K.K."/> 
				<case value="0x00405B" show="Funasset Limited"/> 
				<case value="0x00405D" show="Star-Tek Inc"/> 
				<case value="0x004066" show="Hitachi Cable, Ltd."/> 
				<case value="0x004067" show="Omnibyte Corporation"/> 
				<case value="0x004068" show="Extended Systems"/> 
				<case value="0x004069" show="Lemcom Systems Inc"/> 
				<case value="0x00406A" show="Kentek Information Systems Inc"/> 
				<case value="0x00406E" show="Corollary, Inc."/> 
				<case value="0x00406F" show="Sync Research Inc"/> 
				<case value="0x004072" show="Applied Innovation"/> 
				<case value="0x004074" show="Cable and Wireless"/> 
				<case value="0x004076" show="AMP Incorporated"/> 
				<case value="0x004078" show="Wearnes Automation Pte Ltd"/> 
				<case value="0x00407F" show="Agema Infrared Systems AB"/> 
				<case value="0x004082" show="Laboratory Equipment Corp"/> 
				<case value="0x004085" show="SAAB Instruments AB"/> 
				<case value="0x004086" show="Michels &amp; Kleberhoff Computer"/> 
				<case value="0x004087" show="Ubitrex Corporation"/> 
				<case value="0x004088" show="Mobuis NuBus (Mac) combination video/EtherTalk"/> 
				<case value="0x00408A" show="TPS Teleprocessing Sys. Gmbh"/> 
				<case value="0x00408C" show="Axis Communications AB"/> 
				<case value="0x00408E" show="CXR/Digilog"/> 
				<case value="0x00408F" show="WM-Data Minfo AB"/> 
				<case value="0x004090" show="Ansel Communications PC NE2000 compatible twisted-pair ethernet cards"/> 
				<case value="0x004091" show="Procomp Industria Eletronica"/> 
				<case value="0x004092" show="ASP Computer Products, Inc."/> 
				<case value="0x004094" show="Shographics Inc"/> 
				<case value="0x004095" show="Eagle Technologies [UMC also reported]"/> 
				<case value="0x004096" show="Telesystems SLW Inc"/> 
				<case value="0x00409A" show="Network Express Inc"/> 
				<case value="0x00409C" show="Transware"/> 
				<case value="0x00409D" show="DigiBoard Ethernet-ISDN bridges"/> 
				<case value="0x00409E" show="Concurrent Technologies Ltd."/> 
				<case value="0x00409F" show="Lancast/Casat Technology Inc"/> 
				<case value="0x0040A4" show="Rose Electronics"/> 
				<case value="0x0040A6" show="Cray Research Inc."/> 
				<case value="0x0040AA" show="Valmet Automation Inc"/> 
				<case value="0x0040AD" show="SMA Regelsysteme Gmbh"/> 
				<case value="0x0040AE" show="Delta Controls, Inc."/> 
				<case value="0x0040AF" show="Digital Products, Inc. (DPI)."/> 
				<case value="0x0040B4" show="3COM K.K."/> 
				<case value="0x0040B5" show="Video Technology Computers Ltd"/> 
				<case value="0x0040B6" show="Computerm Corporation"/> 
				<case value="0x0040B9" show="MACQ Electronique SA"/> 
				<case value="0x0040BD" show="Starlight Networks Inc"/> 
				<case value="0x0040C1" show="Bizerba-Werke Wilheim Kraut"/> 
				<case value="0x0040C2" show="Applied Computing Devices"/> 
				<case value="0x0040C3" show="Fischer and Porter Co."/> 
				<case value="0x0040C5" show="Micom Communications Corp."/> 
				<case value="0x0040C6" show="Fibernet Research, Inc."/> 
				<case value="0x0040C7" show="Danpex Corporation"/> 
				<case value="0x0040C8" show="Milan Technology Corp."/> 
				<case value="0x0040CC" show="Silcom Manufacturing Technology Inc"/> 
				<case value="0x0040CF" show="Strawberry Tree Inc"/> 
				<case value="0x0040D0" show="DEC/Compaq"/> 
				<case value="0x0040D2" show="Pagine Corporation"/> 
				<case value="0x0040D4" show="Gage Talker Corp."/> 
				<case value="0x0040D7" show="Studio Gen Inc"/> 
				<case value="0x0040D8" show="Ocean Office Automation Ltd"/> 
				<case value="0x0040DC" show="Tritec Electronic Gmbh"/> 
				<case value="0x0040DF" show="Digalog Systems, Inc."/> 
				<case value="0x0040E1" show="Marner International Inc"/> 
				<case value="0x0040E2" show="Mesa Ridge Technologies Inc"/> 
				<case value="0x0040E3" show="Quin Systems Ltd"/> 
				<case value="0x0040E5" show="Sybus Corporation"/> 
				<case value="0x0040E7" show="Arnos Instruments &amp; Computer"/> 
				<case value="0x0040E9" show="Accord Systems, Inc."/> 
				<case value="0x0040EA" show="PlainTree Systems Inc"/> 
				<case value="0x0040ED" show="Network Controls International Inc"/> 
				<case value="0x0040F0" show="Micro Systems Inc"/> 
				<case value="0x0040F1" show="Chuo Electronics Co., Ltd."/> 
				<case value="0x0040F4" show="Cameo Communications, Inc."/> 
				<case value="0x0040F5" show="OEM Engines"/> 
				<case value="0x0040F6" show="Katron Computers Inc"/> 
				<case value="0x0040F9" show="Combinet"/> 
				<case value="0x0040FA" show="Microboards Inc"/> 
				<case value="0x0040FB" show="Cascade Communications Corp."/> 
				<case value="0x0040FD" show="LXE"/> 
				<case value="0x0040FF" show="Telebit Corporation Personal NetBlazer"/> 
				<case value="0x004854" show="Digital SemiConductor 21143/2 based 10/100"/> 
				<case value="0x004F49" show="Realtek"/> 
				<case value="0x004F4B" show="Pine Technology Ltd."/> 
				<case value="0x005004" show="3com 3C90X"/> 
				<case value="0x00500F" show="Cisco"/> 
				<case value="0x00504D" show="Repotec Group"/> 
				<case value="0x00504E" show="UMC UM9008 NE2000-compatible ISA Card for PC"/> 
				<case value="0x005050" show="Cisco"/> 
				<case value="0x005069" show="PixStream Incorporated"/> 
				<case value="0x0050BD" show="Cisco"/> 
				<case value="0x0050E2" show="Cisco"/> 
				<case value="0x005500" show="Xerox"/> 
				<case value="0x006008" show="3Com (Etherlink III PCMCIA 3C589X) 3Com PCI form factor 3C905 TX board"/> 
				<case value="0x006009" show="Cisco Catalyst 5000 Ethernet switch"/> 
				<case value="0x006025" show="Active Imaging Inc."/> 
				<case value="0x00602F" show="Cisco"/> 
				<case value="0x006030" show="VillageTronic used on Amiga"/> 
				<case value="0x00603E" show="Cisco 100Mbps interface"/> 
				<case value="0x006047" show="Cisco"/> 
				<case value="0x00604E" show="Cycle Computer (Sun MotherBoard Replacements)"/> 
				<case value="0x006052" show="Realtek (RTL 8029 == PCI NE2000)"/> 
				<case value="0x00605C" show="Cisco"/> 
				<case value="0x006067" show="Acer Lan"/> 
				<case value="0x006070" show="Cisco routers (2524 and 4500)"/> 
				<case value="0x006083" show="Cisco Systems, Inc. 3620/3640 routers"/> 
				<case value="0x00608C" show="3Com (1990 onwards)"/> 
				<case value="0x006094" show="AMD PCNET PCI"/> 
				<case value="0x006097" show="3Com"/> 
				<case value="0x0060B0" show="Hewlett-Packard"/> 
				<case value="0x0060F5" show="Phobos FastEthernet for Unix WS"/> 
				<case value="0x008000" show="Multitech Systems Inc"/> 
				<case value="0x008001" show="Periphonics Corporation"/> 
				<case value="0x008004" show="Antlow Computers, Ltd."/> 
				<case value="0x008005" show="Cactus Computer Inc."/> 
				<case value="0x008006" show="Compuadd Corporation"/> 
				<case value="0x008007" show="Dlog NC-Systeme"/> 
				<case value="0x008009" show="Jupiter Systems (older MX-600 series machines)"/> 
				<case value="0x00800D" show="Vosswinkel FU"/> 
				<case value="0x00800F" show="SMC (Standard Microsystem Corp.)"/> 
				<case value="0x008010" show="Commodore"/> 
				<case value="0x008012" show="IMS Corp. IMS failure analysis tester"/> 
				<case value="0x008013" show="Thomas Conrad Corp."/> 
				<case value="0x008015" show="Seiko Systems Inc"/> 
				<case value="0x008016" show="Wandel &amp; Goltermann"/> 
				<case value="0x008017" show="PFU"/> 
				<case value="0x008019" show="Dayna Communications Etherprint product"/> 
				<case value="0x00801A" show="Bell Atlantic"/> 
				<case value="0x00801B" show="Kodiak Technology"/> 
				<case value="0x00801C" show="Cisco"/> 
				<case value="0x008021" show="Newbridge Networks Corporation"/> 
				<case value="0x008023" show="Integrated Business Networks"/> 
				<case value="0x008024" show="Kalpana"/> 
				<case value="0x008026" show="Network Products Corporation"/> 
				<case value="0x008029" show="Microdyne Corporation"/> 
				<case value="0x00802A" show="Test Systems &amp; Simulations Inc"/> 
				<case value="0x00802B" show="IMAC ???"/> 
				<case value="0x00802C" show="The Sage Group PLC"/> 
				<case value="0x00802D" show="Xylogics Inc. Annex terminal servers"/> 
				<case value="0x00802E" show="Plexcom, Inc."/> 
				<case value="0x008033" show="Formation (?)"/> 
				<case value="0x008034" show="SMT-Goupil"/> 
				<case value="0x008035" show="Technology Works"/> 
				<case value="0x008037" show="Ericsson Business Comm."/> 
				<case value="0x008038" show="Data Research &amp; Applications"/> 
				<case value="0x00803B" show="APT Communications, Inc."/> 
				<case value="0x00803D" show="Surigiken Co Ltd"/> 
				<case value="0x00803E" show="Synernetics"/> 
				<case value="0x00803F" show="Hyundai Electronics"/> 
				<case value="0x008042" show="Force Computers"/> 
				<case value="0x008043" show="Networld Inc"/> 
				<case value="0x008045" show="Matsushita Electric Ind Co"/> 
				<case value="0x008046" show="University of Toronto"/> 
				<case value="0x008048" show="Compex, used by Commodore and DEC at least"/> 
				<case value="0x008049" show="Nissin Electric Co Ltd"/> 
				<case value="0x00804C" show="Contec Co., Ltd."/> 
				<case value="0x00804D" show="Cyclone Microsystems, Inc."/> 
				<case value="0x008051" show="ADC Fibermux"/> 
				<case value="0x008052" show="Network Professor"/> 
				<case value="0x008057" show="Adsoft Ltd"/> 
				<case value="0x00805A" show="Tulip Computers International BV"/> 
				<case value="0x00805B" show="Condor Systems, Inc."/> 
				<case value="0x00805C" show="Agilis(?)"/> 
				<case value="0x00805F" show="Compaq Computer Corporation"/> 
				<case value="0x008060" show="Network Interface Corporation"/> 
				<case value="0x008062" show="Interface Co."/> 
				<case value="0x008063" show="Richard Hirschmann Gmbh &amp; Co"/> 
				<case value="0x008064" show="Wyse Technology / Link Technologies"/> 
				<case value="0x008067" show="Square D Company"/> 
				<case value="0x008069" show="Computone Systems"/> 
				<case value="0x00806A" show="ERI (Empac Research Inc.)"/> 
				<case value="0x00806B" show="Schmid Telecommunication"/> 
				<case value="0x00806C" show="Cegelec Projects Ltd"/> 
				<case value="0x00806D" show="Century Systems Corp."/> 
				<case value="0x00806E" show="Nippon Steel Corporation"/> 
				<case value="0x00806F" show="Onelan Ltd"/> 
				<case value="0x008071" show="SAI Technology"/> 
				<case value="0x008072" show="Microplex Systems Ltd"/> 
				<case value="0x008074" show="Fisher Controls"/> 
				<case value="0x008079" show="Microbus Designs Ltd"/> 
				<case value="0x00807B" show="Artel Communications Corp."/> 
				<case value="0x00807C" show="FiberCom"/> 
				<case value="0x00807D" show="Equinox Systems Inc"/> 
				<case value="0x008082" show="PEP Modular Computers Gmbh"/> 
				<case value="0x008086" show="Computer Generation Inc."/> 
				<case value="0x008087" show="Okidata"/> 
				<case value="0x00808A" show="Summit (?)"/> 
				<case value="0x00808B" show="Dacoll Limited"/> 
				<case value="0x00808C" show="Frontier Software Dev. (Netscout Systems)"/> 
				<case value="0x00808D" show="Westcove Technology BV"/> 
				<case value="0x00808E" show="Radstone Technology"/> 
				<case value="0x008090" show="Microtek International Inc"/> 
				<case value="0x008092" show="Japan Computer Industry, Inc."/> 
				<case value="0x008093" show="Xyron Corporation"/> 
				<case value="0x008094" show="Sattcontrol AB"/> 
				<case value="0x008096" show="HDS (Human Designed Systems) X terminals"/> 
				<case value="0x008098" show="TDK Corporation"/> 
				<case value="0x00809A" show="Novus Networks Ltd"/> 
				<case value="0x00809B" show="Justsystem Corporation"/> 
				<case value="0x00809D" show="Datacraft Manufactur'g Pty Ltd"/> 
				<case value="0x00809F" show="Alcatel Business Systems"/> 
				<case value="0x0080A1" show="Microtest"/> 
				<case value="0x0080A3" show="Lantronix (see also 0800A3)"/> 
				<case value="0x0080A6" show="Republic Technology Inc"/> 
				<case value="0x0080A7" show="Measurex Corp"/> 
				<case value="0x0080AD" show="CNet Technology Used by Telebit (among others)"/> 
				<case value="0x0080AE" show="Hughes Network Systems"/> 
				<case value="0x0080AF" show="Allumer Co., Ltd."/> 
				<case value="0x0080B1" show="Softcom A/S"/> 
				<case value="0x0080B2" show="NET (Network Equipment Technologies)"/> 
				<case value="0x0080B6" show="Themis corporation"/> 
				<case value="0x0080BA" show="Specialix (Asia) Pte Ltd"/> 
				<case value="0x0080C0" show="Penril Datability Networks"/> 
				<case value="0x0080C2" show="IEEE 802.1 Committee"/> 
				<case value="0x0080C6" show="Soho"/> 
				<case value="0x0080C7" show="Xircom, Inc."/> 
				<case value="0x0080C8" show="D-Link (also Solectek Pocket Adapters, and LinkSys PCMCIA)"/> 
				<case value="0x0080C9" show="Alberta Microelectronic Centre"/> 
				<case value="0x0080CE" show="Broadcast Television Systems"/> 
				<case value="0x0080D0" show="Computer Products International"/> 
				<case value="0x0080D3" show="Shiva Appletalk-Ethernet interface"/> 
				<case value="0x0080D4" show="Chase Limited"/> 
				<case value="0x0080D6" show="Apple Mac Portable(?)"/> 
				<case value="0x0080D7" show="Fantum Electronics"/> 
				<case value="0x0080D8" show="Network Peripherals"/> 
				<case value="0x0080DA" show="Bruel &amp; Kjaer"/> 
				<case value="0x0080E0" show="XTP Systems Inc"/> 
				<case value="0x0080E3" show="Coral (?)"/> 
				<case value="0x0080E7" show="Lynwood Scientific Dev Ltd"/> 
				<case value="0x0080EA" show="The Fiber Company"/> 
				<case value="0x0080F0" show="Kyushu Matsushita Electric Co"/> 
				<case value="0x0080F1" show="Opus"/> 
				<case value="0x0080F3" show="Sun Electronics Corp"/> 
				<case value="0x0080F4" show="Telemechanique Electrique"/> 
				<case value="0x0080F5" show="Quantel Ltd"/> 
				<case value="0x0080F7" show="Zenith Communications Products"/> 
				<case value="0x0080FB" show="BVM Limited"/> 
				<case value="0x0080FE" show="Azure Technologies Inc"/> 
				<case value="0x009004" show="3Com"/> 
				<case value="0x009027" show="Intel"/> 
				<case value="0x0090B1" show="Cisco"/> 
				<case value="0x00902B" show="Cisco Ethernet Switches and Light Streams"/> 
				<case value="0x009086" show="Cisco"/> 
				<case value="0x009092" show="Cisco"/> 
				<case value="0x0090AB" show="Cisco"/> 
				<case value="0x0090B1" show="Cisco"/> 
				<case value="0x0090F2" show="Cisco Ethernet Switches and Light Streams"/> 
				<case value="0x00A000" show="Bay Networks Ethernet switch"/> 
				<case value="0x00A00C" show="Kingmax Technology Inc. PCMCIA card"/> 
				<case value="0x00A024" show="3com"/> 
				<case value="0x00A03E" show="ATM Forum"/> 
				<case value="0x00A040" show="Apple (PCI Mac)"/> 
				<case value="0x00A04B" show="Sonic Systems Inc. EtherFE 10/100 PCI for Mac or PC"/> 
				<case value="0x00A073" show="Com21"/> 
				<case value="0x00A083" show="Intel"/> 
				<case value="0x00A092" show="Intermate International [LAN printer interfaces]"/> 
				<case value="0x00A0AE" show="Network Peripherals, Inc."/> 
				<case value="0x00A0C8" show="Adtran, Inc."/> 
				<case value="0x00A0C9" show="Intel (PRO100B and PRO100+) [used on Cisco PIX firewall among others]"/> 
				<case value="0x00A0CC" show="Lite-On (used by MacSense in Adapter for Mac, also seen in PCs)"/> 
				<case value="0x00A0D1" show="National Semiconductor [COMPAQ Docking Station]"/> 
				<case value="0x00A0D2" show="Allied Telesyn"/> 
				<case value="0x00AA00" show="Intel"/> 
				<case value="0x00B0d0" show="Computer Products International"/> 
				<case value="0x00C000" show="Lanoptics Ltd"/> 
				<case value="0x00C001" show="Diatek Patient Managment"/> 
				<case value="0x00C002" show="Sercomm Corporation"/> 
				<case value="0x00C003" show="Globalnet Communications"/> 
				<case value="0x00C004" show="Japan Business Computer Co.Ltd"/> 
				<case value="0x00C005" show="Livingston Enterprises Inc Portmaster (OEMed by Cayman)"/> 
				<case value="0x00C006" show="Nippon Avionics Co Ltd"/> 
				<case value="0x00C007" show="Pinnacle Data Systems Inc"/> 
				<case value="0x00C008" show="Seco SRL"/> 
				<case value="0x00C009" show="KT Technology (s) Pte Inc"/> 
				<case value="0x00C00A" show="Micro Craft"/> 
				<case value="0x00C00B" show="Norcontrol A.S."/> 
				<case value="0x00C00C" show="ARK PC Technology, Inc."/> 
				<case value="0x00C00D" show="Advanced Logic Research Inc"/> 
				<case value="0x00C00E" show="Psitech Inc"/> 
				<case value="0x00C00F" show="QNX Software Systems Ltd. [also Quantum Software Systems Ltd]"/> 
				<case value="0x00C011" show="Interactive Computing Devices"/> 
				<case value="0x00C012" show="Netspan Corp"/> 
				<case value="0x00C013" show="Netrix"/> 
				<case value="0x00C014" show="Telematics Calabasas"/> 
				<case value="0x00C015" show="New Media Corp"/> 
				<case value="0x00C016" show="Electronic Theatre Controls"/> 
				<case value="0x00C017" show="Fluke"/> 
				<case value="0x00C018" show="Lanart Corp"/> 
				<case value="0x00C01A" show="Corometrics Medical Systems"/> 
				<case value="0x00C01B" show="Socket Communications"/> 
				<case value="0x00C01C" show="Interlink Communications Ltd."/> 
				<case value="0x00C01D" show="Grand Junction Networks, Inc. (Cisco Catalyst also reported)"/> 
				<case value="0x00C01F" show="S.E.R.C.E.L."/> 
				<case value="0x00C020" show="Arco Electronic, Control Ltd."/> 
				<case value="0x00C021" show="Netexpress"/> 
				<case value="0x00C023" show="Tutankhamon Electronics"/> 
				<case value="0x00C024" show="Eden Sistemas De Computacao SA"/> 
				<case value="0x00C025" show="Dataproducts Corporation"/> 
				<case value="0x00C027" show="Cipher Systems, Inc."/> 
				<case value="0x00C028" show="Jasco Corporation"/> 
				<case value="0x00C029" show="Kabel Rheydt AG"/> 
				<case value="0x00C02A" show="Ohkura Electric Co"/> 
				<case value="0x00C02B" show="Gerloff Gesellschaft Fur"/> 
				<case value="0x00C02C" show="Centrum Communications, Inc."/> 
				<case value="0x00C02D" show="Fuji Photo Film Co., Ltd."/> 
				<case value="0x00C02E" show="Netwiz"/> 
				<case value="0x00C02F" show="Okuma Corp"/> 
				<case value="0x00C030" show="Integrated Engineering B. V."/> 
				<case value="0x00C031" show="Design Research Systems, Inc."/> 
				<case value="0x00C032" show="I-Cubed Limited"/> 
				<case value="0x00C033" show="Telebit Corporation"/> 
				<case value="0x00C034" show="Dale Computer Corporation"/> 
				<case value="0x00C035" show="Quintar Company"/> 
				<case value="0x00C036" show="Raytech Electronic Corp"/> 
				<case value="0x00C039" show="Silicon Systems"/> 
				<case value="0x00C03B" show="Multiaccess Computing Corp"/> 
				<case value="0x00C03C" show="Tower Tech S.R.L."/> 
				<case value="0x00C03D" show="Wiesemann &amp; Theis Gmbh"/> 
				<case value="0x00C03E" show="Fa. Gebr. Heller Gmbh"/> 
				<case value="0x00C03F" show="Stores Automated Systems Inc"/> 
				<case value="0x00C040" show="ECCI"/> 
				<case value="0x00C041" show="Digital Transmission Systems"/> 
				<case value="0x00C042" show="Datalux Corp."/> 
				<case value="0x00C043" show="Stratacom"/> 
				<case value="0x00C044" show="Emcom Corporation"/> 
				<case value="0x00C045" show="Isolation Systems Inc"/> 
				<case value="0x00C046" show="Kemitron Ltd"/> 
				<case value="0x00C047" show="Unimicro Systems Inc"/> 
				<case value="0x00C048" show="Bay Technical Associates"/> 
				<case value="0x00C049" show="US Robotics Total Control (tm) NETServer Card"/> 
				<case value="0x00C04D" show="Mitec Ltd"/> 
				<case value="0x00C04E" show="Comtrol Corporation"/> 
				<case value="0x00C04F" show="Dell"/> 
				<case value="0x00C050" show="Toyo Denki Seizo K.K."/> 
				<case value="0x00C051" show="Advanced Integration Research"/> 
				<case value="0x00C055" show="Modular Computing Technologies"/> 
				<case value="0x00C056" show="Somelec"/> 
				<case value="0x00C057" show="Myco Electronics"/> 
				<case value="0x00C058" show="Dataexpert Corp"/> 
				<case value="0x00C059" show="Nippondenso Corp"/> 
				<case value="0x00C05B" show="Networks Northwest Inc"/> 
				<case value="0x00C05C" show="Elonex PLC"/> 
				<case value="0x00C05D" show="L&amp;N Technologies"/> 
				<case value="0x00C05E" show="Vari-Lite Inc"/> 
				<case value="0x00C060" show="ID Scandinavia A/S"/> 
				<case value="0x00C061" show="Solectek Corporation"/> 
				<case value="0x00C063" show="Morning Star Technologies Inc May be miswrite of 0003C6"/> 
				<case value="0x00C064" show="General Datacomm Ind Inc"/> 
				<case value="0x00C065" show="Scope Communications Inc"/> 
				<case value="0x00C066" show="Docupoint, Inc."/> 
				<case value="0x00C067" show="United Barcode Industries"/> 
				<case value="0x00C068" show="Philp Drake Electronics Ltd"/> 
				<case value="0x00C069" show="California Microwave Inc"/> 
				<case value="0x00C06A" show="Zahner-Elektrik Gmbh &amp; Co KG"/> 
				<case value="0x00C06B" show="OSI Plus Corporation"/> 
				<case value="0x00C06C" show="SVEC Computer Corp"/> 
				<case value="0x00C06D" show="Boca Research, Inc."/> 
				<case value="0x00C06F" show="Komatsu Ltd"/> 
				<case value="0x00C070" show="Sectra Secure-Transmission AB"/> 
				<case value="0x00C071" show="Areanex Communications, Inc."/> 
				<case value="0x00C072" show="KNX Ltd"/> 
				<case value="0x00C073" show="Xedia Corporation"/> 
				<case value="0x00C074" show="Toyoda Automatic Loom Works Ltd"/> 
				<case value="0x00C075" show="Xante Corporation "/> 
				<case value="0x00C076" show="I-Data International A-S"/> 
				<case value="0x00C077" show="Daewoo Telecom Ltd"/> 
				<case value="0x00C078" show="Computer Systems Engineering"/> 
				<case value="0x00C079" show="Fonsys Co Ltd"/> 
				<case value="0x00C07A" show="Priva BV"/> 
				<case value="0x00C07B" show="Ascend Communications ISDN bridges/routers"/> 
				<case value="0x00C07D" show="RISC Developments Ltd"/> 
				<case value="0x00C07F" show="Nupon Computing Corp"/> 
				<case value="0x00C080" show="Netstar Inc"/> 
				<case value="0x00C081" show="Metrodata Ltd"/> 
				<case value="0x00C082" show="Moore Products Co"/> 
				<case value="0x00C084" show="Data Link Corp Ltd"/> 
				<case value="0x00C085" show="Canon"/> 
				<case value="0x00C086" show="The Lynk Corporation"/> 
				<case value="0x00C087" show="UUNET Technologies Inc"/> 
				<case value="0x00C089" show="Telindus Distribution"/> 
				<case value="0x00C08A" show="Lauterbach Datentechnik Gmbh"/> 
				<case value="0x00C08B" show="RISQ Modular Systems Inc"/> 
				<case value="0x00C08C" show="Performance Technologies Inc"/> 
				<case value="0x00C08D" show="Tronix Product Development"/> 
				<case value="0x00C08E" show="Network Information Technology"/> 
				<case value="0x00C08F" show="Matsushita Electric Works, Ltd."/> 
				<case value="0x00C090" show="Praim S.R.L."/> 
				<case value="0x00C091" show="Jabil Circuit, Inc."/> 
				<case value="0x00C092" show="Mennen Medical Inc"/> 
				<case value="0x00C093" show="Alta Research Corp."/> 
				<case value="0x00C095" show="Znyx (Network Appliance); Jupiter Systems (MX-700); Apple (G3) all seen"/> 
				<case value="0x00C096" show="Tamura Corporation"/> 
				<case value="0x00C097" show="Archipel SA"/> 
				<case value="0x00C098" show="Chuntex Electronic Co., Ltd."/> 
				<case value="0x00C09B" show="Reliance Comm/Tec, R-Tec Systems Inc"/> 
				<case value="0x00C09C" show="TOA Electronic Ltd"/> 
				<case value="0x00C09D" show="Distributed Systems Int'l, Inc."/> 
				<case value="0x00C09F" show="Quanta Computer Inc"/> 
				<case value="0x00C0A0" show="Advance Micro Research, Inc."/> 
				<case value="0x00C0A1" show="Tokyo Denshi Sekei Co"/> 
				<case value="0x00C0A2" show="Intermedium A/S"/> 
				<case value="0x00C0A3" show="Dual Enterprises Corporation"/> 
				<case value="0x00C0A4" show="Unigraf OY"/> 
				<case value="0x00C0A7" show="SEEL Ltd"/> 
				<case value="0x00C0A8" show="GVC Corporation"/> 
				<case value="0x00C0A9" show="Barron McCann Ltd"/> 
				<case value="0x00C0AA" show="Silicon Valley Computer"/> 
				<case value="0x00C0AB" show="Jupiter Technology Inc"/> 
				<case value="0x00C0AC" show="Gambit Computer Communications"/> 
				<case value="0x00C0AD" show="Computer Communication Systems"/> 
				<case value="0x00C0AE" show="Towercom Co Inc DBA PC House"/> 
				<case value="0x00C0B0" show="GCC Technologies,Inc."/> 
				<case value="0x00C0B2" show="Norand Corporation"/> 
				<case value="0x00C0B3" show="Comstat Datacomm Corporation"/> 
				<case value="0x00C0B4" show="Myson Technology Inc"/> 
				<case value="0x00C0B5" show="Corporate Network Systems Inc"/> 
				<case value="0x00C0B6" show="Meridian Data Inc"/> 
				<case value="0x00C0B7" show="American Power Conversion Corp"/> 
				<case value="0x00C0B8" show="Fraser's Hill Ltd."/> 
				<case value="0x00C0B9" show="Funk Software Inc"/> 
				<case value="0x00C0BA" show="Netvantage"/> 
				<case value="0x00C0BB" show="Forval Creative Inc"/> 
				<case value="0x00C0BD" show="Inex Technologies, Inc."/> 
				<case value="0x00C0BE" show="Alcatel - Sel"/> 
				<case value="0x00C0BF" show="Technology Concepts Ltd"/> 
				<case value="0x00C0C0" show="Shore Microsystems Inc"/> 
				<case value="0x00C0C1" show="Quad/Graphics Inc"/> 
				<case value="0x00C0C2" show="Infinite Networks Ltd."/> 
				<case value="0x00C0C3" show="Acuson Computed Sonography"/> 
				<case value="0x00C0C4" show="Computer Operational"/> 
				<case value="0x00C0C5" show="SID Informatica"/> 
				<case value="0x00C0C6" show="Personal Media Corp"/> 
				<case value="0x00C0C8" show="Micro Byte Pty Ltd"/> 
				<case value="0x00C0C9" show="Bailey Controls Co"/> 
				<case value="0x00C0CA" show="Alfa, Inc."/> 
				<case value="0x00C0CB" show="Control Technology Corporation"/> 
				<case value="0x00C0CD" show="Comelta S.A."/> 
				<case value="0x00C0C0" show="Ratoc System Inc"/> 
				<case value="0x00C0D1" show="Comtree Technology Corporation (EFA also reported)"/> 
				<case value="0x00C0D2" show="Syntellect Inc"/> 
				<case value="0x00C0D4" show="Axon Networks Inc"/> 
				<case value="0x00C0D5" show="Quancom Electronic Gmbh"/> 
				<case value="0x00C0D6" show="J1 Systems, Inc."/> 
				<case value="0x00C0D9" show="Quinte Network Confidentiality Equipment Inc"/> 
				<case value="0x00C0DB" show="IPC Corporation (Pte) Ltd"/> 
				<case value="0x00C0DC" show="EOS Technologies, Inc."/> 
				<case value="0x00C0DE" show="ZComm Inc"/> 
				<case value="0x00C0DF" show="Kye Systems Corp"/> 
				<case value="0x00C0E1" show="Sonic Solutions"/> 
				<case value="0x00C0E2" show="Calcomp, Inc."/> 
				<case value="0x00C0E3" show="Ositech Communications Inc"/> 
				<case value="0x00C0E4" show="Landis &amp; Gyr Powers Inc"/> 
				<case value="0x00C0E5" show="GESPAC S.A."/> 
				<case value="0x00C0E6" show="TXPORT"/> 
				<case value="0x00C0E7" show="Fiberdata AB"/> 
				<case value="0x00C0E8" show="Plexcom Inc"/> 
				<case value="0x00C0E9" show="Oak Solutions Ltd"/> 
				<case value="0x00C0EA" show="Array Technology Ltd."/> 
				<case value="0x00C0EC" show="Dauphin Technology"/> 
				<case value="0x00C0ED" show="US Army Electronic Proving Ground"/> 
				<case value="0x00C0EE" show="Kyocera Corporation"/> 
				<case value="0x00C0EF" show="Abit Corporation"/> 
				<case value="0x00C0F0" show="Kingston Technology Corporation"/> 
				<case value="0x00C0F1" show="Shinko Electric Co Ltd"/> 
				<case value="0x00C0F2" show="Transition Engineering Inc"/> 
				<case value="0x00C0F3" show="Network Communications Corp"/> 
				<case value="0x00C0F4" show="Interlink System Co., Ltd."/> 
				<case value="0x00C0F5" show="Metacomp Inc"/> 
				<case value="0x00C0F6" show="Celan Technology Inc."/> 
				<case value="0x00C0F7" show="Engage Communication, Inc."/> 
				<case value="0x00C0F8" show="About Computing Inc."/> 
				<case value="0x00C0FA" show="Canary Communications Inc"/> 
				<case value="0x00C0FB" show="Advanced Technology Labs"/> 
				<case value="0x00C0FC" show="ASDG Incorporated"/> 
				<case value="0x00C0FD" show="Prosum"/> 
				<case value="0x00C0FF" show="Box Hill Systems Corporation"/> 
				<case value="0x00DD00" show="Ungermann-Bass IBM RT"/> 
				<case value="0x00DD01" show="Ungermann-Bass"/> 
				<case value="0x00DD08" show="Ungermann-Bass"/> 
				<case value="0x00E011" show="Uniden Corporation"/> 
				<case value="0x00E014" show="Cisco"/> 
				<case value="0x00E016" show="rapid-city (now a part of bay networks)"/> 
				<case value="0x00E018" show="Asustek Intel 82558-based Integrated Fast Ethernet for WIM"/> 
				<case value="0x00E01E" show="Cisco"/> 
				<case value="0x00E029" show="SMC EtherPower II 10/100"/> 
				<case value="0x00E02C" show="AST - built into 5166M PC motherboard (win95 id's as Intel)"/> 
				<case value="0x00E034" show="Cisco"/> 
				<case value="0x00E039" show="Paradyne 7112 T1 DSU/CSU"/> 
				<case value="0x00E04F" show="Cisco"/> 
				<case value="0x00E07D" show="Encore (Netronix?) 10/100 PCI Fast ethernet card"/> 
				<case value="0x00E081" show="Tyan Computer Corp. Onboard Intel 82558 10/100"/> 
				<case value="0x00E083" show="Jato Technologies, Inc."/> 
				<case value="0x00E08F" show="Cisco Systems Catalyst 2900 series"/> 
				<case value="0x00E098" show="Linksys PCMCIA card"/> 
				<case value="0x00E0A3" show="Cisco Systems Catalyst 1924"/> 
				<case value="0x00E0B0" show="Cisco Systems Various systems reported"/> 
				<case value="0x00E0B8" show="AMD PCNet in a Gateway 2000"/> 
				<case value="0x00E0C5" show="BCOM Electronics Inc."/> 
				<case value="0x00E0ED" show="New Link"/> 
				<case value="0x00E0F7" show="Cisco"/> 
				<case value="0x00E0F9" show="Cisco"/> 
				<case value="0x00E0FE" show="Cisco"/> 
				<case value="0x020406" show="BBN (Bolt Beranek and Newman) internal usage (not registered)"/> 
				<case value="0x020701" show="Racal-InterLan OR Racal-Datacom (ex-Interlan) DEC (UNIBUS or QBUS), Apollo, Cisco OR MICOM"/> 
				<case value="0x026060" show="3Com"/> 
				<case value="0x026086" show="Satelcom MegaPac (UK)"/> 
				<case value="0x02608C" show="3Com IBM PC; Imagen; Valid; Cisco; Macintosh"/> 
				<case value="0x02A0C9" show="Intel"/> 
				<case value="0x02AA3C" show="Olivetti"/> 
				<case value="0x02CF1F" show="CMC Masscomp; Silicon Graphics; Prime EXL"/> 
				<case value="0x02E03B" show="Prominet Corporation Gigabit Ethernet Switch"/> 
				<case value="0x02E6D3" show="BTI (Bus-Tech, Inc.) IBM Mainframes"/> 
				<case value="0x048845" show="Bay Networks token ring line card"/> 
				<case value="0x080001" show="Computer Vision"/> 
				<case value="0x080002" show="3Com (formerly Bridge)"/> 
				<case value="0x080003" show="ACC (Advanced Computer Comm.)"/> 
				<case value="0x080005" show="Symbolics Symbolics LISP machines"/> 
				<case value="0x080006" show="Siemens Nixdorf PC clone"/> 
				<case value="0x080007" show="Apple"/> 
				<case value="0x080008" show="BBN (Bolt Beranek and Neuman)"/> 
				<case value="0x080009" show="Hewlett-Packard"/> 
				<case value="0x08000A" show="Nestar Systems"/> 
				<case value="0x08000B" show="Unisys also Ascom-Timeplex (former Unisys subsidiary)"/> 
				<case value="0x08000D" show="ICL (International Computers, Ltd.)"/> 
				<case value="0x08000E" show="NCR/AT&amp;T"/> 
				<case value="0x08000F" show="SMC (Standard Microsystems Corp.)"/> 
				<case value="0x080010" show="AT&amp;T [misrepresentation of 800010?]"/> 
				<case value="0x080011" show="Tektronix, Inc."/> 
				<case value="0x080014" show="Excelan BBN Butterfly, Masscomp, Silicon Graphics"/> 
				<case value="0x080017" show="NSC (National Semiconductor Corp.) (used to have Network System Corp., wrong NSC)"/> 
				<case value="0x08001A" show="Data General (Tiara ?)"/> 
				<case value="0x08001B" show="Data General"/> 
				<case value="0x08001E" show="Apollo"/> 
				<case value="0x08001F" show="Sharp"/> 
				<case value="0x080020" show="Sun Sun machines"/> 
				<case value="0x080022" show="NBI (Nothing But Initials)"/> 
				<case value="0x080023" show="Matsushita Denso"/> 
				<case value="0x080025" show="CDC"/> 
				<case value="0x080026" show="Norsk Data (Nord)"/> 
				<case value="0x080027" show="PCS Computer Systems GmbH"/> 
				<case value="0x080028" show="TI Explorer"/> 
				<case value="0x08002B" show="DEC"/> 
				<case value="0x08002E" show="Metaphor"/> 
				<case value="0x08002F" show="Prime Computer Prime 50-Series LHC300"/> 
				<case value="0x080030" show="CERN"/> 
				<case value="0x080032" show="Tigan"/> 
				<case value="0x080036" show="Intergraph CAE stations"/> 
				<case value="0x080037" show="Fujitsu-Xerox"/> 
				<case value="0x080038" show="Bull"/> 
				<case value="0x080039" show="Spider Systems"/> 
				<case value="0x08003B" show="Torus Systems"/> 
				<case value="0x08003D" show="cadnetix"/> 
				<case value="0x08003E" show="Motorola VME bus processor modules"/> 
				<case value="0x080041" show="DCA (Digital Comm. Assoc.)"/> 
				<case value="0x080044" show="DSI (DAVID Systems, Inc.)"/> 
				<case value="0x080045" show="Xylogics? (maybe Xylogics, but they claim not to know this number)"/> 
				<case value="0x080046" show="Sony"/> 
				<case value="0x080047" show="Sequent"/> 
				<case value="0x080048" show="Eurotherm Gauging Systems"/> 
				<case value="0x080049" show="Univation"/> 
				<case value="0x08004C" show="Encore"/> 
				<case value="0x08004E" show="BICC [3com bought BICC, so may appear on 3com equipment as well]"/> 
				<case value="0x080051" show="Experdata"/> 
				<case value="0x080056" show="Stanford University"/> 
				<case value="0x080057" show="Evans &amp; Sutherland (?)"/> 
				<case value="0x080058" show="??? DECsystem-20"/> 
				<case value="0x08005A" show="IBM"/> 
				<case value="0x080066" show="AGFA printers, phototypesetters etc."/> 
				<case value="0x080067" show="Comdesign"/> 
				<case value="0x080068" show="Ridge"/> 
				<case value="0x080069" show="Silicon Graphics"/> 
				<case value="0x08006A" show="ATTst (?)"/> 
				<case value="0x08006E" show="Excelan OR Concurrent Masscomp"/> 
				<case value="0x080070" show="Mitsubishi"/> 
				<case value="0x080074" show="Casio"/> 
				<case value="0x080075" show="DDE (Danish Data Elektronik A/S)"/> 
				<case value="0x080077" show="TSL (now Retix)"/> 
				<case value="0x080079" show="Silicon Graphics"/> 
				<case value="0x08007C" show="Vitalink TransLAN III"/> 
				<case value="0x080080" show="XIOS"/> 
				<case value="0x080081" show="Crosfield Electronics"/> 
				<case value="0x080083" show="Seiko Denshi"/> 
				<case value="0x080086" show="Imagen/QMS"/> 
				<case value="0x080087" show="Xyplex terminal servers"/> 
				<case value="0x080088" show="McDATA Corporation"/> 
				<case value="0x080089" show="Kinetics AppleTalk-Ethernet interface"/> 
				<case value="0x08008B" show="Pyramid"/> 
				<case value="0x08008D" show="XyVision XyVision machines"/> 
				<case value="0x08008E" show="Tandem / Solbourne Computer ?"/> 
				<case value="0x08008F" show="Chipcom Corp."/> 
				<case value="0x080090" show="Retix Inc Bridges"/> 
				<case value="0x09006A" show="AT&amp;T"/> 
				<case value="0x10005A" show="IBM"/> 
				<case value="0x100090" show="Hewlett-Packard Advisor products"/> 
				<case value="0x1000D4" show="DEC"/> 
				<case value="0x1000E0" show="Apple A/UX (modified addresses for licensing)"/> 
				<case value="0x2E2E2E" show="LAA (Locally Administered Address) for Meditech Systems"/> 
				<case value="0x3C0000" show="3Com dual function (V.34 modem + Ethernet) card"/> 
				<case value="0x400003" show="Net Ware (?)"/> 
				<case value="0x444553" show="Microsoft (Windows95 internal adapters)"/> 
				<case value="0x444649" show="DFI (Diamond Flower Industries)"/> 
				<case value="0x475443" show="GTC (Not registered!) (This number is a multicast!)"/> 
				<case value="0x484453" show="HDS ???"/> 
				<case value="0x484C00" show="Network Solutions"/> 
				<case value="0x4854E8" show="winbond?"/> 
				<case value="0x4C424C" show="Information Modes software modified addresses (not registered?)"/> 
				<case value="0x525400" show="Realtek (UpTech? also reported)"/> 
				<case value="0x52544C" show="Novell 2000"/> 
				<case value="0x5254AB" show="REALTEK (a Realtek 8029 based PCI Card)"/> 
				<case value="0x565857" show="Aculab plc audio bridges"/> 
				<case value="0x800010" show="AT&amp;T [misrepresented as 080010? One source claims this is correct]"/> 
				<case value="0x80AD00" show="CNET Technology Inc. (Probably an error, see instead 0080AD)"/> 
				<case value="0xAA0000" show="DEC obsolete"/> 
				<case value="0xAA0001" show="DEC obsolete"/> 
				<case value="0xAA0002" show="DEC obsolete"/> 
				<case value="0xAA0003" show="DEC Global physical address for some DEC machines"/> 
				<case value="0xAA0004" show="DEC Local logical address for systems running DECNET"/> 
				<case value="0xC00000" show="Western Digital (may be reversed 00 00 C0?)"/> 
				<case value="0xCF0001" show="Data Comm for Business"/> 
				<case value="0xEC1000" show="Enance Source Co., Ltd. PC clones(?)"/> 
				<case value="0xE20C0F" show="Kingston Technologies"/>
				<default show="code not available"/>
			</switch>
		</showmap>
	</showtemplate>



	<!-- Generic template for visualizing TR, FDDI MAC addresses -->
	<showtemplate name="MACaddressTR" showtype="hexnox" showgrp="3" showsep="-">
		<showdtl>
			<protofield showdata="showvalue"/>
			<if expr="(buf2int(this[0:1]) bitwand 0b10000000) == 0b10000000">
				<!-- It extracts the first byte of the MAC address, then it matches the result against -->
				<!-- the 'xxxxxxx1' pattern -->
				<!-- Extract the first byte of the MAC address -->
				<!-- If it is a multicast or broadcast address, the first bit will be '1' -->
				
				<if-true>
					<if expr="this == '\xFF\xFF\xFF\xFF\xFF\xFF'">>
						<if-true>
							<text value=" (Broadcast address)"/>
						</if-true>

						<if-false>
							<text value=" (Multicast address)"/>
						</if-false>		
					</if>
				</if-true>

				<if-false>
					<text value=" (Unicast address, vendor "/>
					<protofield showdata="showmap"/>
					<text value=")"/>
				</if-false>
			</if>
		</showdtl>
	</showtemplate>

</visualization>

</netpdl>
